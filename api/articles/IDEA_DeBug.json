{"title":"IDEA_Debug","uid":"bda54d69820bfb5fcc76ba62cbc330ef","slug":"IDEA_DeBug","date":"2020-12-06T07:54:31.221Z","updated":"2024-05-29T15:18:31.906Z","comments":true,"path":"api/articles/IDEA_DeBug.json","keywords":null,"cover":[],"content":"<h4 id=\"01-Debug简介和意义\"><a href=\"#01-Debug简介和意义\" class=\"headerlink\" title=\"01_Debug简介和意义\"></a>01_Debug简介和意义</h4><ul>\n<li><p>什么是程序DeBug？</p>\n<ul>\n<li><p>Debug，是程序开发人员必会的一项调试程序的技能。</p>\n</li>\n<li><p>企业中程序开发和程序调试的比例为1:1.5，可以说如果你不会调试程序，你就没有办法从事编程工作。</p>\n</li>\n</ul>\n</li>\n<li><p>Debug能帮助我们做什么？</p>\n<ol>\n<li>追踪代码的运行流程。</li>\n<li>程序运行异常定位。</li>\n<li>线上问题追踪。</li>\n</ol>\n</li>\n<li><p>Debug对于程序学习者的意义</p>\n<ol>\n<li>通过调试能够更好的查看程序的执行流程。</li>\n<li>复杂的程序逻辑，通过老师的口述讲解，很难理解清楚，这个时候借助调试能够很好的帮助同学们理解程序。</li>\n<li>定位问题，提高自我解决问题的能力。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"02-IDEA中的Debug步骤\"><a href=\"#02-IDEA中的Debug步骤\" class=\"headerlink\" title=\"02_IDEA中的Debug步骤\"></a>02_IDEA中的Debug步骤</h4><ul>\n<li><p>设置断点（F9）</p>\n</li>\n<li><p>调试程序（8个按钮）</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/idea_01.jpg\"></p>\n<table>\n<thead>\n<tr>\n<th>按钮</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_02.jpg\"></td>\n<td>(Alt + F10)：如果你的光标在其它行或其它页面，点击这个按钮可跳转到当前代码执行的行</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_03.jpg\"></td>\n<td>(F8)：步过，一行一行地往下走，如果这一行上有方法不会进入方法。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_04.jpg\" alt=\"idea_04\"></td>\n<td>(F7)：步入。如果当前行有方法，可以进入方法内部，一般用于进入自定义方法内，不会进入官方类库的方法。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_05.jpg\" alt=\"idea_05\"></td>\n<td>(Alt + Shift + F7)：强制步入，能进入任何方法，查看底层源码的时候可以用这个进入官方类库的方法。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_06.jpg\"></td>\n<td>(Shift + F8)：步出，从步入的方法内退出到方法调用处，此时方法已执行完毕，只是还没有完成赋值。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_07.jpg\"></td>\n<td>回退断点。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_08.jpg\"></td>\n<td>(Alt + F9)：运行到光标处，你可以将光标定位到你需要查看的那一行，然后使用这个功能，代码会运行至光标行，而不需要打断点。</td>\n</tr>\n<tr>\n<td><img src=\"https://vegetabhlimg.netlify.app/img/idea_09.jpg\"></td>\n<td>(Alt + F8)：计算表达式。</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>观察变量</p>\n<ul>\n<li>查看变量有三种方式：<ul>\n<li>程序区查看变量</li>\n<li>Debugger的Variables中查看变量</li>\n<li>鼠标悬停到变量名上会弹出当前变量的值</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/idea_10.jpg\"></p>\n</li>\n<li><p>查看输出</p>\n</li>\n</ul>\n<h4 id=\"03-跳转到当前代码执行的行\"><a href=\"#03-跳转到当前代码执行的行\" class=\"headerlink\" title=\"03_跳转到当前代码执行的行\"></a>03_跳转到当前代码执行的行</h4><ul>\n<li><p>跳转到当前代码执行的行（Alt + F10）<img src=\"https://vegetabhlimg.netlify.app/img/idea_02.jpg\"></p>\n</li>\n<li><p>作用</p>\n<ul>\n<li>使程序窗口切换到当前正在运行的程序处。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"04-步过调试的使用\"><a href=\"#04-步过调试的使用\" class=\"headerlink\" title=\"04_步过调试的使用\"></a>04_步过调试的使用</h4><ul>\n<li>步过调试<ul>\n<li>步过调试按钮（F8）<img src=\"https://vegetabhlimg.netlify.app/img/idea_03.jpg\"></li>\n</ul>\n</li>\n<li>作用<ul>\n<li>步过，一行一行地往下走，如果这一行上有方法不会进入方法。</li>\n<li>常用于调试过程中不想进入调用的方法体的情况。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"05-步入调试的使用\"><a href=\"#05-步入调试的使用\" class=\"headerlink\" title=\"05_步入调试的使用\"></a>05_步入调试的使用</h4><ul>\n<li><p>步入调试</p>\n<ul>\n<li>步过调试按钮（F7）<img src=\"https://vegetabhlimg.netlify.app/img/idea_04.jpg\" alt=\"idea_04\"></li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li><p>步入，一行一行地往下走，如果这一行上有方法，则进入方法内部。</p>\n</li>\n<li><p>一般用于进入自定义方法内，不会进入官方类库的方法。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"06-强制步入调试的使用\"><a href=\"#06-强制步入调试的使用\" class=\"headerlink\" title=\"06_强制步入调试的使用\"></a>06_强制步入调试的使用</h4><ul>\n<li><p>强制步入调试</p>\n<ul>\n<li>强制步入调试按钮（Alt + Shift + F7）<img src=\"https://vegetabhlimg.netlify.app/img/idea_05.jpg\" alt=\"idea_05\"></li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li><p>进入官方类库方法</p>\n</li>\n<li><p>帮助我们学习和查看JDK源码</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"07-步出调试的使用\"><a href=\"#07-步出调试的使用\" class=\"headerlink\" title=\"07_步出调试的使用\"></a>07_步出调试的使用</h4><ul>\n<li><p>步出调试</p>\n<ul>\n<li>步出调试按钮（Shift + F8）<img src=\"https://vegetabhlimg.netlify.app/img/idea_06.jpg\"></li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li>从方法内退出到方法调用处。</li>\n<li>调试的时候，有时候会跳入到自己不想查看的方法体，这个时候使用步出。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"08-回退断点调试的使用\"><a href=\"#08-回退断点调试的使用\" class=\"headerlink\" title=\"08_回退断点调试的使用\"></a>08_回退断点调试的使用</h4><ul>\n<li><p>回退断点</p>\n<ul>\n<li>回退断点按钮<img src=\"https://vegetabhlimg.netlify.app/img/idea_07.jpg\"></li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li><p>回退到当前方法的调用处。</p>\n</li>\n<li><p>当想重新查看该方法体的执行过程时，不用重新启动Debug，可以使用回退断点方式。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"09-运行到光标处\"><a href=\"#09-运行到光标处\" class=\"headerlink\" title=\"09_运行到光标处\"></a>09_运行到光标处</h4><ul>\n<li>运行到光标处<ul>\n<li>运行光标处按钮 （F9）<img src=\"https://vegetabhlimg.netlify.app/img/idea_08.jpg\"></li>\n<li>作用<ul>\n<li>使程序运行到光标处，而无需设置断点。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"10-计算表达式\"><a href=\"#10-计算表达式\" class=\"headerlink\" title=\"10_计算表达式\"></a>10_计算表达式</h4><ul>\n<li><p>计算表达式</p>\n<ul>\n<li><p>计算表达式按钮（Alt + F8）<img src=\"https://vegetabhlimg.netlify.app/img/idea_09.jpg\"></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/idea_11.jpg\"></p>\n</li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li>设置变量，在计算表达式的框里，可以改变变量的值，这样有时候就能很方便我们去调试各种值的情况了。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"11-条件断点\"><a href=\"#11-条件断点\" class=\"headerlink\" title=\"11_条件断点\"></a>11_条件断点</h4><ul>\n<li><p>条件断点</p>\n<ul>\n<li><p>右键单击断点处，可以设置进入断点的条件</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/idea_12.jpg\"></p>\n</li>\n</ul>\n</li>\n<li><p>作用</p>\n<ul>\n<li>通过设置断点条件，在满足条件时，才停在断点处，否则直接运行。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"12-多线程调试\"><a href=\"#12-多线程调试\" class=\"headerlink\" title=\"12_多线程调试\"></a>12_多线程调试</h4><ul>\n<li>步骤<ul>\n<li><p>多线程调试，需要调整断点挂起级别为Thread</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/idea_13.jpg\"></p>\n</li>\n<li><p>Frame中选择线程进行调试</p>\n</li>\n</ul>\n</li>\n</ul>\n","feature":null,"text":"01_Debug简介和意义 什么是程序DeBug？ Debug，是程序开发人员必会的一项调试程序的技能。 企业中程序开发和程序调试的比例为1:1.5，可以说如果...","permalink":"/post/IDEA_DeBug","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#01-Debug%E7%AE%80%E4%BB%8B%E5%92%8C%E6%84%8F%E4%B9%89\"><span class=\"toc-text\">01_Debug简介和意义</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#02-IDEA%E4%B8%AD%E7%9A%84Debug%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">02_IDEA中的Debug步骤</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#03-%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%BD%93%E5%89%8D%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E7%9A%84%E8%A1%8C\"><span class=\"toc-text\">03_跳转到当前代码执行的行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#04-%E6%AD%A5%E8%BF%87%E8%B0%83%E8%AF%95%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">04_步过调试的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#05-%E6%AD%A5%E5%85%A5%E8%B0%83%E8%AF%95%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">05_步入调试的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#06-%E5%BC%BA%E5%88%B6%E6%AD%A5%E5%85%A5%E8%B0%83%E8%AF%95%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">06_强制步入调试的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#07-%E6%AD%A5%E5%87%BA%E8%B0%83%E8%AF%95%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">07_步出调试的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#08-%E5%9B%9E%E9%80%80%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">08_回退断点调试的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#09-%E8%BF%90%E8%A1%8C%E5%88%B0%E5%85%89%E6%A0%87%E5%A4%84\"><span class=\"toc-text\">09_运行到光标处</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#10-%E8%AE%A1%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">10_计算表达式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#11-%E6%9D%A1%E4%BB%B6%E6%96%AD%E7%82%B9\"><span class=\"toc-text\">11_条件断点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#12-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">12_多线程调试</span></a></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"tf-gpu","uid":"0d6a3caed7148d18d6e5a146bd1ec2e3","slug":"tf-gpu","date":"2020-12-21T08:49:38.158Z","updated":"2020-12-21T08:57:29.823Z","comments":true,"path":"api/articles/tf-gpu.json","keywords":null,"cover":null,"text":"配置tensorflow环境先提前下载好Cudnn和CUDA并安装好。 Win+R启动cmd，在命令提示符内输入以下命令： conda create –n te...","permalink":"/post/tf-gpu","photos":[],"count_time":{"symbolsCount":546,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}},"next_post":{"title":"Welcome","uid":"4e798bd33064c933781222772b766c85","slug":"Welcome","date":"2020-12-05T14:11:31.111Z","updated":"2024-05-29T15:21:13.996Z","comments":true,"path":"api/articles/Welcome.json","keywords":null,"cover":[],"text":" ","permalink":"/post/Welcome","photos":[],"count_time":{"symbolsCount":1,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}}}