{"title":"gulimall","uid":"503c4c6e78f3754dcb43b085f6f6df4c","slug":"谷粒商城","date":"2022-02-22T13:01:19.605Z","updated":"2024-05-29T15:22:17.061Z","comments":true,"path":"api/articles/谷粒商城.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/b8a88128c4d747d685989548ef975aa0_2.png","content":"<h1 id=\"谷粒商城\"><a href=\"#谷粒商城\" class=\"headerlink\" title=\"谷粒商城\"></a>谷粒商城</h1><h2 id=\"1-环境配置-ubuntu20-04\"><a href=\"#1-环境配置-ubuntu20-04\" class=\"headerlink\" title=\"1 环境配置(ubuntu20.04)\"></a>1 环境配置(ubuntu20.04)</h2><h3 id=\"1-1-安装jdk1-8\"><a href=\"#1-1-安装jdk1-8\" class=\"headerlink\" title=\"1.1  安装jdk1.8\"></a><strong>1.1  安装jdk1.8</strong></h3><p><a href=\"https://blog.csdn.net/Deadly_97/article/details/111657908?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.essearch_pc_relevant&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.essearch_pc_relevant\">https://blog.csdn.net/Deadly_97/article/details/111657908?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.essearch_pc_relevant&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.essearch_pc_relevant</a></p>\n<p>建议放在&#x2F;usr&#x2F;local 目录下面方便管理</p>\n<h3 id=\"1-2-安装docker\"><a href=\"#1-2-安装docker\" class=\"headerlink\" title=\"1.2  安装docker\"></a><strong>1.2  安装docker</strong></h3><p><a href=\"https://www.cnblogs.com/songxi/p/12788249.html\">https://www.cnblogs.com/songxi/p/12788249.html</a></p>\n<h3 id=\"1-3-安装mysql-docker\"><a href=\"#1-3-安装mysql-docker\" class=\"headerlink\" title=\"1.3  安装mysql(docker)\"></a><strong>1.3  安装mysql(docker)</strong></h3><p>dockerhub地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 在docker hub搜索mysql镜像</span><br><span class=\"line\">docker search mysql</span><br><span class=\"line\"></span><br><span class=\"line\">1 拉去mysql镜像</span><br><span class=\"line\">sudo docker pull mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">2 启动mysql容器</span><br><span class=\"line\"># --name指定容器名字 -v目录挂载 -p指定端口映射  -e设置mysql参数 -d后台运行</span><br><span class=\"line\">sudo docker run --name mysql -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql:/etc/mysql/conf.d -v /usr/local/mysql/log:/var/log/mysql  -e MYSQL_ROOT_PASSWORD=root  -p 3306:3306 -d mysql:8.0</span><br><span class=\"line\"></span><br><span class=\"line\">3 使用su - root（切换为root，这样就不用每次都sudo来赐予了）</span><br><span class=\"line\">su - root</span><br><span class=\"line\">4 进入mysql容器</span><br><span class=\"line\">docker exec -it 容器名称|容器id bin/bash</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-4-安装redis-docker\"><a href=\"#1-4-安装redis-docker\" class=\"headerlink\" title=\"1.4 安装redis(docker)\"></a><strong>1.4 安装redis(docker)</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 在docker hub搜索redis镜像</span><br><span class=\"line\">docker search redis</span><br><span class=\"line\"></span><br><span class=\"line\">2 拉取redis镜像到本地</span><br><span class=\"line\">docker pull redis:6.0.10</span><br><span class=\"line\"></span><br><span class=\"line\">3 修改需要自定义的配置(docker-redis默认没有配置文件，自己在宿主机建立后挂载映射)</span><br><span class=\"line\">sudo mkdir -p /usr/local/redis/conf</span><br><span class=\"line\">sudo mkdir /usr/local/redis/data</span><br><span class=\"line\"></span><br><span class=\"line\">创建并修改/usr/local/redis/conf/redis.conf</span><br><span class=\"line\">sudo vim /usr/local/redis/conf/redis.conf</span><br><span class=\"line\">填入以下内容</span><br><span class=\"line\">  bind 0.0.0.0 开启远程权限</span><br><span class=\"line\">  appendonly yes 开启aof持久化</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4 启动redis服务运行容器</span><br><span class=\"line\">docker run --name redis  -v /usr/local/redis/data:/data  -v /usr/local/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf -p 6379:6379 -d redis:6.0.10  redis-server /usr/local/etc/redis/redis.conf </span><br><span class=\"line\"></span><br><span class=\"line\">解释： -v /usr/local/redis/data:/data  # 将数据目录挂在到本地保证数据安全</span><br><span class=\"line\"> -v /usr/local/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf   # 将配置文件挂在到本地修改方便</span><br><span class=\"line\"> </span><br><span class=\"line\">5  直接进去redis客户端。</span><br><span class=\"line\">docker exec -it redis redis-cli</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-5-git配置\"><a href=\"#1-5-git配置\" class=\"headerlink\" title=\"1.5 git配置\"></a><strong>1.5 git配置</strong></h3><p>以下均在git bash中输入：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 配置用户名</span><br><span class=\"line\">git config --global user.name &quot;username&quot;  //(名字，随意写)</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置邮箱</span><br><span class=\"line\">git config --global user.email &quot;55333@qq.com&quot; // 注册账号时使用的邮箱</span><br><span class=\"line\"></span><br><span class=\"line\"># 配置ssh免密登录</span><br><span class=\"line\">ssh-keygen -t rsa -C &quot;55333@qq.com&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">三次回车后生成了密钥，也可以查看密钥</span><br><span class=\"line\">cat ~/.ssh/id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\">浏览器登录码云(github操作一样)后，个人头像上点设置、然后点ssh公钥、随便填个标题，然后赋值</span><br><span class=\"line\">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6MWhGXSKdRxr1mGPZysDrcwABMTrxc8Va2IWZyIMMRHH9Qn/wy3PN2I9144UUqg65W0CDE/thxbOdn78MygFFsIG4j0wdT9sdjmSfzQikLHFsJ02yr58V6J2zwXcW9AhIlaGr+XIlGKDUy5mXb4OF+6UMXM6HKF7rY9FYh9wL6bun9f1jV4Ydlxftb/xtV8oQXXNJbI6OoqkogPKBYcNdWzMbjJdmbq2bSQugGaPVnHEqAD74Qgkw1G7SIDTXnY55gBlFPVzjLWUu74OWFCx4pFHH6LRZOCLlMaJ9haTwT2DB/sFzOG/Js+cEExx/arJ2rvvdmTMwlv/T+6xhrMS3 894548575@qq.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 测试</span><br><span class=\"line\">ssh -T git@gitee.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 测试成功</span><br><span class=\"line\">Hi unique_perfect! You&#x27;ve successfully authenticated, but GITEE.COM does not provide shell access.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-6-maven\"><a href=\"#1-6-maven\" class=\"headerlink\" title=\"1.6 maven\"></a><strong>1.6 maven</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在maven配置文件配置</span><br><span class=\"line\">配置阿里云镜像</span><br><span class=\"line\">&lt;mirrors&gt;</span><br><span class=\"line\">\t&lt;mirror&gt;</span><br><span class=\"line\">\t\t&lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class=\"line\">\t\t&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class=\"line\">\t\t&lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class=\"line\">\t\t&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class=\"line\">\t&lt;/mirror&gt;</span><br><span class=\"line\">&lt;/mirrors&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">idea中配置 jdk 1.8 编译项目</span><br><span class=\"line\">&lt;profiles&gt;</span><br><span class=\"line\">\t&lt;profile&gt;</span><br><span class=\"line\">\t\t&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class=\"line\">\t\t&lt;activation&gt;</span><br><span class=\"line\">\t\t\t&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class=\"line\">\t\t\t&lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class=\"line\">\t\t&lt;/activation&gt;</span><br><span class=\"line\">\t\t&lt;properties&gt;</span><br><span class=\"line\">\t\t\t&lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">\t\t\t&lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">\t\t\t&lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class=\"line\">\t\t&lt;/properties&gt;</span><br><span class=\"line\">\t&lt;/profile&gt;</span><br><span class=\"line\">&lt;/profiles&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-7-创建仓库\"><a href=\"#1-7-创建仓库\" class=\"headerlink\" title=\"1.7 创建仓库\"></a>1.7 创建仓库</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在github上新建仓库，仓库名gulimall，选择语言java，在.gitignore选中maven，</span><br><span class=\"line\">许可证选Apache-2.0，如果是码云上创建的 开发模型可以选生产/开发模型，开发时在dev分支，发布时在master分支。</span><br><span class=\"line\">创建如图所示</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20211214213913113.png\" alt=\"image-20211214213913113\"></p>\n<h3 id=\"1-8-新建项目并创建出以下服务模块\"><a href=\"#1-8-新建项目并创建出以下服务模块\" class=\"headerlink\" title=\"1.8 新建项目并创建出以下服务模块\"></a>1.8 新建项目并创建出以下服务模块</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在IDEA中New Project from version control Git  复制刚才项目的地址，如https://github.com/Vegetabhl/gulimall.git</span><br><span class=\"line\"></span><br><span class=\"line\">创建以下模块</span><br><span class=\"line\">商品服务product</span><br><span class=\"line\">存储服务ware</span><br><span class=\"line\">订单服务order</span><br><span class=\"line\">优惠券服务coupon</span><br><span class=\"line\">用户服务member</span><br><span class=\"line\">每个模块导入web和openFeign</span><br><span class=\"line\"></span><br><span class=\"line\">如下图所示</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20211214214426016.png\" alt=\"image-20211214214426016\"></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20211214214515519.png\" alt=\"image-20211214214515519\"></p>\n<p>效果图如下</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20211214221117907.png\" alt=\"image-20211214221117907\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建父模块：在gulimall中创建pom.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class=\"line\">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;groupId&gt;com.bhl.gulimall&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;gulimall&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">    &lt;name&gt;gulimall&lt;/name&gt;</span><br><span class=\"line\">    &lt;description&gt;谷粒商城-聚合服务&lt;/description&gt;</span><br><span class=\"line\">    &lt;packaging&gt;pom&lt;/packaging&gt;</span><br><span class=\"line\">    &lt;modules&gt;</span><br><span class=\"line\">        &lt;module&gt;gulimall-coupon&lt;/module&gt;</span><br><span class=\"line\">        &lt;module&gt;gulimall-member&lt;/module&gt;</span><br><span class=\"line\">        &lt;module&gt;gulimall-order&lt;/module&gt;</span><br><span class=\"line\">        &lt;module&gt;gulimall-product&lt;/module&gt;</span><br><span class=\"line\">        &lt;module&gt;gulimall-ware&lt;/module&gt;</span><br><span class=\"line\">    &lt;/modules&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/project&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在maven窗口刷新，并点击+号，找到刚才的pom.xml添加进来，发现多了个root。这样比如运行root的clean命令，其他项目也一起clean了。</span><br><span class=\"line\"></span><br><span class=\"line\">修改总项目的.gitignore，把小项目里的垃圾文件在提交的时候忽略掉</span><br><span class=\"line\">target/</span><br><span class=\"line\">pom.xml.tag</span><br><span class=\"line\">pom.xml.releaseBackup</span><br><span class=\"line\">pom.xml.versionsBackup</span><br><span class=\"line\">pom.xml.next</span><br><span class=\"line\">release.properties</span><br><span class=\"line\">dependency-reduced-pom.xml</span><br><span class=\"line\">buildNumber.properties</span><br><span class=\"line\">.mvn/timing.properties</span><br><span class=\"line\">.mvn/wrapper/maven-wrapper.jar</span><br><span class=\"line\"></span><br><span class=\"line\">**/mvnw</span><br><span class=\"line\">**/mvnw.cmd</span><br><span class=\"line\"></span><br><span class=\"line\">**/.mvn</span><br><span class=\"line\">**/target</span><br><span class=\"line\"></span><br><span class=\"line\">.idea</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">**/.gitignore</span><br><span class=\"line\"></span><br><span class=\"line\">**/README.md</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-9-VSCode\"><a href=\"#1-9-VSCode\" class=\"headerlink\" title=\"1.9 VSCode\"></a>1.9 VSCode</h3><p>后台管理系统构建</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在码云上搜索人人开源，我们使用renren-fast（后端代码），renren-fast-vue（前端代码）项目。（前后端分离）</span><br><span class=\"line\">git clone https://gitee.com/renrenio/renren-fast.git</span><br><span class=\"line\"></span><br><span class=\"line\">git clone https://gitee.com/renrenio/renren-fast-vue.git</span><br><span class=\"line\"></span><br><span class=\"line\">下载到了桌面，我们把renren-fast移动到我们的项目文件夹（删掉.git文件），而renren-fast-vue是用VSCode打开</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ol>\n<li><strong>renren-fast</strong></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在idea(root)项目里的pom.xml添加一个</span><br><span class=\"line\">&lt;modules&gt;</span><br><span class=\"line\">    &lt;module&gt;gulimall-coupon&lt;/module&gt;</span><br><span class=\"line\">    &lt;module&gt;gulimall-member&lt;/module&gt;</span><br><span class=\"line\">    &lt;module&gt;gulimall-order&lt;/module&gt;</span><br><span class=\"line\">    &lt;module&gt;gulimall-product&lt;/module&gt;</span><br><span class=\"line\">    &lt;module&gt;gulimall-ware&lt;/module&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;module&gt;renren-fast&lt;/module&gt;</span><br><span class=\"line\">&lt;/modules&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">然后打开renren-fast/db/mysql.sql，复制全部，在sqlyog中创建库gulimall_admin，粘贴进去并执行。</span><br><span class=\"line\">=======================================================================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">然后修改项目里renren-fast中的application.yml，修改application-dev.yml中的数库库的</span><br><span class=\"line\">url: jdbc:mysql://192.168.86.129:3306/gulimall_admin?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br><span class=\"line\">username: root</span><br><span class=\"line\">password: root</span><br><span class=\"line\"></span><br><span class=\"line\">然后执行java下的RenrenApplication</span><br><span class=\"line\">浏览器输入http://localhost:8080/renren-fast/ 得到&#123;“msg”:“invalid token”,“code”:401&#125;就代表无误</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li><strong>renren-fast-vue</strong></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用VSCode打开renren-fast-vue</span><br><span class=\"line\"></span><br><span class=\"line\">安装node：</span><br><span class=\"line\">注意:node版本过高可能会有问题，比如node-sass这个依赖安装失败，一直报错</span><br><span class=\"line\">此处选用node版本为12.18.2， npm版本为6.14.5</span><br><span class=\"line\"></span><br><span class=\"line\">接下来在VScode的终端进入项目输入以下内容：</span><br><span class=\"line\"></span><br><span class=\"line\">npm config set registry https://registry.npm.taobao.org  # 设置node仓库。提高下载速度</span><br><span class=\"line\">修改项目 package.json </span><br><span class=\"line\">\t&quot;node-sass&quot;: &quot;4.14.1&quot;   【 node12对应的sass版本是4.14  】</span><br><span class=\"line\"></span><br><span class=\"line\">npm i node-sass --sass_binary_site=https://npm.taobao.org/mirrors/node-sass/</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run dev </span><br><span class=\"line\"></span><br><span class=\"line\">浏览器输入localhost:8001 就可以看到内容了，登录账号admin 密码admin （记得后端和数据库服务启动，否则验证码没有）</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"1-10-逆向工程搭建\"><a href=\"#1-10-逆向工程搭建\" class=\"headerlink\" title=\"1.10 逆向工程搭建\"></a>1.10 逆向工程搭建</h3><p>product</p>\n<p>1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/renrenio/renren-generator.git</span><br><span class=\"line\"></span><br><span class=\"line\">下载到桌面后，同样把里面的.git文件删除，然后移动到我们IDEA项目目录中，同样加入控制去配置pom.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;modules&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;gulimall-coupon&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;gulimall-member&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;gulimall-order&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;gulimall-product&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;gulimall-ware&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;renren-fast&lt;/module&gt;</span><br><span class=\"line\">\t\t&lt;module&gt;renren-generator&lt;/module&gt;</span><br><span class=\"line\">&lt;/modules&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>2</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改renren-generator的application.yml</span><br><span class=\"line\">url: jdbc:mysql://192.168.86.129/gulimall_pms?characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class=\"line\">username: root</span><br><span class=\"line\">password: root</span><br><span class=\"line\"></span><br><span class=\"line\">修改generator.properties</span><br><span class=\"line\">mainPath=com.bhl # 主目录</span><br><span class=\"line\">package=com.bhl.gulimall # 包名</span><br><span class=\"line\">moduleName=product   # 模块名</span><br><span class=\"line\">author=bhl  # 作者</span><br><span class=\"line\">email=xxx@qq.com  # email</span><br><span class=\"line\">tablePrefix=pms_   # 我们的pms数据库中的表的前缀都有pms，</span><br><span class=\"line\">注意：如果写了表前缀，每一张表对于的javaBean就不会添加前缀了</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">运行RenrenApplication。如果启动不成功，修改application中是port为80。访问http://localhost:80</span><br><span class=\"line\"></span><br><span class=\"line\">然后点击全部，点击生成代码。下载了压缩包</span><br><span class=\"line\"></span><br><span class=\"line\">解压压缩包，把main放到gulimall-product的同级目录下。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这里需要注意：下载的时候必须将所有数据在一页展示出来，否则下载的文件不全（只会下载第一页展示的逆向工程文件）。</p>\n<p>4 通过common依赖来抽取公共依赖</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">然后在项目上右击（在项目上右击很重要）new modules— maven—然后在name上输入gulimall-common。</span><br><span class=\"line\"></span><br><span class=\"line\">在pom.xml中也自动添加了&lt;module&gt;gulimall-common&lt;/module&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">在common项目的pom.xml（我们把每个微服务里公共的类和依赖放到common里。）中添加 ，具体添加的参照代码吧，后续添加的挺多的就不写了</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>5 测试 测试与整合商品服务里的mybatisplus</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在product项目的resources目录下新建application.yml</span><br><span class=\"line\">spring:</span><br><span class=\"line\">  datasource:</span><br><span class=\"line\">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class=\"line\">    jdbc:mysql://192.168.86.129/gulimall_ums?characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class=\"line\">    username: root</span><br><span class=\"line\">    password: root</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># MapperScan</span><br><span class=\"line\"># sql映射文件位置</span><br><span class=\"line\">mybatis-plus:</span><br><span class=\"line\">  mapper-locations: classpath:/mapper/**/*.xml</span><br><span class=\"line\">  global-config:</span><br><span class=\"line\">    db-config:</span><br><span class=\"line\">      id-type: auto</span><br><span class=\"line\"></span><br><span class=\"line\">然后在主启动类上加上注解@MapperScan()</span><br><span class=\"line\">@MapperScan(&quot;com.bhl.gulimall.product.dao&quot;)</span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class gulimallProductApplication &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        SpringApplication.run(gulimallProductApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">然后去单元测试，先通过下面方法给数据库添加内容</span><br><span class=\"line\">@SpringBootTest</span><br><span class=\"line\">class gulimallProductApplicationTests &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    BrandService brandService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    void contextLoads() &#123;</span><br><span class=\"line\">        BrandEntity brandEntity = new BrandEntity();</span><br><span class=\"line\">        brandEntity.setDescript(&quot;hello&quot;);</span><br><span class=\"line\">        brandEntity.setName(&quot;华为&quot;);</span><br><span class=\"line\">        brandService.save(brandEntity);</span><br><span class=\"line\">        System.out.println(&quot;保存成功&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>6 其余服务的逆向工程和product一样，不再重复描述</p>\n<h2 id=\"2-SpringCloud-Alibaba\"><a href=\"#2-SpringCloud-Alibaba\" class=\"headerlink\" title=\"2  SpringCloud Alibaba\"></a>2  SpringCloud Alibaba</h2><h3 id=\"2-1-环境\"><a href=\"#2-1-环境\" class=\"headerlink\" title=\"2.1 环境\"></a>2.1 环境</h3><p>spring-cloud-alibaba版本和springboot版本不对应可能会有一些小问题，下面是我的实际敲的过程中版本选择</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;spring-boot.version&gt;2.6.1&lt;/spring-boot.version&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">在common的pom.xml中加入</span><br><span class=\"line\"># 下面是依赖管理，相当于以后再dependencies里引spring cloud alibaba就不用写版本号， 全用dependencyManagement进行管理</span><br><span class=\"line\"> &lt;dependencyManagement&gt;</span><br><span class=\"line\">        &lt;dependencies&gt;</span><br><span class=\"line\">            &lt;dependency&gt;</span><br><span class=\"line\">                &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class=\"line\">                &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;/artifactId&gt;</span><br><span class=\"line\">                &lt;version&gt;2021.1&lt;/version&gt;</span><br><span class=\"line\">                &lt;type&gt;pom&lt;/type&gt;</span><br><span class=\"line\">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class=\"line\">            &lt;/dependency&gt;</span><br><span class=\"line\">        &lt;/dependencies&gt;</span><br><span class=\"line\">    &lt;/dependencyManagement&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-2-Nacos-注册中心\"><a href=\"#2-2-Nacos-注册中心\" class=\"headerlink\" title=\"2.2 Nacos-注册中心\"></a>2.2 Nacos-注册中心</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">先了解一下 Spring Cloud 应用如何接入 Nacos Discovery。</span><br><span class=\"line\">1 首先，修改 common中的pom.xml 文件，引入 Nacos Discovery Starter。</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">2 在应用的common中的application.yml 配置文件中配置 Nacos Server 地址和微服务名称</span><br><span class=\"line\">spring:</span><br><span class=\"line\">  application:</span><br><span class=\"line\">    name: gulimall-coupon</span><br><span class=\"line\">  datasource:</span><br><span class=\"line\">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class=\"line\">url: jdbc:mysql://192.168.86.129/gulimall_sms?characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC</span><br><span class=\"line\">    username: root</span><br><span class=\"line\">    password: root</span><br><span class=\"line\">  cloud:</span><br><span class=\"line\">    nacos:</span><br><span class=\"line\">      discovery:</span><br><span class=\"line\">        server-addr: 127.0.0.1:8848</span><br><span class=\"line\"></span><br><span class=\"line\">mybatis-plus:</span><br><span class=\"line\">  mapper-locations: classpath:/mapper/**/*.xml</span><br><span class=\"line\">  global-config:</span><br><span class=\"line\">    db-config:</span><br><span class=\"line\">      id-type: auto</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server:</span><br><span class=\"line\">  port: 7000</span><br><span class=\"line\"></span><br><span class=\"line\">3 我们要配置nacos服务器的地址，也就是注册中心地址，但是我们还没</span><br><span class=\"line\">有nacos服务器，所以我们需要启动nacos server创建nacos服务</span><br><span class=\"line\">器（软件官方可以下载）</span><br><span class=\"line\">启动命令windows：startup.cmd -m standalone</span><br><span class=\"line\">注意：nacos如何双击没反应需要陪一下JAVA_HOME这个环境变量</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4 使用 @EnableDiscoveryClient 注解开启服务注册与发现功能</span><br><span class=\"line\"></span><br><span class=\"line\">@EnableDiscoveryClient</span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class GulimallCouponApplication &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(GulimallCouponApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5 访问http://127.0.0.1:8848/nacos/  账号密码nacos</span><br><span class=\"line\">出现页面，则表示访问成功</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>同理按照上述步骤注册member</p>\n<h3 id=\"2-3-测试member和coupon的远程调用\"><a href=\"#2-3-测试member和coupon的远程调用\" class=\"headerlink\" title=\"2.3 测试member和coupon的远程调用\"></a>2.3 测试member和coupon的远程调用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">想要获取当前会员领取到的所有优惠券。先去注册中心找优惠券服务，</span><br><span class=\"line\">注册中心调一台优惠券服务器给会员，会员服务器发送请求给这台优</span><br><span class=\"line\">惠券服务器，然后对方响应。</span><br><span class=\"line\"></span><br><span class=\"line\">Feign与注册中心</span><br><span class=\"line\">spring cloud feign</span><br><span class=\"line\"></span><br><span class=\"line\">声明式远程调用</span><br><span class=\"line\"></span><br><span class=\"line\">feign是一个声明式的HTTP客户端，他的目的就是让远程调用更加简单。</span><br><span class=\"line\">给远程服务发的是HTTP请求。</span><br><span class=\"line\"></span><br><span class=\"line\">1 会员服务想要远程调用优惠券服务，只需要给会员服务里引入</span><br><span class=\"line\">openfeign依赖，他就有了远程调用其他服务的能力。     //调用方</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  </span><br><span class=\"line\">2 在coupon中修改如下的内容                    //被调用方内</span><br><span class=\"line\">@RequestMapping(&quot;coupon/coupon&quot;)</span><br><span class=\"line\">public class CouponController &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private CouponService couponService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @RequestMapping(&quot;/member/list&quot;)</span><br><span class=\"line\">    public R membercoupons()&#123;    //全系统的所有返回都返回R</span><br><span class=\"line\">        // 应该去数据库查用户对于的优惠券，但这个我们简化了，不去数据库查了，构造了一个优惠券给他返回</span><br><span class=\"line\">        CouponEntity couponEntity = new CouponEntity();</span><br><span class=\"line\">        couponEntity.setCouponName(&quot;满100减10&quot;);//优惠券的名字</span><br><span class=\"line\">        return R.ok().put(&quot;coupons&quot;,Arrays.asList(couponEntity));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3 这样我们准备好了优惠券的调用内容</span><br><span class=\"line\">在member的配置类上加注解@EnableFeignClients(basePackages=&quot;com.bhl.gulimall.member.feign&quot;)，  //调用方</span><br><span class=\"line\">告诉spring这里面是一个远程调用客户端，member要调用的接口</span><br><span class=\"line\"></span><br><span class=\"line\">@EnableFeignClients(basePackages=&quot;com.bhl.gulimall.member.feign&quot;)</span><br><span class=\"line\">@EnableDiscoveryClient</span><br><span class=\"line\">@SpringBootApplication</span><br><span class=\"line\">public class GulimallMemberApplication &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        SpringApplication.run(GulimallMemberApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4 那么要调用什么东西呢？就是我们刚才写的优惠券的功能，</span><br><span class=\"line\">复制函数部分，在member的com.bhl.gulimall.member.feign包下新建接口CouponFeignService：</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@FeignClient(&quot;gulimall-coupon&quot;) //告诉spring cloud这个接口是一个远程客户端，要调用coupon服务，再去调用coupon服务/coupon/coupon/member/list对应的方法，&quot;gulimall-coupon&quot;是远程服务的名字，可以从nacos处看到</span><br><span class=\"line\">public interface CouponFeignService &#123;</span><br><span class=\"line\">    @RequestMapping(&quot;/coupon/coupon/member/list&quot;)  //注意这个请求是被调用方的请求地址</span><br><span class=\"line\">    public R membercoupons();//得到一个R对象</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">5 然后我们在member的控制层写一个测试请求</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;member/member&quot;)</span><br><span class=\"line\">public class MemberController &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private MemberService memberService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    CouponFeignService couponFeignService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @RequestMapping(&quot;/coupons&quot;)</span><br><span class=\"line\">    public R test()&#123;</span><br><span class=\"line\">        MemberEntity memberEntity = new MemberEntity();</span><br><span class=\"line\">        memberEntity.setNickname(&quot;张三&quot;);</span><br><span class=\"line\">        R membercoupons = couponFeignService.membercoupons(); //假设张三去数据库查了后返回了张三的优惠券信息</span><br><span class=\"line\"></span><br><span class=\"line\">        // 打印会员和优惠券信息</span><br><span class=\"line\">        return R.ok().put(&quot;member&quot;,memberEntity).put(&quot;coupons&quot;,membercoupons.get(&quot;coupons&quot;));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">6 重新启动服务</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意：如果member报错couponFeignService注入失败需要在comomn的pom文件中加入以下的依赖。这其实也是上面说的版本冲突带来的一些小问题</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-cloud-starter-loadbalancer&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;3.0.4&lt;/version&gt; 我这里是用的3.0.4版本，对应spring-boot是2.6.1,spring-cloud-alibaba-dependencies是2021.1</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-4-Nacos-配置中心\"><a href=\"#2-4-Nacos-配置中心\" class=\"headerlink\" title=\"2.4 Nacos-配置中心\"></a>2.4 Nacos-配置中心</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们还可以用nacos作为配置中心。配置中心的意思是不在application.properties</span><br><span class=\"line\">等文件中配置了，而是放到nacos配置中心公用，这样无需每台机器都改。</span><br><span class=\"line\"></span><br><span class=\"line\">1 引入配置中心依赖，放到common中</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">     &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class=\"line\">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;</span><br><span class=\"line\"> &lt;/dependency&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">2 在coupons项目中创建/src/main/resources/bootstrap.properties ，这个文件是</span><br><span class=\"line\">springboot里规定的，他优先级别application.properties高</span><br><span class=\"line\"># 改名字，对应nacos里的配置文件名</span><br><span class=\"line\">spring.application.name=gulimall-coupon</span><br><span class=\"line\">spring.cloud.nacos.config.server-addr=192.168.11.1:8848</span><br><span class=\"line\"></span><br><span class=\"line\">3 @RestController</span><br><span class=\"line\">@RequestMapping(&quot;coupon/coupon&quot;)</span><br><span class=\"line\">public class CouponController &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private CouponService couponService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Value(&quot;$&#123;coupon.user.name&#125;&quot;)//从application.properties中获取//不要写user.name，他是环境里的变量</span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    @Value(&quot;$&#123;coupon.user.age&#125;&quot;)</span><br><span class=\"line\">    private Integer age;</span><br><span class=\"line\">    @RequestMapping(&quot;/test&quot;)</span><br><span class=\"line\">    public R test()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        return R.ok().put(&quot;name&quot;,name).put(&quot;age&quot;,age);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4 浏览器去nacos里的配置列表，点击＋号，data ID：gulimall-coupon.properties，配置</span><br><span class=\"line\"># gulimall-coupon.properties</span><br><span class=\"line\">coupon.user.name=&quot;张三&quot;      </span><br><span class=\"line\">coupon.user.age=12</span><br><span class=\"line\"></span><br><span class=\"line\">5 然后点击发布。重启coupon，http://localhost:7000/coupon/coupon/test</span><br><span class=\"line\">&#123;&quot;msg&quot;:&quot;success&quot;,&quot;code&quot;:0,&quot;name&quot;:&quot;张三&quot;,&quot;age&quot;:12&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6 但是修改肿么办？实际生产中不能重启应用。在coupon的控制层上加</span><br><span class=\"line\">@RefreshScope</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">7 最终代码如下</span><br><span class=\"line\">@RefreshScope</span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;coupon/coupon&quot;)</span><br><span class=\"line\">public class CouponController &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private CouponService couponService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Value(&quot;$&#123;coupon.user.name&#125;&quot;)//从application.properties中获取//不要写user.name，他是环境里的变量</span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    @Value(&quot;$&#123;coupon.user.age&#125;&quot;)</span><br><span class=\"line\">    private Integer age;</span><br><span class=\"line\">    @RequestMapping(&quot;/test&quot;)</span><br><span class=\"line\">    public R test()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        return R.ok().put(&quot;name&quot;,name).put(&quot;age&quot;,age);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">8 重启后，在nacos浏览器里修改配置，修改就可以观察到能动态修改了</span><br><span class=\"line\">nacos的配置内容优先于项目本地的配置内容。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"2-5-Nacos-配置中心进阶\"><a href=\"#2-5-Nacos-配置中心进阶\" class=\"headerlink\" title=\"2.5 Nacos-配置中心进阶\"></a>2.5 Nacos-配置中心进阶</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在nacos浏览器中还可以配置：</span><br><span class=\"line\"></span><br><span class=\"line\">命名空间：用作配置隔离。（一般每个微服务一个命名空间）</span><br><span class=\"line\"></span><br><span class=\"line\">默认public。默认新增的配置都在public空间下</span><br><span class=\"line\"></span><br><span class=\"line\">\t开发、测试、开发可以用命名空间分割。properties每个空间有一份。</span><br><span class=\"line\"></span><br><span class=\"line\">\t在bootstrap.properties里配置</span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.namespace=b176a68a-6800-4648-833b-be10be8bab00  \t# 可以选择对应的命名空间 ,即写上对应环境的命名空间ID</span><br><span class=\"line\">\t</span><br><span class=\"line\">也可以为每个微服务配置一个命名空间，微服务互相隔离</span><br><span class=\"line\"></span><br><span class=\"line\">配置集：一组相关或不相关配置项的集合。</span><br><span class=\"line\"></span><br><span class=\"line\">配置集ID：类似于配置文件名，即Data ID</span><br><span class=\"line\"></span><br><span class=\"line\">配置分组：默认所有的配置集都属于DEFAULT_GROUP。自己可以创建分组，比如双十一，618，双十二</span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.group=DEFAULT_GROUP  # 更改配置分组</span><br><span class=\"line\">最终方案：每个微服务创建自己的命名空间，然后使用配置分组区分环境（dev/test/prod）</span><br><span class=\"line\"></span><br><span class=\"line\">加载多配置集</span><br><span class=\"line\">我们要把原来application.yml里的内容都分文件抽离出去。我们在nacos里创建好</span><br><span class=\"line\">后，在coupons里指定要导入的配置即可。</span><br><span class=\"line\"></span><br><span class=\"line\">bootstrap.properties</span><br><span class=\"line\">spring.application.name=gulimall-coupon</span><br><span class=\"line\">spring.cloud.nacos.config.server-addr=192.168.11.1:8848</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.namespace=ed042b3b-b7f3-4734-bdcb-0c516cb357d7  # # 可以选择对应的命名空间 ，即写上对应环境的命名空间ID</span><br><span class=\"line\">spring.cloud.nacos.config.group=dev  # 配置文件所在的组</span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[0].data-id=datasource.yml</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[0].group=dev</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[0].refresh=true</span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[1].data-id=mybatis.yml</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[1].group=dev</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[1].refresh=true</span><br><span class=\"line\"></span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[2].data-id=other.yml</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[2].group=dev</span><br><span class=\"line\">spring.cloud.nacos.config.ext-config[2].refresh=true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">datasource.yml</span><br><span class=\"line\">spring:</span><br><span class=\"line\">  datasource:</span><br><span class=\"line\">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class=\"line\">    url: jdbc:mysql://192.168.1.103:3306/gulimall_sms?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class=\"line\">    username: root</span><br><span class=\"line\">    password: root</span><br><span class=\"line\"></span><br><span class=\"line\">mybatis.yml</span><br><span class=\"line\">mybatis-plus:</span><br><span class=\"line\">  mapper-locations: classpath:/mapper/**/*.xml</span><br><span class=\"line\">  global-config:</span><br><span class=\"line\">    db-config:</span><br><span class=\"line\">      id-type: auto</span><br><span class=\"line\"></span><br><span class=\"line\">other.yml</span><br><span class=\"line\">spring:</span><br><span class=\"line\">  application:</span><br><span class=\"line\">    name: gulimall-coupon</span><br><span class=\"line\">  cloud:</span><br><span class=\"line\">    nacos:</span><br><span class=\"line\">      discovery:</span><br><span class=\"line\">        server-addr: 192.168.11.1:8848</span><br><span class=\"line\"></span><br><span class=\"line\">server:</span><br><span class=\"line\">  port: 7000</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-5-网关\"><a href=\"#2-5-网关\" class=\"headerlink\" title=\"2.5 网关\"></a>2.5 网关</h3>","text":"谷粒商城1 环境配置(ubuntu20.04)1.1 安装jdk1.8https://blog.csdn.net/Deadly_97/article/detai...","permalink":"/post/谷粒商城","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E\"><span class=\"toc-text\">谷粒商城</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-ubuntu20-04\"><span class=\"toc-text\">1 环境配置(ubuntu20.04)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%89%E8%A3%85jdk1-8\"><span class=\"toc-text\">1.1  安装jdk1.8</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E5%AE%89%E8%A3%85docker\"><span class=\"toc-text\">1.2  安装docker</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E5%AE%89%E8%A3%85mysql-docker\"><span class=\"toc-text\">1.3  安装mysql(docker)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-4-%E5%AE%89%E8%A3%85redis-docker\"><span class=\"toc-text\">1.4 安装redis(docker)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-5-git%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.5 git配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-6-maven\"><span class=\"toc-text\">1.6 maven</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-7-%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1.7 创建仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-8-%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B9%B6%E5%88%9B%E5%BB%BA%E5%87%BA%E4%BB%A5%E4%B8%8B%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">1.8 新建项目并创建出以下服务模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-9-VSCode\"><span class=\"toc-text\">1.9 VSCode</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-10-%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">1.10 逆向工程搭建</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-SpringCloud-Alibaba\"><span class=\"toc-text\">2  SpringCloud Alibaba</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">2.1 环境</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-Nacos-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83\"><span class=\"toc-text\">2.2 Nacos-注册中心</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E6%B5%8B%E8%AF%95member%E5%92%8Ccoupon%E7%9A%84%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">2.3 测试member和coupon的远程调用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-Nacos-%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83\"><span class=\"toc-text\">2.4 Nacos-配置中心</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-Nacos-%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E8%BF%9B%E9%98%B6\"><span class=\"toc-text\">2.5 Nacos-配置中心进阶</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-%E7%BD%91%E5%85%B3\"><span class=\"toc-text\">2.5 网关</span></a></li></ol></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Git使用","uid":"b127aca37c275431a002f8f9388f3525","slug":"Git使用","date":"2022-05-18T03:39:36.000Z","updated":"2024-06-06T15:08:42.988Z","comments":true,"path":"api/articles/Git使用.json","keywords":null,"cover":[],"text":"注意：除非直接克隆，否则记得要先创建仓库，再进行后续的操作Git使用1 TortoiseGit下载和安装 2 TortoiseGit使用1创建仓库先创建一个空文...","permalink":"/post/Git使用","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"网络","slug":"网络","count":2,"path":"api/categories/网络.json"},{"name":"常用工具","slug":"网络/常用工具","count":2,"path":"api/categories/网络/常用工具.json"},{"name":"项目","slug":"网络/常用工具/项目","count":2,"path":"api/categories/网络/常用工具/项目.json"},{"name":"环境配置","slug":"网络/常用工具/项目/环境配置","count":2,"path":"api/categories/网络/常用工具/项目/环境配置.json"}],"tags":[{"name":"网络","slug":"网络","count":6,"path":"api/tags/网络.json"},{"name":"常用工具","slug":"常用工具","count":6,"path":"api/tags/常用工具.json"},{"name":"项目","slug":"项目","count":6,"path":"api/tags/项目.json"},{"name":"环境配置","slug":"环境配置","count":5,"path":"api/tags/环境配置.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null},"next_post":{"title":"mmdet","uid":"97ee172f7fe606eea665b3155aa4c504","slug":"mmdet","date":"2022-01-12T12:59:27.473Z","updated":"2024-05-29T15:36:09.531Z","comments":true,"path":"api/articles/mmdet.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/6c9821b4e395412480baf6d966392162_2.png","text":"mmdet安装详见官方文档，先装mmcv-full，再装mmdet https://mmdetection.readthedocs.io/zh_CN/v2.20...","permalink":"/post/mmdet","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}