{"title":"Hexo+GitHub 搭建个人博客并发布文章（附常见问题解决方法）","uid":"d187c6cbbf234b66485a2866be10bdca","slug":"Hexo+GitHub 搭建个人博客并发布文章（附常见问题解决方法）","date":"2023-12-05T11:43:09.954Z","updated":"2024-06-07T13:08:26.964Z","comments":true,"path":"api/articles/Hexo+GitHub 搭建个人博客并发布文章（附常见问题解决方法）.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/60e0e73d41454544a20cdc75d348d1ee_1.png","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>本教程使用 GitHub 自带的 GitHub pages 来生成静态个人博客，而 Hexo 可以更换各种好看的主题，而且都是免费的，花一点时间就可以打造出自己独有的个人博客。</p>\n<p>Hexo 这个有力的工具可以让我们专注于写出一篇博客而不需要关心如何编写 html 和 CSS，再如何形成一个网站，它可以根据 markdown 文档和指定的主题直接生成一个静态网站，对于新手朋友或者不是专门搞前端开发的人们非常友好。</p>\n<p>还有一个优点就是 GitHub pages 生成的网站很稳定，就算自己的本地站点被删除，也完全不影响已经发布到 GitHub 仓库的文章，依旧可以访问查看。</p>\n<p>接下来我们就开始动手搭建吧！</p>\n<h2 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h2><p>在最最开始，肯定要准备一个属于自己的 GitHub 账号。因篇幅有限，这里就不再赘述如何注册账号了，如果你还没有 GitHub 账号，可以自行搜索如何注册。不过记得要使用邮箱注册。</p>\n<h3 id=\"1-安装-git-和-node-js\"><a href=\"#1-安装-git-和-node-js\" class=\"headerlink\" title=\"1. 安装 git 和 node.js\"></a>1. 安装 git 和 node.js</h3><p>要使用 GitHub 和 Hexo，首先我们需要在本地安装 git 和 node.js，因为 Hexo 基于 node.js，再生成一个 ssh 密钥用于连接 GitHub 仓库以及本地文件夹。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>git 下载链接：Git - Downloading Packag<br>node.js 下载链接：Download | Node.js</p></blockquote>\n<p>安装时可以直接一路点下一步，按默认设置安装即可。如果想搞清楚细节，可以看 Git 详细安装教程。</p>\n<p>想要验证安装是否成功，可以 win+r 输入 cmd 进入终端，输入 node -v、npm -v 和 git –version，如果出现版本号说明安装成功。在文件资源管理器中右键，出现 Open Git Bash here 和 Open Git GUI here。</p>\n<h3 id=\"2-连接-GitHub-和本地\"><a href=\"#2-连接-GitHub-和本地\" class=\"headerlink\" title=\"2. 连接 GitHub 和本地\"></a>2. 连接 GitHub 和本地</h3><p>在文件资源管理器中右键 - Open Git Bash here，打开 git 终端，输入以下两条命令，设置用户名和邮箱：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;GitHub用户名&quot;   </span><br><span class=\"line\">    $ git config --global user.email &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>创建 ssh 密钥文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;</span><br></pre></td></tr></table></figure>\n\n<p>一路回车即可。</p>\n<p>最后返回密钥结果和图片说明创建完成。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">    Enter file in which to save the key (/c/Users/Jingrong/.ssh/id_rsa):</span><br><span class=\"line\">    Created directory &#x27;/c/Users/Jingrong/.ssh&#x27;.</span><br><span class=\"line\">    Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">    Enter same passphrase again:</span><br><span class=\"line\">    Your identification has been saved in /c/Users/Jingrong/.ssh/id_rsa</span><br><span class=\"line\">    Your public key has been saved in /c/Users/Jingrong/.ssh/id_rsa.pub</span><br><span class=\"line\">    The key fingerprint is:</span><br><span class=\"line\">    SHA256:xxxx</span><br><span class=\"line\">    The key&#x27;s randomart image is:</span><br><span class=\"line\">    +---[RSA 3072]----+</span><br><span class=\"line\">    |                 |</span><br><span class=\"line\">    |       .         |</span><br><span class=\"line\">    |        + * .. + |</span><br><span class=\"line\">    |       . + = .  o|</span><br><span class=\"line\">    |      . S   . . .|</span><br><span class=\"line\">    |     . .     . . |</span><br><span class=\"line\">    |  .   = .  ...o  |</span><br><span class=\"line\">    |   +.= o +.++o   |</span><br><span class=\"line\">    |                 |</span><br><span class=\"line\">    +----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n\n<p>找到路径 Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;Jingrong&#x2F;.ssh&#x2F;id_rsa.pub，用记事本打开。ctrl+a 将所有内容复制到剪切板。</p>\n<p>登录 GitHub，点击右上角自己的头像 - setting，找到 SSH and GPG keys，点击 add SSH key：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-419cb9c870e905c917a5cc6effd0119f_r.jpg\"></p>\n<p>将剪贴板中复制的密钥粘贴过来：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-9ba9b999600e3734fcdd93327fa2ded8_r.jpg\"></p>\n<p>检测是否连接成功：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh git@github.com</span><br></pre></td></tr></table></figure>\n\n<p>如果出现 Hi xxx! You’ve successfully authenticated… 的提示，就说明连接成功。</p>\n<h3 id=\"3-安装-Hexo-以及-Fluid-主题\"><a href=\"#3-安装-Hexo-以及-Fluid-主题\" class=\"headerlink\" title=\"3. 安装 Hexo 以及 Fluid 主题\"></a>3. 安装 Hexo 以及 Fluid 主题</h3><p>使用 npm 安装 Hexo：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>输入 hexo -v 即可查看是否安装成功。</p>\n<p>新建一个 hexo 站点根目录，在站点右键 - Open Git Bash here，执行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br><span class=\"line\">    $ npm install</span><br></pre></td></tr></table></figure>\n\n<p>执行完成之后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml     ---&gt;  网站配置信息</span><br><span class=\"line\">├── package.json    ---&gt;  应用程序的信息</span><br><span class=\"line\">├── scaffolds       ---&gt;  模板文件夹</span><br><span class=\"line\">├── source          ---&gt;  放置资源文件。</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts      ---&gt;  .md文件</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>除 _posts 文件夹之外，开头命名为 _ (下划线) 的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。来自 <a href=\"https://hexo.io/zh-cn/docs/setup\">Hexo 官方文档</a></p></blockquote>\n<p>完成后再执行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">    $ hexo s</span><br></pre></td></tr></table></figure>\n\n<p>访问 <a href=\"http://localhost:4000，即可浏览生成的\">http://localhost:4000，即可浏览生成的</a> hexo 页面。</p>\n<p>接下来就可以在 <a href=\"https://hexo.io/themes/\">Themes | Hexo</a> 里开始挑选一个喜欢的主题啦！</p>\n<p>以 fluid 主题为例，先找到 fluid 官方文档和 GitHub 仓库。</p>\n<p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入博客目录执行命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-theme-fluid</span><br></pre></td></tr></table></figure>\n\n<p>然后在博客目录下创建 _config.fluid.yml，将主题的 _config.yml 内容复制过去。</p>\n<p><strong>指定主题</strong></p>\n<p>如下修改 Hexo 博客目录中的 _config.yml：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: fluid  # 指定主题</span><br><span class=\"line\">    language: zh-CN  # 指定语言，会影响主题显示的语言，按需修改</span><br></pre></td></tr></table></figure>\n\n<p><strong>创建「关于页」</strong></p>\n<p>首次使用主题的「关于页」需要手动创建：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page about</span><br></pre></td></tr></table></figure>\n\n<p>创建成功后修改 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p>\n<p>修改后的文件示例如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">    title: 标题</span><br><span class=\"line\">    layout: about</span><br><span class=\"line\">    ---​</span><br><span class=\"line\">    这里写关于页的正文，支持 Markdown, HTML</span><br></pre></td></tr></table></figure>\n\n<p><strong>主题配置</strong></p>\n<p>关于主题配置的详细步骤可以查看 fluid 的<a href=\"https://hexo.fluid-dev.com/docs/guide/\">主题使用文档</a>。</p>\n<h2 id=\"编写文章\"><a href=\"#编写文章\" class=\"headerlink\" title=\"编写文章\"></a>编写文章</h2><p>使用 hexo 的好处就在于不需要自己手写 html，而只需要写 md 文档。</p>\n<p>在 resource&#x2F;_post 文件夹中新建 md 文档。</p>\n<p>md 文档的开头需要添加以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">    title: 标题</span><br><span class=\"line\">    tags: [标签1,标签2]</span><br><span class=\"line\">    categories: [分类]</span><br><span class=\"line\">    index_img: 主页封面图的相对路径</span><br><span class=\"line\">    date: 2023-8-25 18:03:07</span><br><span class=\"line\">    ---</span><br></pre></td></tr></table></figure>\n\n<p>写好之后输入命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g   #将md编译成html保存到public文件夹中</span><br><span class=\"line\">    $ hexo s   #开启本地服务器查看网站</span><br></pre></td></tr></table></figure>\n\n<p>即可看到自己新添加的文章。</p>\n<h2 id=\"发布到-GitHub-Pages\"><a href=\"#发布到-GitHub-Pages\" class=\"headerlink\" title=\"发布到 GitHub Pages\"></a>发布到 GitHub Pages</h2><h3 id=\"创建-GitHub-仓库\"><a href=\"#创建-GitHub-仓库\" class=\"headerlink\" title=\"创建 GitHub 仓库\"></a><strong>创建 GitHub 仓库</strong></h3><p>点击右上角加号，选择 new repository。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-b76865245927dd072cfe9bac40b109ca_r.jpg\"></p>\n<p>仓库名称按照用户名.<a href=\"http://github.io/\">http://github.io</a> 的格式填写。选择 public，勾选 add a README file。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-9fb66c5efd0f27f3ae526cc120cde2ea_r.jpg\"></p>\n<p>最后点击创建仓库即可。</p>\n<h3 id=\"配置-config-yml-文档\"><a href=\"#配置-config-yml-文档\" class=\"headerlink\" title=\"配置_config.yml 文档\"></a><strong>配置_config.yml 文档</strong></h3><p>打开 hexo 站点的根目录，找到_config.yml 文件，使用记事本打开。文档的最后将</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">    ## Docs: One-Command Deployment</span><br><span class=\"line\">    deploy: </span><br><span class=\"line\">      type: &#x27;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>修改为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">    ## Docs: One-Command Deployment</span><br><span class=\"line\">    deploy: </span><br><span class=\"line\">      type: git</span><br><span class=\"line\">      repository: git@github.com:用户名/用户名.github.io.git</span><br><span class=\"line\">      branch: master</span><br></pre></td></tr></table></figure>\n\n<p>保存。</p>\n<p>到这里就可以进入 git 终端，输入命令 hexo d 将 public 文件夹提交到仓库中。不一会就能看见仓库中出现了一个新的 master 分支，里面有上传的 public 文件夹的内容。</p>\n<h3 id=\"生成-GitHub-Pages\"><a href=\"#生成-GitHub-Pages\" class=\"headerlink\" title=\"生成 GitHub Pages\"></a>生成 GitHub Pages</h3><p>进入刚刚生成的仓库。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-f931ab78626a5fd6fd744f69bf6a9243_r.jpg\"></p>\n<p>source 选择 Deploye from a branch，Branch 选择 master 分支，选择好之后点 save 保存设置。稍等一分钟，就可以看到 “Your site is alive at xxxx” 的提示，点击 visit 就可以在自己的网站上看到刚刚配置好的博客了。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-d61c11ed0dcf045ab905c1e02038ed6e_r.jpg\"></p>\n<p>附：</p>\n<p>hexo 常用命令如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo -g #安装Hexo</span><br><span class=\"line\">    npm update hexo -g #升级</span><br><span class=\"line\">    hexo init #初始化博客</span><br><span class=\"line\">    ​</span><br><span class=\"line\">    hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class=\"line\">    hexo g == hexo generate #生成</span><br><span class=\"line\">    hexo s == hexo server #启动服务预览</span><br><span class=\"line\">    hexo d == hexo deploy #部署</span><br><span class=\"line\">    ​</span><br><span class=\"line\">    hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class=\"line\">    hexo server -s #静态模式</span><br><span class=\"line\">    hexo server -p 5000 #更改端口</span><br><span class=\"line\">    hexo server -i 192.168.1.1 #自定义 IP</span><br><span class=\"line\">    hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更改域名\"><a href=\"#更改域名\" class=\"headerlink\" title=\"更改域名\"></a>更改域名</h2><p>我的域名是在 <a href=\"https://www.namesilo.com/\">namesilo</a> 上购买的，非常便宜（xyz 后缀的一年 17r）。</p>\n<p>在主页搜索自己想要的域名，添加到购物车。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-c9638be71f06c4d8c9f376eb69ae97dc_r.jpg\"></p>\n<p>点击 checkout 跳转到结算界面。可以选择添加 1 美元的优惠码。我买的时候不知道为什么没有用，这里就不再介绍。确认之后点 checkout，之后选择支付宝扫码付款即可。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-7cd31b7f97baedd89a6e2a6583343cbc_r.jpg\"></p>\n<p>这里着重介绍购买之后如何进行域名的更改。</p>\n<p>这里是 My Account 界面，点击 manage 进入域名管理页。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-260484b1bd511745c4f5673f0b4ff386_r.jpg\"></p>\n<p>找到刚刚购买的域名，点击蓝色地球图标。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-e219f9db3297a8638d8b65ab5cb3ece3_r.jpg\"></p>\n<p>首先将默认的所有配置删除，再点击 CNAME 添加一条配置。TTL 默认改为 3600 即可。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-d859c192408d1c896d7778be4c0ff04c_r.jpg\"></p>\n<p>还需要添加 4 条 A 记录，指向以下 4 个 ip 地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">185.199.108.153</span><br><span class=\"line\">    185.199.109.153</span><br><span class=\"line\">    185.199.110.153</span><br><span class=\"line\">    185.199.111.153</span><br></pre></td></tr></table></figure>\n\n<p>回到 GitHub，将购买的域名也添加到 GitHub Pages 的设置上。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-103e81de23148a88ad0d82b75baba858_r.jpg\"></p>\n<p>等待 3-4 个小时，就可以在全球使用这个域名访问你的 GitHub Pages 博客啦！</p>\n<h2 id=\"常见问题解决方法\"><a href=\"#常见问题解决方法\" class=\"headerlink\" title=\"常见问题解决方法\"></a>常见问题解决方法</h2><h3 id=\"重装系统之后，原本的环境都无法找回\"><a href=\"#重装系统之后，原本的环境都无法找回\" class=\"headerlink\" title=\"重装系统之后，原本的环境都无法找回\"></a>重装系统之后，原本的环境都无法找回</h3><p>复制好原本的文章，重新完成 markdown 格式的文档。重新安装 git 和 node.js，生成 ssh 密钥，建立连接后重新建立 hexo 站点并上传到原来仓库。原本仓库的 master 分支里内容可以删除掉，防止新旧主题冲突。</p>\n<h3 id=\"hexo-d-时报错\"><a href=\"#hexo-d-时报错\" class=\"headerlink\" title=\"hexo d 时报错\"></a>hexo d 时报错</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh: Could not resolve hostname github.com: Name or service not known</span><br><span class=\"line\">    fatal: Could not read from remote repository.</span><br><span class=\"line\">    ​</span><br><span class=\"line\">    Please make sure you have the correct access rights</span><br><span class=\"line\">    and the repository exists.</span><br><span class=\"line\">    FATAL Something&#x27;s wrong. Maybe you can find the solution here: Page Not Found</span><br><span class=\"line\">    ocs/troubleshooting.html</span><br><span class=\"line\">    Error: Spawn failed</span><br><span class=\"line\">        at ChildProcess.&lt;anonymous&gt; (E:\\MyBlog\\node_modules\\hexo-util\\lib\\spawn.js:5</span><br><span class=\"line\">    1:21)</span><br><span class=\"line\">        at ChildProcess.emit (node:events:514:28)</span><br><span class=\"line\">        at cp.emit (E:\\MyBlog\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)</span><br><span class=\"line\">        at ChildProcess._handle.onexit (node:internal/child_process:291:12)</span><br></pre></td></tr></table></figure>\n\n<p>报以上错误，一般是网络连接出现问题了，无法上传到 github 对应仓库，可以尝试检查网络设置，或者查看是否是域名绑定不对出现的问题。</p>\n<h3 id=\"图片无法显示\"><a href=\"#图片无法显示\" class=\"headerlink\" title=\"图片无法显示\"></a>图片无法显示</h3><p>在写本文的过程中，我想插入一些图片，但是发现图片只能在 typora 上显示，hexo g 后无法在网页上显示，遂去查看各种教程，发现大部分都是让下载一个插件，然而还是不成功，据说是因为 hexo 版本更新了但是插件还没有更新。</p>\n<p>那么我只能开始自己找解决办法。</p>\n<p>首先在 hexo clean、hexo g 之后找到 public 文件夹，找到 md 文档生成的 html 文件，查看显示图片的那一行源代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&lt;img src=&quot;/1.jpg&quot; srcset=&quot;/img/loading.gif&quot; lazyload&gt;&lt;/p&gt;</span><br><span class=\"line\">    &lt;p&gt;&lt;img src=&quot;/2.jpg&quot; srcset=&quot;/img/loading.gif&quot; lazyload&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>\n\n<p>而 typora 中我此时已经改成仅包含文件名，不包含路径。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](1.jpg)</span><br><span class=\"line\">    ![](2.jpg)</span><br></pre></td></tr></table></figure>\n\n<p>于是我尝试把 public&#x2F;img 中的图片路径补充完整。怎么补充呢？首先要找到 html 的位置以及图片的位置。public 文件夹就是由 md 文档生成的。查找一番后发现 img 中才存在图片。</p>\n<p>由此继续发现开启 post_asset_folder 之后，只是在 hexo n xxx 新文章的时候同时创建一个同名的文件夹，图片放文件夹里，但是 hexo g 的时候这个同名文件夹里的图片并不会在 public 的 html 文件夹中生成相同图片，依旧只有 public&#x2F;img 中有图片：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-9b7dae28a33b78dd88d26cea1aa14111_r.jpg\"></p>\n<p>那么我们可以知道 public 和 resource 文件夹下的对应关系。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-c01d7c3f0d2699983acfe1aada7e6207_r.jpg\"></p>\n<p>搞清楚之后，我们的思路就是：html 中图片路径一定是相对路径而不能写绝对路径，因为最终发布到 GitHub 上去的只有 public 文件夹的内容，这个相对路径一定是基于 public 文件夹内的路径。</p>\n<p>因此我重新把文章配图复制到 img 下，新建一个本文的文件夹存放配图。以我的路径示例，在 typora 中补充完整图片路径：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![](/img/articles/hexo+github/1.jpg)</span><br><span class=\"line\">    ![](/img/articles/hexo+github/2.jpg)</span><br></pre></td></tr></table></figure>\n\n<p>再次 hexo clean、hexo g、hexo s 之后查看，果然图片出现了。发布到 GitHub Pages 同样没有问题。问题解决。</p>\n<p>使用此解决方法，需要注意：</p>\n<ul>\n<li>每次发布文章，图片需要放在 &#x2F; resource&#x2F;img 下，这样才能保证每次 hexo g 都能自动同步到 public 文件夹中。</li>\n<li>typora 中写相对路径。</li>\n<li>typora 中无法解析图片显示出来，但是在网页上可以显示出来。</li>\n</ul>\n<p>我的方法仅提供一个思路，每个人具体的问题可能有些不同，也不能盲从，还是需要结合实际来解决。</p>\n<h3 id=\"hexo-d-后进入页面显示-404\"><a href=\"#hexo-d-后进入页面显示-404\" class=\"headerlink\" title=\"hexo d 后进入页面显示 404\"></a>hexo d 后进入页面显示 404</h3><p>绑定好新域名后，再次 hexo d 上传文章发现页面 404 了。后来查看仓库里的 CNAME 文件发现不见了，而且自定义域名失效。</p>\n<p>查了一下，发现需要手动在 resource 下添加一个不带后缀的文件 CNAME，全大写。里面写自定义的域名。再重新<code>hexo g -d</code>即可。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/v2-6082d64b2d29aa142cb752607532b51e_r.jpg\"></p>\n<p>–</p>\n","text":"简介本教程使用 GitHub 自带的 GitHub pages 来生成静态个人博客，而 Hexo 可以更换各种好看的主题，而且都是免费的，花一点时间就可以打造出...","permalink":"/post/Hexo+GitHub 搭建个人博客并发布文章（附常见问题解决方法）","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">部署环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85-git-%E5%92%8C-node-js\"><span class=\"toc-text\">1. 安装 git 和 node.js</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%BF%9E%E6%8E%A5-GitHub-%E5%92%8C%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">2. 连接 GitHub 和本地</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AE%89%E8%A3%85-Hexo-%E4%BB%A5%E5%8F%8A-Fluid-%E4%B8%BB%E9%A2%98\"><span class=\"toc-text\">3. 安装 Hexo 以及 Fluid 主题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">编写文章</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%91%E5%B8%83%E5%88%B0-GitHub-Pages\"><span class=\"toc-text\">发布到 GitHub Pages</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA-GitHub-%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">创建 GitHub 仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-config-yml-%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">配置_config.yml 文档</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90-GitHub-Pages\"><span class=\"toc-text\">生成 GitHub Pages</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">更改域名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">常见问题解决方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%8E%9F%E6%9C%AC%E7%9A%84%E7%8E%AF%E5%A2%83%E9%83%BD%E6%97%A0%E6%B3%95%E6%89%BE%E5%9B%9E\"><span class=\"toc-text\">重装系统之后，原本的环境都无法找回</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hexo-d-%E6%97%B6%E6%8A%A5%E9%94%99\"><span class=\"toc-text\">hexo d 时报错</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA\"><span class=\"toc-text\">图片无法显示</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hexo-d-%E5%90%8E%E8%BF%9B%E5%85%A5%E9%A1%B5%E9%9D%A2%E6%98%BE%E7%A4%BA-404\"><span class=\"toc-text\">hexo d 后进入页面显示 404</span></a></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Hexo迁移版本升级 + nvm 管理 nodejs 版本配置","uid":"743be9d6ef5e192ad79e8bd119795962","slug":"Hexo 迁移版本升级 + nvm 管理 nodejs 版本配置","date":"2023-12-26T17:07:54.967Z","updated":"2024-05-29T15:17:43.965Z","comments":true,"path":"api/articles/Hexo 迁移版本升级 + nvm 管理 nodejs 版本配置.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/2c8bb65473b24b5b9069191e05e61882_0.png","text":"Hexo 迁移版本升级 + nvm 管理 nodejs 版本配置 [TOC] 前言已经好久没有更新 github 主页上 hexo 推送的博客了 (虽然没人看苦...","permalink":"/post/Hexo 迁移版本升级 + nvm 管理 nodejs 版本配置","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}},"next_post":{"title":"Git使用","uid":"b127aca37c275431a002f8f9388f3525","slug":"Git使用","date":"2022-05-18T03:39:36.000Z","updated":"2024-06-06T15:08:42.988Z","comments":true,"path":"api/articles/Git使用.json","keywords":null,"cover":[],"text":"注意：除非直接克隆，否则记得要先创建仓库，再进行后续的操作Git使用1 TortoiseGit下载和安装 2 TortoiseGit使用1创建仓库先创建一个空文...","permalink":"/post/Git使用","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"网络","slug":"网络","count":2,"path":"api/categories/网络.json"},{"name":"常用工具","slug":"网络/常用工具","count":2,"path":"api/categories/网络/常用工具.json"},{"name":"项目","slug":"网络/常用工具/项目","count":2,"path":"api/categories/网络/常用工具/项目.json"},{"name":"环境配置","slug":"网络/常用工具/项目/环境配置","count":2,"path":"api/categories/网络/常用工具/项目/环境配置.json"}],"tags":[{"name":"网络","slug":"网络","count":6,"path":"api/tags/网络.json"},{"name":"常用工具","slug":"常用工具","count":6,"path":"api/tags/常用工具.json"},{"name":"项目","slug":"项目","count":5,"path":"api/tags/项目.json"},{"name":"环境配置","slug":"环境配置","count":5,"path":"api/tags/环境配置.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}