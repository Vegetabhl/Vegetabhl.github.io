{"title":"Python","uid":"7d84a4176eacfd91fe4b92da8af8cc6a","slug":"Python","date":"2020-12-03T16:00:00.000Z","updated":"2024-05-29T15:20:50.828Z","comments":true,"path":"api/articles/Python.json","keywords":null,"cover":[],"content":"<h2 id=\"0-格式\"><a href=\"#0-格式\" class=\"headerlink\" title=\"0 格式\"></a>0 格式</h2><p>格式要求如下：</p>\n<ol>\n<li>在索引和内容之间需要加一个空格，包括所有级索引、标题和内容。</li>\n<li>内容顶格书写</li>\n<li>所有级标题之间需要添加一行空白行</li>\n<li>正文段落首行缩进，但是对于提出的问题不需要缩进</li>\n</ol>\n<h2 id=\"–\"><a href=\"#–\" class=\"headerlink\" title=\"–\"></a>–</h2><p>return;      ：结束当前<strong>方法</strong>，不在方法内无法使用</p>\n<p>break;        :  结束当前循环</p>\n<h2 id=\"1-变量\"><a href=\"#1-变量\" class=\"headerlink\" title=\"1 变量\"></a>1 变量</h2><p>注意事项：</p>\n<ol>\n<li>Python定义变量的时候只能包含字母、数字、下划线，并且不能以数字开头。</li>\n<li>严格区分大小写，大小写s不一样，变量也不一样。</li>\n</ol>\n<h2 id=\"2-格式化输出\"><a href=\"#2-格式化输出\" class=\"headerlink\" title=\"2 格式化输出\"></a>2 格式化输出</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 小数点后保留两位有效数字</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我的体重是%.2f公斤&#x27;</span> % weight)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 表示输出的整数显示位数，不足以0补全，超出当前位数则原样输出</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我的学号为%03d&#x27;</span> % stuId)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;我的名字是%s,我今年%d岁了&#x27;</span> % (name, age))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  f&#x27;&#123;表达式&#125;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;我叫<span class=\"subst\">&#123;name&#125;</span>,我今年<span class=\"subst\">&#123;age+<span class=\"number\">1</span>&#125;</span>岁了&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-转义字符\"><a href=\"#3-转义字符\" class=\"headerlink\" title=\"3 转义字符\"></a>3 转义字符</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 转义字符，稍微注意下是反斜杠</span></span><br><span class=\"line\"><span class=\"comment\"># \\n</span></span><br><span class=\"line\"><span class=\"comment\"># \\t(相当于四个空格间距)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello\\nWorld&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\tabcde&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-自己写结束符\"><a href=\"#4-自己写结束符\" class=\"headerlink\" title=\"4 自己写结束符\"></a>4 自己写结束符</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;结束符1&quot;</span>, end=<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;结束符2&quot;</span>, end=<span class=\"string\">&quot;...&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;结束符2&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-输入\"><a href=\"#5-输入\" class=\"headerlink\" title=\"5 输入\"></a>5 输入</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 输入</span></span><br><span class=\"line\">password = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入密码&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;密码是<span class=\"subst\">&#123;password&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(password))</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"6-数据类型\"><a href=\"#6-数据类型\" class=\"headerlink\" title=\"6 数据类型\"></a>6 数据类型</h2><h3 id=\"6-1-转换数据类型的函数\"><a href=\"#6-1-转换数据类型的函数\" class=\"headerlink\" title=\"6.1 转换数据类型的函数\"></a>6.1 转换数据类型的函数</h3><table>\n<thead>\n<tr>\n<th>int(x [,base ])</th>\n<th>将x转换为一个整数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>float(x)</td>\n<td>将对象 x 转换为字符串</td>\n</tr>\n<tr>\n<td>str(x)</td>\n<td>将对象 x 转换为字符串</td>\n</tr>\n<tr>\n<td>eval(str)</td>\n<td>用来计算在字符串中的有效Python表达式,并返回⼀个对象</td>\n</tr>\n<tr>\n<td>tuple(s)</td>\n<td>将序列 s 转换为⼀个元组</td>\n</tr>\n<tr>\n<td>list(s)</td>\n<td>将序列 s 转换为一个列表</td>\n</tr>\n</tbody></table>\n<p>​\t注意：</p>\n<p>​\t\t\t每一次转换后都是一个新的值了，用新的变量接收它。</p>\n<h3 id=\"6-2-eval-–把字符串中的数据转换为它原本的类型\"><a href=\"#6-2-eval-–把字符串中的数据转换为它原本的类型\" class=\"headerlink\" title=\"6.2 eval() –把字符串中的数据转换为它原本的类型\"></a>6.2 eval() –把字符串中的数据转换为它原本的类型</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># eval() --把字符串中的数据转换为它原本的数据类型</span></span><br><span class=\"line\">str1=<span class=\"string\">&quot;1&quot;</span></span><br><span class=\"line\">str2=<span class=\"string\">&quot;1.1&quot;</span></span><br><span class=\"line\">str3=<span class=\"string\">&quot;[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;]&quot;</span></span><br><span class=\"line\">str4=<span class=\"string\">&quot;(&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;)&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">eval</span>(str1)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">eval</span>(str2)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">eval</span>(str3)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">eval</span>(str4)))</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"7-运算符复习\"><a href=\"#7-运算符复习\" class=\"headerlink\" title=\"7 运算符复习\"></a>7 运算符复习</h2><table>\n<thead>\n<tr>\n<th align=\"center\">运算符</th>\n<th align=\"center\">描述</th>\n<th>实例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">&#x2F;&#x2F;</td>\n<td align=\"center\">整除</td>\n<td>9 &#x2F;&#x2F; 4 输出结果为2</td>\n</tr>\n<tr>\n<td align=\"center\">%</td>\n<td align=\"center\">取余</td>\n<td>9 % 4 输出结果为 1</td>\n</tr>\n<tr>\n<td align=\"center\">**</td>\n<td align=\"center\">指数</td>\n<td>2 ** 4 输出结果为 16，即 2 * 2 * 2 * 2</td>\n</tr>\n<tr>\n<td align=\"center\">()</td>\n<td align=\"center\">小括号</td>\n<td>小括号⽤用来提高运算优先级，即 (1 + 2) * 3 输出结果为 9</td>\n</tr>\n</tbody></table>\n<p>​\t注意：</p>\n<p>​\t1是斜杠，不是反斜杠</p>\n<p>​\t2在运算中，若有数字为小数，则最后结果也为浮点数，如2*0.5&#x3D;1.0</p>\n<p>​\t3运算中，指数的优先级要高于普通的乘法，如2*3**2&#x3D;18</p>\n<p>​\t</p>\n<h2 id=\"8-Python-Console\"><a href=\"#8-Python-Console\" class=\"headerlink\" title=\"8 Python Console\"></a>8 Python Console</h2><p>在做一些简单测试时可以在Python Console中写代码，数据是保存在内存中临时的</p>\n<h2 id=\"9-多个变量量赋值\"><a href=\"#9-多个变量量赋值\" class=\"headerlink\" title=\"9 多个变量量赋值\"></a>9 多个变量量赋值</h2><h3 id=\"9-1-多个变量赋相同值\"><a href=\"#9-1-多个变量赋相同值\" class=\"headerlink\" title=\"9.1 多个变量赋相同值\"></a>9.1 多个变量赋相同值</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = b = 10</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(b)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"9-2-多个变量赋不相同值\"><a href=\"#9-2-多个变量赋不相同值\" class=\"headerlink\" title=\"9.2 多个变量赋不相同值\"></a>9.2 多个变量赋不相同值</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num1, float1, str1 = 10, 0.5, &#x27;hello world&#x27;</span><br><span class=\"line\">print(num1)</span><br><span class=\"line\">print(float1)</span><br><span class=\"line\">print(str1)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"10-复合赋值运算符\"><a href=\"#10-复合赋值运算符\" class=\"headerlink\" title=\"10 复合赋值运算符\"></a>10 复合赋值运算符</h2><p>注意：</p>\n<p>c&#x3D;10</p>\n<p>c +&#x3D; 1 * 2 在这个式子中，是先算1 * 2 &#x3D;2,然后再算c&#x3D; c+2</p>\n<p>结果c&#x3D;12</p>\n<h2 id=\"11逻辑运算符\"><a href=\"#11逻辑运算符\" class=\"headerlink\" title=\"11逻辑运算符\"></a>11逻辑运算符</h2><p><img src=\"https://vegetabhlimg.netlify.app/img/python_01.png\"></p>\n<h2 id=\"12-条件语句\"><a href=\"#12-条件语句\" class=\"headerlink\" title=\"12 条件语句\"></a>12 条件语句</h2><h3 id=\"12-1-if嵌套\"><a href=\"#12-1-if嵌套\" class=\"headerlink\" title=\"12.1 if嵌套\"></a>12.1 if嵌套</h3><p>if 条件1：<br>    条件1成立执行的代码<br>        if 条件2：<br>            条件2成⽴执行的代码</p>\n<h3 id=\"12-2-猜拳游戏\"><a href=\"#12-2-猜拳游戏\" class=\"headerlink\" title=\"12.2 猜拳游戏\"></a>12.2 猜拳游戏</h3><p> 1 导出random模块</p>\n<p> 2 使用random模块中的随机整数功能–random.randint(开始,结束) </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">player = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;玩家请出拳，0-拳头，1-剪刀，2-布:\\n&quot;</span>))</span><br><span class=\"line\">computer = random.randint(<span class=\"number\">0</span>, <span class=\"number\">2</span>) <span class=\"comment\"># 这个方法这种写法随机数有三个0,1,2。也就是说它是左右都包括</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;电脑出拳为<span class=\"subst\">&#123;computer&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> ((player == <span class=\"number\">0</span> <span class=\"keyword\">and</span> computer == <span class=\"number\">1</span>) <span class=\"keyword\">or</span> (player == <span class=\"number\">1</span> <span class=\"keyword\">and</span> computer == <span class=\"number\">2</span>) <span class=\"keyword\">or</span> (player == <span class=\"number\">2</span> <span class=\"keyword\">and</span> computer == <span class=\"number\">0</span>)):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;玩家获胜&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> (player == computer):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;平局&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;电脑获胜&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"12-3-三目运算符\"><a href=\"#12-3-三目运算符\" class=\"headerlink\" title=\"12.3 三目运算符\"></a>12.3 三目运算符</h3><p>条件成立执⾏的表达式 if 条件 else 条件不成立执行的表达式 </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 三目运算符</span></span><br><span class=\"line\">aa = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入数字aa&quot;</span>))</span><br><span class=\"line\">bb = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入数字bb&quot;</span>))</span><br><span class=\"line\">cc = (aa - bb) <span class=\"keyword\">if</span> (aa &gt; bb) <span class=\"keyword\">else</span> (bb - aa)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cc)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"13-while循环-嵌套循环\"><a href=\"#13-while循环-嵌套循环\" class=\"headerlink\" title=\"13 while循环(嵌套循环)\"></a>13 while循环(嵌套循环)</h2><h3 id=\"13-1-代码\"><a href=\"#13-1-代码\" class=\"headerlink\" title=\"13.1 代码\"></a>13.1 代码</h3><p>注意：</p>\n<p>​\t\t在使用continue的之前一定要修改计数器，否则就会导致死循环现象（对计数器的改变代码通常放在continue的上一行代码）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">j = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> j &lt; <span class=\"number\">5</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> j == <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;吃饱了&quot;</span>)</span><br><span class=\"line\">        j += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;吃了<span class=\"subst\">&#123;j&#125;</span>个苹果&#x27;</span>)</span><br><span class=\"line\">    j += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<p>​\t\t使用while嵌套循环的时候记得要把内层嵌套循环的计数器放到里面，注意格式顺序问题</p>\n<p>九九乘法表“(注意联动关系)：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">j = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> j &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt;= j:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;i&#125;</span>*<span class=\"subst\">&#123;j&#125;</span>=<span class=\"subst\">&#123;j * i&#125;</span> &quot;</span>, end=<span class=\"string\">&quot;\\t&quot;</span>)</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>()</span><br><span class=\"line\">    j += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"13-2-while…else\"><a href=\"#13-2-while…else\" class=\"headerlink\" title=\"13.2 while…else\"></a>13.2 while…else</h3><p>格式：</p>\n<p>while 条件:<br>    条件成立重复执行的代码<br>else:<br>   循环<strong>正常结束</strong>之后要执行的代码</p>\n<p>注意（同样适用与for循环中的else）：</p>\n<p>1：如果是break结束的循环，则属于非正常结束循环，也就不会执行else之后的代码</p>\n<p>2：如果是continue跳过的循环，则结束后属于正常结束循环，会执行else之后的代码</p>\n<h2 id=\"14-字符串\"><a href=\"#14-字符串\" class=\"headerlink\" title=\"14 字符串\"></a>14 字符串</h2><p>注意 </p>\n<p>单引号和双引号是单行字符串<br>三引号是多行字符串，可以直接输入回车，而不需要用\\n来表示<br>也可以用来表示多行注释</p>\n<p>1 三引号也是字符串类型</p>\n<p>2 三引号形式的字符串支持写代码时换行。并且打印输出的时候也是换行的，而单引号和双引号则不行</p>\n<p>3 单引号只能套双引号，反之也一样，当然也可以 通过 \\ 的方式来做转义符</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 三个引号支持换行</span></span><br><span class=\"line\">str1 = <span class=\"string\">&quot;&quot;&quot;helel</span></span><br><span class=\"line\"><span class=\"string\">world</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(str1[<span class=\"number\">5</span>:<span class=\"number\">6</span>])) <span class=\"comment\">#注意这里，上面的helel后面不是直接跟着w，而是还有个空字符串</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"15-切片：对字符串的切片操作\"><a href=\"#15-切片：对字符串的切片操作\" class=\"headerlink\" title=\"15 切片：对字符串的切片操作\"></a>15 切片：对字符串的切片操作</h2><p>切片是指对操作的对象截取其中⼀部分的操作。<strong>字符串、列表、元组</strong>都支持切片操作。</p>\n<h3 id=\"15-1-语法\"><a href=\"#15-1-语法\" class=\"headerlink\" title=\"15.1 语法\"></a>15.1 语法</h3><p>格式：序列[开始位置下标:结束位置下标:步长]</p>\n<h3 id=\"15-2-代码\"><a href=\"#15-2-代码\" class=\"headerlink\" title=\"15.2 代码\"></a>15.2 代码</h3><p>注意：</p>\n<p>左闭右开，只包含左边，不包含右边。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切片</span></span><br><span class=\"line\"><span class=\"comment\"># 序列[开始位置下标:结束位置下标:步长]</span></span><br><span class=\"line\">    <span class=\"comment\"># 默认步长就是1</span></span><br><span class=\"line\">    <span class=\"comment\">#（步长为正数表示从左往右数，为负数表示从右往左走）</span></span><br><span class=\"line\">    <span class=\"comment\">#-1表示最后一个，0表示第一个</span></span><br><span class=\"line\"></span><br><span class=\"line\">str1 = <span class=\"string\">&#x27;012345678&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1[<span class=\"number\">0</span>:<span class=\"number\">4</span>:<span class=\"number\">1</span>])  <span class=\"comment\"># 步长1可以省略，默认步长就是1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1[<span class=\"number\">0</span>:<span class=\"number\">4</span>])  <span class=\"comment\"># 默认步长就是1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1[<span class=\"number\">2</span>:])  <span class=\"comment\"># 从下标为2处开始，一直到结束</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(str1[:-<span class=\"number\">1</span>])  <span class=\"comment\"># 从第一个字母开始，一直到结束，但是不包含最后一个（左闭右开原则）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#print(str1[-5:-1:-1]) #注意这种输出是没有结果的，因为顺序不对。</span></span><br><span class=\"line\">                      <span class=\"comment\"># -5到-1位置应该是从右往左，步长应该写为正数，或者将开始结束下标改变</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"16-对字符串的查找-修改操作\"><a href=\"#16-对字符串的查找-修改操作\" class=\"headerlink\" title=\"16 对字符串的查找&amp;修改操作\"></a>16 对字符串的查找&amp;修改操作</h2><h3 id=\"16-1-查找\"><a href=\"#16-1-查找\" class=\"headerlink\" title=\"16.1 查找\"></a>16.1 查找</h3><p>1 find()： 检测某个子串是否包含在这个字符串中，如果在,返回这个子串开始的位置下标，否则则返<br>回**-1**。</p>\n<p>语法：字符串序列.find(子串, 开始位置下标, 结束位置下标)  &#x2F;&#x2F;开始和结束为止下标可以不写，默认从0为止开始查找</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mystr = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.find(<span class=\"string\">&quot;and&quot;</span>)) <span class=\"comment\">#12</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.find(<span class=\"string\">&quot;and&quot;</span>,<span class=\"number\">15</span>,<span class=\"number\">30</span>)) <span class=\"comment\">#23</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>2 index()：检测某个子串是否包含在这个字符串中，如果在,返回这个子串开始的位置下标，否则则<br><strong>报异常</strong>。</p>\n<p>字符串序列.index(子串, 开始位置下标, 结束位置下标) </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mystr = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.index(<span class=\"string\">&#x27;and&#x27;</span>)) <span class=\"comment\"># 12</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.index(<span class=\"string\">&#x27;and&#x27;</span>, <span class=\"number\">15</span>, <span class=\"number\">30</span>)) <span class=\"comment\"># 23</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.index(<span class=\"string\">&#x27;ands&#x27;</span>)) <span class=\"comment\"># 报错</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>3 count()：返回统计某个子串在字符串中出现的次数</p>\n<ul>\n<li>rfind()： 和find()功能相同，但查找方向为右侧开始。</li>\n<li>rindex()：和index()功能相同，但查找方向为右侧开始。</li>\n<li>count()：返回某个子串在字符串中出现的次数</li>\n</ul>\n<h3 id=\"16-2-修改\"><a href=\"#16-2-修改\" class=\"headerlink\" title=\"16.2 修改\"></a>16.2 修改</h3><p>replace()：替换</p>\n<p>语法：字符串序列.replace(旧子串, 新子串, 替换次数) </p>\n<p>这里需要注意下，字符串为不可变类型，使用replace()方法后必须用一个新的变量来接收</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mystr = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果：hello world he itcast he itheima he Python</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.replace(<span class=\"string\">&#x27;and&#x27;</span>, <span class=\"string\">&#x27;he&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 结果：hello world he itcast he itheima he Python</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.replace(<span class=\"string\">&#x27;and&#x27;</span>, <span class=\"string\">&#x27;he&#x27;</span>, <span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"comment\"># 结果：hello world and itcast and itheima and Python</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>split()：按照指定字符分割字符串。</p>\n<p>语法：字符串序列.split(分割字符, num) </p>\n<p>注意：num表示的是分割字符出现的次数，即将来返回数据个数为num+1个。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mystr = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 结果：[&#x27;hello world &#x27;, &#x27; itcast &#x27;, &#x27; itheima &#x27;, &#x27; Python&#x27;]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.split(<span class=\"string\">&#x27;and&#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 结果：[&#x27;hello world &#x27;, &#x27; itcast &#x27;, &#x27; itheima and Python&#x27;]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.split(<span class=\"string\">&#x27;and&#x27;</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># 结果：[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;and&#x27;, &#x27;itcast&#x27;, &#x27;and&#x27;, &#x27;itheima&#x27;, &#x27;and&#x27;, &#x27;Python&#x27;]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.split(<span class=\"string\">&#x27; &#x27;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 结果：[&#x27;hello&#x27;, &#x27;world&#x27;, &#x27;and itcast and itheima and Python&#x27;]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.split(<span class=\"string\">&#x27; &#x27;</span>, <span class=\"number\">2</span>))</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>join()：用⼀个字符或子串合并字符串，即是将多个字符串合并为一个新的字符串。</p>\n<p>语法:字符或子串.join(多字符串组成的序列) </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list1 = [<span class=\"string\">&#x27;chuan&#x27;</span>, <span class=\"string\">&#x27;zhi&#x27;</span>, <span class=\"string\">&#x27;bo&#x27;</span>, <span class=\"string\">&#x27;ke&#x27;</span>]</span><br><span class=\"line\">t1 = (<span class=\"string\">&#x27;aa&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;cc&#x27;</span>, <span class=\"string\">&#x27;ddd&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 结果：chuan_zhi_bo_ke</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;_&#x27;</span>.join(list1))</span><br><span class=\"line\"><span class=\"comment\"># 结果：aa...b...cc...ddd</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;...&#x27;</span>.join(t1))</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>join()：用⼀个字符或子串合并字符串，即是将多个字符串合并为⼀个新的字符串。</p>\n<p>语法:字符或子串.join(多字符串组成的序列) </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 注意使用join()时，列表或者元祖里面只能是字符串</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">list1 = [<span class=\"string\">&#x27;chuan&#x27;</span>, <span class=\"string\">&#x27;zhi&#x27;</span>, <span class=\"string\">&#x27;bo&#x27;</span>, <span class=\"string\">&#x27;ke&#x27;</span>] <span class=\"comment\">#列表或者元祖里面只能是字符串</span></span><br><span class=\"line\">t1 = (<span class=\"string\">&#x27;aa&#x27;</span>, <span class=\"string\">&#x27;b&#x27;</span>, <span class=\"string\">&#x27;cc&#x27;</span>, <span class=\"string\">&#x27;ddd&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 结果：chuan_zhi_bo_ke</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;_&#x27;</span>.join(list1))</span><br><span class=\"line\"><span class=\"comment\"># 结果：aa...b...cc...ddd</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;...&#x27;</span>.join(t1))</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p><strong>其余对字符串的操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mystr = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 只有首字母大写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.capitalize())</span><br><span class=\"line\"><span class=\"comment\"># 每个单词首字母大写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.title())</span><br><span class=\"line\"><span class=\"comment\"># 全部字母转大写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.upper())</span><br><span class=\"line\"><span class=\"comment\"># 全部字母转小写</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr.lower())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;1-----------------------------------------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr2 = <span class=\"string\">&quot;    hello world and itcast and itheima and Python    &quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 删除字符串左边空白</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr2.lstrip())</span><br><span class=\"line\"><span class=\"comment\"># 删除字符串右边空白</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr2.rstrip())</span><br><span class=\"line\"><span class=\"comment\"># 删除字符串两边空白</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr2.rstrip())</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;2-----------------------------------------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr3 = <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 返回⼀个原字符串左对⻬,并使用指定字符(默认空格)填充⾄对应⻓度的新字符串。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr3.ljust(<span class=\"number\">10</span>,<span class=\"string\">&quot;.&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 返回⼀个原字符串右对⻬,并使用指定字符(默认空格)填充⾄对应⻓度的新字符串。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr3.rjust(<span class=\"number\">10</span>,<span class=\"string\">&quot;.&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\"># 返回⼀个原字符串居中对⻬,并使用指定字符(默认空格)填充⾄对应⻓度的新字符串。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr3.center(<span class=\"number\">10</span>,<span class=\"string\">&quot;.&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;3-----------------------------------------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr4 = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 检查字符串是否是以指定⼦串开头，是则返回 True，否则返回 False。如果设置了开始和结束位置下标，则在指定范围内检查。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr4.startswith(<span class=\"string\">&quot;world&quot;</span>,<span class=\"number\">6</span>,<span class=\"number\">15</span>))</span><br><span class=\"line\"><span class=\"comment\"># 检查字符串是否是以指定⼦串结尾，是则返回 True，否则返回 False。</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr4.endswith(<span class=\"string\">&quot;Python&quot;</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;4-----------------------------------------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">mystr5 = <span class=\"string\">&quot;hello world and itcast and itheima and Python&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 全是字母返回true,否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr5.isalpha())</span><br><span class=\"line\"><span class=\"comment\"># 全是字母返回数字,否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr5.isdigit())</span><br><span class=\"line\"><span class=\"comment\"># 字母或数字或组合返回true,否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr5.isalnum())</span><br><span class=\"line\"><span class=\"comment\"># 全是空白返回true,否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(mystr5.isspace())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>运行结果</strong></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/python_02.png\"></p>\n<h2 id=\"17-列表\"><a href=\"#17-列表\" class=\"headerlink\" title=\"17 列表\"></a>17 列表</h2><p>列表是一个可变类型</p>\n<p>所谓可变类型就是说我可以在列表自身基础之上修改，而不用重新赋值给一个新的变量接收。</p>\n<h3 id=\"17-1-列表的常用操作\"><a href=\"#17-1-列表的常用操作\" class=\"headerlink\" title=\"17.1 列表的常用操作\"></a>17.1 列表的常用操作</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_list = [<span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;李四&quot;</span>, <span class=\"string\">&quot;王五&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 打印索引下标为1的数据</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 返回&quot;张三&quot;的索引下标</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list.index(<span class=\"string\">&quot;张三&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计&quot;王五&quot;出现的次数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list.count(<span class=\"string\">&quot;王五&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表长度</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">len</span>(name_list))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;张三&quot;在列表则返回true，否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;张三&quot;</span> <span class=\"keyword\">in</span> name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &quot;张三&quot;不在列表则返回true,否则false</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;张三&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># reverse() 逆置</span></span><br><span class=\"line\">lis1.reverse()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lis1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># sort() 排序,默认升序</span></span><br><span class=\"line\"><span class=\"comment\"># lis1.sort()</span></span><br><span class=\"line\">lis1.sort(reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(lis1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># copy() 列表复制</span></span><br><span class=\"line\">list2 = lis1.copy()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(list2)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"17-2-列表的增删改查操作\"><a href=\"#17-2-列表的增删改查操作\" class=\"headerlink\" title=\"17.2 列表的增删改查操作\"></a>17.2 列表的增删改查操作</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name_list = [<span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;李四&quot;</span>, <span class=\"string\">&quot;王五&quot;</span>]</span><br><span class=\"line\"><span class=\"comment\"># 列表增加操作</span></span><br><span class=\"line\"><span class=\"comment\"># 注意：</span></span><br><span class=\"line\"><span class=\"comment\"># 1 如果列表用append()追加的是一个序列，则追加整个序列到列表最后。</span></span><br><span class=\"line\"><span class=\"comment\"># 2 如果用extend()追加，则是将这个序列的数据逐⼀添加到列表最后</span></span><br><span class=\"line\"><span class=\"comment\"># 3 列表追加元素可以是重复元素</span></span><br><span class=\"line\">name_list.append(<span class=\"string\">&quot;赵六&quot;</span>)</span><br><span class=\"line\">name_list.append((<span class=\"number\">11</span>,<span class=\"number\">22</span>))</span><br><span class=\"line\">name_list.extend(<span class=\"string\">&quot;abcde&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4 insert()指定位置增加元素</span></span><br><span class=\"line\">name_list.insert(<span class=\"number\">0</span>,<span class=\"string\">&quot;指定位置增加元素&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表删除操作</span></span><br><span class=\"line\"><span class=\"comment\"># 1 del()删除指定下标元素</span></span><br><span class=\"line\"><span class=\"keyword\">del</span>(name_list[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list)</span><br><span class=\"line\"><span class=\"comment\"># 2 pop()如果不指定下标，默认弹出最后一个元素,需要一个变量来接收</span></span><br><span class=\"line\">pao_name=name_list.pop(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list)</span><br><span class=\"line\"><span class=\"comment\"># 3 remove(数据)</span></span><br><span class=\"line\">name_list.remove(<span class=\"string\">&quot;王五&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4 clear() 清空列表</span></span><br><span class=\"line\">name_list.clear()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表修改操作</span></span><br><span class=\"line\">name_list[<span class=\"number\">0</span>]=<span class=\"string\">&quot;aaa&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列表查找操作</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(name_list[<span class=\"number\">0</span>])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"17-3-随机分配老师到办公室问题\"><a href=\"#17-3-随机分配老师到办公室问题\" class=\"headerlink\" title=\"17.3 随机分配老师到办公室问题\"></a>17.3 随机分配老师到办公室问题</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 问题描述：</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">8位老师分别叫&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;</span></span><br><span class=\"line\"><span class=\"string\">3个办公室</span></span><br><span class=\"line\"><span class=\"string\">将8位老师随机分配到3个办公室</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">teachers = [<span class=\"string\">&quot;A&quot;</span>, <span class=\"string\">&quot;B&quot;</span>, <span class=\"string\">&quot;C&quot;</span>, <span class=\"string\">&quot;D&quot;</span>, <span class=\"string\">&quot;E&quot;</span>, <span class=\"string\">&quot;F&quot;</span>, <span class=\"string\">&quot;G&quot;</span>, <span class=\"string\">&quot;H&quot;</span>]</span><br><span class=\"line\">offices = [[], [], []]</span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> teachers:</span><br><span class=\"line\">    num = random.randint(<span class=\"number\">0</span>, <span class=\"number\">2</span>)</span><br><span class=\"line\">    offices[num].append(name)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(offices)</span><br><span class=\"line\"></span><br><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> office <span class=\"keyword\">in</span> offices:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;办公室<span class=\"subst\">&#123;i&#125;</span>的老师有<span class=\"subst\">&#123;<span class=\"built_in\">len</span>(office)&#125;</span>位&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> tec <span class=\"keyword\">in</span> office:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(tec)</span><br><span class=\"line\">    i += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"18-元祖\"><a href=\"#18-元祖\" class=\"headerlink\" title=\"18 元祖\"></a>18 元祖</h2><p><strong>元祖内的数据是不能修改的，也不能删除某个数据，除非是要删除整个元祖</strong></p>\n<p><strong>！！！但是：如果元祖里面有列表，那么列表里的数据是可以修改的，尽管如此，但是不建议去做</strong></p>\n<p>这里需要说明下：元祖和列表一样其实是可以存储不同类型的数据的，但是建议使用同一种类型数据</p>\n<h3 id=\"18-1-定义元祖\"><a href=\"#18-1-定义元祖\" class=\"headerlink\" title=\"18.1 定义元祖\"></a>18.1 定义元祖</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意：元祖只有一个数据时也必须加，否则就不是元祖类型了</span></span><br><span class=\"line\">t2 = (<span class=\"number\">1</span>,)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(t2))</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"18-2-元祖的常见操作（主要是查找操作）\"><a href=\"#18-2-元祖的常见操作（主要是查找操作）\" class=\"headerlink\" title=\"18.2 元祖的常见操作（主要是查找操作）\"></a>18.2 元祖的常见操作（主要是查找操作）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">t3 = (<span class=\"string\">&quot;a&quot;</span>,<span class=\"string\">&quot;b&quot;</span>,<span class=\"string\">&quot;c&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 查找</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(t3[<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># index()：查找某个数据，如果数据存在返回对应的下标，否则报错，语法和列表、字符串的index()相同</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(t3.index(<span class=\"string\">&quot;a&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 统计某个元素的个数</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(t3.count(<span class=\"string\">&quot;a&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"19-字典\"><a href=\"#19-字典\" class=\"headerlink\" title=\"19 字典\"></a>19 字典</h2><p>字典里的数据必须是键值对的形式，可以看成map集合</p>\n<p>符号是大括号{}</p>\n<h3 id=\"19-1-字典的增删改查操作\"><a href=\"#19-1-字典的增删改查操作\" class=\"headerlink\" title=\"19.1 字典的增删改查操作\"></a>19.1 字典的增删改查操作</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dict1 = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"number\">18</span>, <span class=\"string\">&quot;address&quot;</span>: <span class=\"string\">&quot;徐州&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># key在字典中不存在就是新增，如果存在就是修改</span></span><br><span class=\"line\">dict1[<span class=\"string\">&quot;id&quot;</span>]=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict1)</span><br><span class=\"line\">dict1[<span class=\"string\">&quot;age&quot;</span>]=<span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除或者清空字典或者删除指定键值对</span></span><br><span class=\"line\"><span class=\"comment\"># del dict1</span></span><br><span class=\"line\"><span class=\"comment\"># dict1.clear()</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> dict1[<span class=\"string\">&quot;name&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(dict1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字典数据的查找(和map一样，keys集合，values集合，entry集合这样)</span></span><br><span class=\"line\">keys = dict1.keys()</span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> keys:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(dict1[key])</span><br><span class=\"line\">values = dict1.values()</span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> values:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">items = dict1.items()</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(item)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"comment\"># 拆包动作</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> dict1.items():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;key&#125;</span>=<span class=\"subst\">&#123;value&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"20-集合\"><a href=\"#20-集合\" class=\"headerlink\" title=\"20  集合\"></a>20  集合</h2><p>集合里的数据 没有重复的（参照set集合）它会去重。</p>\n<p>集合没有顺序，所以不支持下标的操作</p>\n<h3 id=\"20-1-集合增删查操作\"><a href=\"#20-1-集合增删查操作\" class=\"headerlink\" title=\"20.1 集合增删查操作\"></a>20.1 集合增删查操作</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s1 = &#123;<span class=\"number\">12</span>, <span class=\"number\">22</span>, <span class=\"number\">322</span>, <span class=\"number\">42</span>, <span class=\"number\">5</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集合增加数据</span></span><br><span class=\"line\"><span class=\"comment\"># add追加一个元素</span></span><br><span class=\"line\">s1.add(<span class=\"number\">100</span>)</span><br><span class=\"line\"><span class=\"comment\"># update只能追加序列</span></span><br><span class=\"line\">s1.update([<span class=\"string\">&quot;a&quot;</span>, <span class=\"string\">&quot;b&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集合删除操作</span></span><br><span class=\"line\"><span class=\"comment\"># 删除指定数据，不存在则报错</span></span><br><span class=\"line\">s1.remove(<span class=\"number\">12</span>)</span><br><span class=\"line\"><span class=\"comment\"># 删除指定数据，不存在也不会报错</span></span><br><span class=\"line\">s1.discard(<span class=\"number\">12</span>)</span><br><span class=\"line\"><span class=\"comment\"># 随机删除一个数据</span></span><br><span class=\"line\">s1.pop()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(s1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集合查找操作</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">10</span> <span class=\"keyword\">in</span> s1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">12</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> s1)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"20-2-注意：\"><a href=\"#20-2-注意：\" class=\"headerlink\" title=\"20.2 注意：\"></a>20.2 注意：</h3><p>创建集合可以使用{}或者set()，<strong>但是</strong>如果只创建空集合则<strong>只能</strong>使用set()，因为{}会创建空字典</p>\n<h2 id=\"21-公共操作\"><a href=\"#21-公共操作\" class=\"headerlink\" title=\"21 公共操作\"></a>21 公共操作</h2><p><img src=\"https://vegetabhlimg.netlify.app/img/python_03.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;_&quot;</span>*<span class=\"number\">20</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"https://vegetabhlimg.netlify.app/img/python_04.png\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 公共操作</span></span><br><span class=\"line\"><span class=\"comment\"># rnage(),注意：rnage()是左闭右开的，所以不包含结束数字</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">1</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i,end=<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"22-函数\"><a href=\"#22-函数\" class=\"headerlink\" title=\"22 函数\"></a>22 函数</h2><p>函数都是先定义再调用</p>\n<p>定义格式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">函数名</span>():</span><br><span class=\"line\">    代码<span class=\"number\">1</span></span><br><span class=\"line\">    代码<span class=\"number\">2</span></span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"22-1-一些关键函数\"><a href=\"#22-1-一些关键函数\" class=\"headerlink\" title=\"22.1 一些关键函数\"></a>22.1 一些关键函数</h3><ul>\n<li>help()函数，查看函数说明文档</li>\n<li>未完</li>\n</ul>\n<h3 id=\"22-2-说明文档\"><a href=\"#22-2-说明文档\" class=\"headerlink\" title=\"22.2 说明文档\"></a>22.2 说明文档</h3><p>类似如下代码所示，可以输入多行注释（””” “””），按下回车后会给出说明文档格式的参数注释（比如参数和返回值）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum_num</span>(<span class=\"params\">a,b</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param a:参数1</span></span><br><span class=\"line\"><span class=\"string\">    :param b:参数2</span></span><br><span class=\"line\"><span class=\"string\">    :return:返回值</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> a+b</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"22-3-函数执行的一些细节（重要）\"><a href=\"#22-3-函数执行的一些细节（重要）\" class=\"headerlink\" title=\"22.3 函数执行的一些细节（重要）\"></a>22.3 函数执行的一些细节（重要）</h3><ul>\n<li>global可以用来声明一个变量为全局变量，一般都是用来提升作用域之类的，稍微注意下这个声明即可</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">testA</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> b <span class=\"comment\"># 这里声明b为全局变量（注意上面并未提前声明）</span></span><br><span class=\"line\">    b=<span class=\"number\">300</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">testB</span>():</span><br><span class=\"line\">    <span class=\"keyword\">global</span> a</span><br><span class=\"line\">    a = <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\">testA()</span><br><span class=\"line\">testB()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a) <span class=\"comment\"># 此时这里打印a可以看到已经变成了200</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b) <span class=\"comment\"># 注意看下这里，因为b被声明为了全局变量，所以此处可以打印到b的值</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>函数返回多个返回值格式：</strong></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 函数返回多个返回值格式：</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">return_num</span>():</span><br><span class=\"line\">    <span class=\"comment\"># return 1, 2 #默认是元祖类型</span></span><br><span class=\"line\">    <span class=\"comment\"># return [1,2,3,4,5]</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>,<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">18</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">result = return_num()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(result))</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>关键字参数顺序问题</strong></li>\n</ul>\n<p>如果没有关键参数，则参数值和定义的参数必须一一对应（参数位置也必须一样）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># def info(关键字参数1=位置参数1,关键字参数2=位置参数2,...),关键字参数在前，位置参数在后</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_info</span>(<span class=\"params\">name, gender, age</span>): </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;name&#125;</span>的性别是<span class=\"subst\">&#123;gender&#125;</span>,年龄为<span class=\"subst\">&#123;age&#125;</span>岁&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">   </span><br><span class=\"line\">user_info(<span class=\"string\">&quot;张三&quot;</span>, <span class=\"string\">&quot;男&quot;</span>, <span class=\"number\">18</span>) <span class=\"comment\">#顺序必须一样</span></span><br><span class=\"line\"></span><br><span class=\"line\">user_info(age=<span class=\"number\">11</span>,name=<span class=\"string\">&quot;李四&quot;</span>,gender=<span class=\"string\">&quot;女&quot;</span>) <span class=\"comment\">#顺序可以不一样（比如这个age就是关键字参数，11就是位置参数）</span></span><br><span class=\"line\"></span><br><span class=\"line\">user_info(<span class=\"string\">&quot;李四&quot;</span>,gender=<span class=\"string\">&quot;男&quot;</span>,age=<span class=\"number\">18</span>) <span class=\"comment\">#像这种关键参数和位置参数混合书写的，首先位置参数必须在关键字参数前面，并且位置参数（李四）的顺序必须一样，但是关键字参数之间却不存在先后顺序</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意！！！</strong></p>\n<p>如果是混合书写，也就是既有关键字参数和位置参数的，也有只是位置参数的，<strong>则位置参数必须在关键字参数前面（并且位置参数必须顺序对应），但是关键字参数之间却不存在先后顺序</strong></p>\n<ul>\n<li><strong>缺省参数</strong></li>\n</ul>\n<p>缺省参数又叫默认参数，注意，调用函数时可不传该默认参数的值（注意：所有位置参数必须出现在默认参数前，包括函数定义和调用）。</p>\n<p><img src=\"/post/Python.htm/image-20201023201822521.png\" alt=\"image-20201023201822521\"></p>\n<ul>\n<li><strong>可变参数</strong></li>\n</ul>\n<p>1.包裹位置传递</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_info</span>(<span class=\"params\">*args</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(args)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info(<span class=\"string\">&quot;张三&quot;</span>) <span class=\"comment\">#它会根据传进参数的位置合并为⼀个元组(tuple)，args是元组类型，这就是包裹位置传递。</span></span><br></pre></td></tr></table></figure>\n\n<p>注意：它会根据传进参数的位置合并为⼀个**元组(tuple)**，args是元组类型，这就是包裹位置传递。</p>\n<p>2.包裹关键字传递</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 收集所有关键字参数，返回的是一个字典</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_info2</span>(<span class=\"params\">**kwargs</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(kwargs)</span><br><span class=\"line\"></span><br><span class=\"line\">user_info2(name=<span class=\"string\">&quot;张三&quot;</span>, age=<span class=\"number\">18</span>, gender=<span class=\"string\">&quot;男&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>注意：它会收集所有关键字参数，返回的是一个<strong>字典</strong>，kwargs是<strong>字典类型</strong>，这就是包裹关键字传递。</p>\n<p>上面的这两种情况又叫做组包过程（就是把零散的数据整合到一起）</p>\n<ul>\n<li><strong>拆包</strong></li>\n</ul>\n<p>1.拆包元祖</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拆包元祖</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">user_info</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">num1, num2 = user_info()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;num1&#125;</span>,<span class=\"subst\">&#123;num2&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>2.拆包字典</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拆包字典</span></span><br><span class=\"line\">userInfo = &#123;<span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;TOM&quot;</span>, <span class=\"string\">&quot;age&quot;</span>: <span class=\"string\">&quot;18&quot;</span>&#125;</span><br><span class=\"line\">name, age = userInfo</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;name&#125;</span>,<span class=\"subst\">&#123;age&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;userInfo[name], userInfo[age]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>Python的交换变量方式</strong></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a, b = <span class=\"number\">1</span>, <span class=\"number\">2</span></span><br><span class=\"line\">a, b = b, a</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;a&#125;</span>,<span class=\"subst\">&#123;b&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"22-4-可变和不可变类型\"><a href=\"#22-4-可变和不可变类型\" class=\"headerlink\" title=\"22.4 可变和不可变类型\"></a>22.4 可变和不可变类型</h3><p><img src=\"https://vegetabhlimg.netlify.app/img/python_05.png\"></p>\n<h2 id=\"23-学生管理系统（综合上面所学知识）\"><a href=\"#23-学生管理系统（综合上面所学知识）\" class=\"headerlink\" title=\"23 学生管理系统（综合上面所学知识）\"></a>23 学生管理系统（综合上面所学知识）</h2><p>这个看下代码就行了</p>\n<p>一些注意点：</p>\n<ol>\n<li><p>像这种for后接else的语法</p>\n<p>总结起来比较简单，如果for循环<strong>正常结束</strong>，else中语句执行。如果是break的，则不执行。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> info:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user_name == i[<span class=\"string\">&quot;name&quot;</span>]:</span><br><span class=\"line\">        i[<span class=\"string\">&quot;id&quot;</span>] = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入修改的学号&quot;</span>)</span><br><span class=\"line\">        i[<span class=\"string\">&quot;tel&quot;</span>] = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入要修改的手机号&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;修改成功&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;该学员不存在&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"24-lambda\"><a href=\"#24-lambda\" class=\"headerlink\" title=\"24 lambda\"></a>24 lambda</h2><p>如果一个函数有一个返回值，并且只有一句代码，可以使用 lambda简化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">格式：lambda 参数列表 ： 表达式 </span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"24-1-示例（计算a-b）\"><a href=\"#24-1-示例（计算a-b）\" class=\"headerlink\" title=\"24.1 示例（计算a + b）\"></a>24.1 示例（计算a + b）</h3><p>求和示例</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">l1</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 格式：lambda 参数列表 ： 表达式</span></span><br><span class=\"line\">l2 = <span class=\"keyword\">lambda</span> a, b: a + b</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l2(<span class=\"number\">1</span>, <span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>注意：</p>\n<ul>\n<li>上面打印的时候是   l2(x,x),  如果使用直接打印l2，那么打印的是地址。</li>\n</ul>\n<h3 id=\"24-2-lambda的参数形式\"><a href=\"#24-2-lambda的参数形式\" class=\"headerlink\" title=\"24.2 lambda的参数形式\"></a>24.2 lambda的参数形式</h3><p>这里注意下对于<strong>默认参数</strong>，如果传了参数，那么就会覆盖掉默认参数，见下面代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># lambda参数</span></span><br><span class=\"line\">l1 = <span class=\"keyword\">lambda</span>: <span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(l1())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda 一个参数</span></span><br><span class=\"line\">l2=<span class=\"keyword\">lambda</span> a:a*<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(l2(<span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda 默认参数(缺省参数)</span></span><br><span class=\"line\">l3 = <span class=\"keyword\">lambda</span> a, b, c=<span class=\"number\">100</span>: a + b + c</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l3(<span class=\"number\">1</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l3(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>)) <span class=\"comment\">#这里需要说明下如果传了参数，那么就会覆盖掉默认参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda  可变参数(*args)</span></span><br><span class=\"line\">l4 = <span class=\"keyword\">lambda</span> *args: args</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l4(<span class=\"number\">1</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda  可变参数(**kwargs)</span></span><br><span class=\"line\">l5 = <span class=\"keyword\">lambda</span> **kwargs: kwargs</span><br><span class=\"line\"><span class=\"built_in\">print</span>(l5(name=<span class=\"string\">&quot;张三&quot;</span>,age=<span class=\"number\">18</span>))</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"24-3-lambda应用—列表数据按字典key的值排序\"><a href=\"#24-3-lambda应用—列表数据按字典key的值排序\" class=\"headerlink\" title=\"24.3 lambda应用—列表数据按字典key的值排序\"></a>24.3 lambda应用—列表数据按字典key的值排序</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">students=[</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;张三&quot;</span>,<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">15</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;wangwu&quot;</span>,<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">17</span>&#125;,</span><br><span class=\"line\">    &#123;<span class=\"string\">&quot;name&quot;</span>:<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;age&quot;</span>:<span class=\"number\">16</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"comment\"># 按照name升序排序</span></span><br><span class=\"line\">students.sort(key=<span class=\"keyword\">lambda</span> x:x[<span class=\"string\">&quot;name&quot;</span>])</span><br><span class=\"line\"><span class=\"built_in\">print</span>(students)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按照age降序排序</span></span><br><span class=\"line\">students.sort(key=<span class=\"keyword\">lambda</span> x:x[<span class=\"string\">&quot;age&quot;</span>],reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(students)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"24-4-高阶函数\"><a href=\"#24-4-高阶函数\" class=\"headerlink\" title=\"24.4 高阶函数\"></a>24.4 高阶函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">sum_num</span>(<span class=\"params\">a, b, f</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> f(a) + f(b)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 绝对值求求和</span></span><br><span class=\"line\">num = sum_num(-<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"built_in\">abs</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(num)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 四舍五入</span></span><br><span class=\"line\">num2 = sum_num(<span class=\"number\">1.1</span>, <span class=\"number\">2</span>, <span class=\"built_in\">round</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(num2)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"24-5-内置高阶函数\"><a href=\"#24-5-内置高阶函数\" class=\"headerlink\" title=\"24.5 内置高阶函数\"></a>24.5 内置高阶函数</h3><p><strong>简单说就是把函数功能作用于列表序列</strong></p>\n<p>下面是三个常见的内置高阶函数</p>\n<h4 id=\"24-5-1-map\"><a href=\"#24-5-1-map\" class=\"headerlink\" title=\"24.5.1 map()\"></a>24.5.1 map()</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">lis1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun1</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x ** <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">iterator = <span class=\"built_in\">map</span>(fun1, lis1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(iterator))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"24-5-2-reduce\"><a href=\"#24-5-2-reduce\" class=\"headerlink\" title=\"24.5.2 reduce()\"></a>24.5.2 reduce()</h4><p>这里需要注意下：</p>\n<p>reduce(func(x,y)，lst)          其中func必须有两个参数，每次func计算的结果继续和序列的下一个元素做累<br>积计算。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> functools</span><br><span class=\"line\"></span><br><span class=\"line\">lis1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">def</span> <span class=\"title function_\">fun2</span>(<span class=\"params\">a,b</span>):</span><br><span class=\"line\">     <span class=\"keyword\">return</span> a+b</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#求和</span></span><br><span class=\"line\"> reduce = functools.reduce(fun2, lis1)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(reduce)</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"24-5-3-filter\"><a href=\"#24-5-3-filter\" class=\"headerlink\" title=\"24.5.3 filter()\"></a>24.5.3 filter()</h4><p>从函数名就知道干什么的了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">lis1 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fun3</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x%<span class=\"number\">2</span>==<span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">filt = <span class=\"built_in\">filter</span>(fun3, lis1)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">list</span>(filt))</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"25-文件操作\"><a href=\"#25-文件操作\" class=\"headerlink\" title=\"25 文件操作\"></a>25 文件操作</h2><p>步骤：</p>\n<ul>\n<li>打开文件</li>\n<li>读写等操作</li>\n<li>关闭文件</li>\n</ul>\n<h3 id=\"25-1-打开文件模式\"><a href=\"#25-1-打开文件模式\" class=\"headerlink\" title=\"25.1 打开文件模式\"></a>25.1 打开文件模式</h3><p><img src=\"https://vegetabhlimg.netlify.app/img/python_06.png\"></p>\n<p>圈中的几个都可以用于读写，区别看下<strong>文件指针</strong>的位置移动情况</p>\n<h3 id=\"25-2-文件对象方法\"><a href=\"#25-2-文件对象方法\" class=\"headerlink\" title=\"25.2 文件对象方法\"></a>25.2 文件对象方法</h3><ul>\n<li>write()</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">对象对象.write(&#x27;内容&#x27;) </span><br></pre></td></tr></table></figure>\n\n<p><strong>注意</strong>：</p>\n<ol>\n<li><p>w 和 a 模式：如果文件不存在则创建该文件；如果文件存在， w 模式先清空再写入， a 模式<br>直接末尾追加。</p>\n</li>\n<li><p>r 模式：如果文件不存在则报错。</p>\n</li>\n</ol>\n<ul>\n<li>read()</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件对象.read(num) </span><br></pre></td></tr></table></figure>\n\n<p>num表示要从文件中读取的数据的长度（单位是字节），如果没有传入num，那么就表示读取文<br>件中<strong>所有</strong>的数据。</p>\n<ul>\n<li>readlines()</li>\n</ul>\n<p>按照行的方式把整个文件中的内容进行一次性读取，并且返回的是一个列表</p>\n<ul>\n<li>readline()</li>\n</ul>\n<p>一次读取一行</p>\n<ul>\n<li><strong>seek()</strong></li>\n</ul>\n<p>用来移动文件指针</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件对象.seek(偏移量, 起始位置)</span><br></pre></td></tr></table></figure>\n\n<p>起始位置：</p>\n<p>​\t0：文件开头</p>\n<p>​\t1：当前位置</p>\n<p>​\t2：文件结尾</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;2.txt&quot;</span>, <span class=\"string\">&quot;a+&quot;</span>)  <span class=\"comment\">#2.txt中数据为aaaaabbbbbccccc</span></span><br><span class=\"line\">f.seek(<span class=\"number\">3</span>,<span class=\"number\">0</span>)              <span class=\"comment\">#从0（开头开始，向右偏移三个单位）</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(f.read())          <span class=\"comment\">#a+模式，所以可以读写</span></span><br><span class=\"line\">f.close()</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>注意</strong>：</p>\n<p>如果seek（x，y）中x,y均为0 ，那么可以省略写成一个0</p>\n<p><strong>其余的一些方法看下下面总结的代码就行了</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.rename(&quot;4.txt&quot;,&quot;b.txt&quot;)  将4.txt改名为b.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.remove(&quot;b.txt&quot;)          删除b.txt文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(os.getcwd())          打印当前文件路径</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.mkdir(&quot;aaa&quot;)             创建文件夹</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.rmdir(&quot;aaa&quot;)              删除文件夹</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># os.chdir(&quot;aaa&quot;)             chdir(&quot;xxx&quot;)  改变目录路径</span></span><br><span class=\"line\"><span class=\"comment\"># f = open(&quot;bbb.txt&quot;, &quot;w&quot;, encoding=&quot;utf-8&quot;)  写入中文，避免乱码</span></span><br><span class=\"line\"><span class=\"comment\"># f.write(&quot;你好&quot;)</span></span><br><span class=\"line\"><span class=\"comment\"># f.close()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.listdir(<span class=\"string\">&quot;../day01&quot;</span>))   <span class=\"comment\">#获取某个文件夹下的所有文件，返回一个列表</span></span><br><span class=\"line\">                                <span class=\"comment\"># (稍微注意下这里涉及到相对和绝对路径的一些注意事项 )</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"25-3-总结案例（批量重命名添加-删除）\"><a href=\"#25-3-总结案例（批量重命名添加-删除）\" class=\"headerlink\" title=\"25.3 总结案例（批量重命名添加&#x2F;删除）\"></a>25.3 总结案例（批量重命名添加&#x2F;删除）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">批量重命名添加/删除   字符串</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">os.chdir(<span class=\"string\">&quot;aaa&quot;</span>)  <span class=\"comment\"># 进入aaa文件夹</span></span><br><span class=\"line\"><span class=\"comment\"># print(os.listdir())</span></span><br><span class=\"line\">flag = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> os.listdir():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag == <span class=\"number\">1</span>:</span><br><span class=\"line\">        newName = <span class=\"string\">&quot;python_&quot;</span> + i</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> flag == <span class=\"number\">2</span>:</span><br><span class=\"line\">        num = <span class=\"built_in\">len</span>(<span class=\"string\">&quot;python_&quot;</span>)</span><br><span class=\"line\">        newName = i[num:]</span><br><span class=\"line\">    os.rename(i, newName)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(os.listdir())</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"26-面向对象\"><a href=\"#26-面向对象\" class=\"headerlink\" title=\"26 面向对象\"></a>26 面向对象</h2><h3 id=\"26-1-几种魔法方法\"><a href=\"#26-1-几种魔法方法\" class=\"headerlink\" title=\"26.1 几种魔法方法\"></a>26.1 几种魔法方法</h3><p>类比Java里的几种方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Washer</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, width, height</span>):  <span class=\"comment\"># 这样写就类似于Java的构造方法一样</span></span><br><span class=\"line\">        self.width = width</span><br><span class=\"line\">        self.height = height</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;你好&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;打印对象不再输出地址值，而是此处_str_()魔法方法的返回值&quot;</span> <span class=\"comment\">#--相当于tostring()</span></span><br><span class=\"line\">    <span class=\"comment\"># def __del__(self):</span></span><br><span class=\"line\">    <span class=\"comment\">#     print(f&quot;&#123;self&#125;对象被删除时自动调用&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">print_info</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;宽度为<span class=\"subst\">&#123;self.width&#125;</span>，高度为<span class=\"subst\">&#123;self.height&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">w1 = Washer(<span class=\"number\">100</span>, <span class=\"number\">300</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(w1) <span class=\"comment\">#测试__str__(self)魔法方法</span></span><br><span class=\"line\"><span class=\"comment\"># del w1    #测试__del__(self)魔法方法   删除时自动调用</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>小示例</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 烤地瓜</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SweetPotato</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.cook_time = <span class=\"number\">0</span></span><br><span class=\"line\">        self.cook_static = <span class=\"string\">&quot;生的&quot;</span></span><br><span class=\"line\">        self.condiments = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">cook</span>(<span class=\"params\">self, time</span>):</span><br><span class=\"line\">        self.cook_time += time</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= self.cook_time &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">            self.cook_static = <span class=\"string\">&quot;生的&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"number\">3</span> &lt;= self.cook_time &lt; <span class=\"number\">5</span>:</span><br><span class=\"line\">            self.cook_static = <span class=\"string\">&quot;半生不熟&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"number\">5</span> &lt;= self.cook_time &lt; <span class=\"number\">8</span>:</span><br><span class=\"line\">            self.cook_static = <span class=\"string\">&quot;熟了&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"number\">8</span> &lt;= self.cook_time &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">            self.cook_static = <span class=\"string\">&quot;烤糊了&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_condiments</span>(<span class=\"params\">self,condiments</span>):</span><br><span class=\"line\">        self.condiments.append(condiments)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&quot;这个地瓜烤了<span class=\"subst\">&#123;self.cook_time&#125;</span>小时了，状态为<span class=\"subst\">&#123;self.cook_static&#125;</span>,加了调料<span class=\"subst\">&#123;self.condiments&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sp = SweetPotato()</span><br><span class=\"line\">sp.cook(<span class=\"number\">5</span>)</span><br><span class=\"line\">sp.add_condiments(<span class=\"string\">&quot;辣椒面&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(sp)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"26-2-继承（留意下几个注意点）\"><a href=\"#26-2-继承（留意下几个注意点）\" class=\"headerlink\" title=\"26.2  继承（留意下几个注意点）\"></a>26.2  继承（留意下几个注意点）</h3><p>- </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info_print</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.name = <span class=\"string\">&quot;李四&quot;</span></span><br><span class=\"line\">        self.age = <span class=\"string\">&quot;11&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info_print2</span>(<span class=\"params\">self, address</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;self.name&#125;</span>+<span class=\"subst\">&#123;address&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意：当一个类有多个⽗类的时候，默认使用第一个⽗类的同名属性和方法。</span></span><br><span class=\"line\"><span class=\"comment\"># 子类和父类具有同名属性和方法，默认使⽤用子类的同名属性和方法。</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C</span>(A, B):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">c = C()</span><br><span class=\"line\">c.info_print2(<span class=\"string\">&quot;徐州&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li><p>当一个类有多个父类的时候，默认使用第一个父类的同名属性和方法。</p>\n</li>\n<li><p>子类和父类具有同名属性和方法，默认使用子类的同名属性和方法。</p>\n</li>\n<li><p>suoer（）</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info_print</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">B</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.name = <span class=\"string\">&quot;李四&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info_print</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(self.name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C</span>(A, B):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.name = <span class=\"string\">&quot;王五&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info_print</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>().__init__()</span><br><span class=\"line\">        <span class=\"comment\"># 还可以用super()这样更方便,遵循_mro_顺序</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>().info_print()</span><br><span class=\"line\">        <span class=\"comment\"># print(self.name)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 如果在子类中想要去调用父类的同名方法，那么需要先对父类进行如下的初始化，然后如下格式调用</span></span><br><span class=\"line\">    <span class=\"comment\"># 还可以用super()这样更方便</span></span><br><span class=\"line\">    <span class=\"comment\"># def info_print1(self):</span></span><br><span class=\"line\">    <span class=\"comment\">#     A.__init__(self)</span></span><br><span class=\"line\">    <span class=\"comment\">#     A.info_print(self)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 如果在子类中想要去调用父类的同名方法，那么需要先对父类进行如下的初始化，然后如下格式调用</span></span><br><span class=\"line\">    <span class=\"comment\"># 还可以用super()这样更方便</span></span><br><span class=\"line\">    <span class=\"comment\"># def info_print2(self):</span></span><br><span class=\"line\">    <span class=\"comment\">#     B.__init__(self)</span></span><br><span class=\"line\">    <span class=\"comment\">#     B.info_print(self)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">c = C()</span><br><span class=\"line\">c.info_print()</span><br></pre></td></tr></table></figure>\n\n\n\n<p>- </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__name = <span class=\"string\">&quot;张三&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get__name</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.__name</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">set__name</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.__name = <span class=\"string\">&quot;李四&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">info</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;self.__name&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class B(A):</span></span><br><span class=\"line\"><span class=\"comment\">#     def ina(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         print(f&quot;&#123;self.__name&#125;&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a = A()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"26-3-多态\"><a href=\"#26-3-多态\" class=\"headerlink\" title=\"26.3 多态\"></a>26.3 多态</h3><ul>\n<li>稍微看下就ok了，思想都一样</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">work</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># ⽗父类提供统⼀一的⽅方法，哪怕是空⽅方法</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;指哪打哪...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ArmyDog</span>(<span class=\"title class_ inherited__\">Dog</span>):  <span class=\"comment\"># 继承Dog类</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">work</span>(<span class=\"params\">self</span>):  <span class=\"comment\"># ⼦子类重写⽗父类同名⽅方法</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;追击敌⼈人...&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">DrugDog</span>(<span class=\"title class_ inherited__\">Dog</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">work</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;追查毒品...&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">work_with_dog</span>(<span class=\"params\">self, dog</span>):  <span class=\"comment\"># 传⼊入不不同的对象，执⾏行行不不同的代码，即不不同的work函数</span></span><br><span class=\"line\">        dog.work()</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>classmethod</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Dog</span>():</span><br><span class=\"line\">    __tooth = <span class=\"number\">10</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @classmethod</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get__tooth</span>(<span class=\"params\">cls</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cls.__tooth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a = Dog()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(Dog.get__tooth())</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"27-异常\"><a href=\"#27-异常\" class=\"headerlink\" title=\"27 异常\"></a>27 异常</h2><ul>\n<li>捕获异常并描述信息  except Exception as result: #异常描述信息</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"number\">1</span> / <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> result: <span class=\"comment\">#异常描述信息</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;有异常<span class=\"subst\">&#123;result&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;没有异常&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">finally</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;finally&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>示例   （注意需要在终端打开测试（ctrl+c终止程序））</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;3.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>,encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            rl = f.readline()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(rl) == <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(rl)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;程序意外终止&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;文件不存在&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>自定义异常 （看下代码里我标注的要留意的事项）</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#自定义异常</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">shortInputException</span>(<span class=\"title class_ inherited__\">Exception</span>):   <span class=\"comment\">#Exception不要忘记</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, length, min_length</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 用户输入的长度</span></span><br><span class=\"line\">        self.length = length</span><br><span class=\"line\">        <span class=\"comment\"># 系统要求的最小输入长度</span></span><br><span class=\"line\">        self.min_length = min_length</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&quot;你输入的长度为<span class=\"subst\">&#123;self.length&#125;</span>，不能少于<span class=\"subst\">&#123;self.min_length&#125;</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    pwd = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入密码&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(pwd) &lt; <span class=\"number\">15</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> shortInputException(<span class=\"built_in\">len</span>(pwd), <span class=\"number\">15</span>)   <span class=\"comment\">#抛出自定义的异常</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> result:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;result&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;输入长度符合&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"28-自定义包和模块\"><a href=\"#28-自定义包和模块\" class=\"headerlink\" title=\"28 自定义包和模块\"></a>28 自定义包和模块</h2><h3 id=\"28-1-模块\"><a href=\"#28-1-模块\" class=\"headerlink\" title=\"28.1 模块\"></a>28.1 模块</h3><ul>\n<li>导入模块</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> 模块名</span><br><span class=\"line\"><span class=\"keyword\">from</span> 模块名 <span class=\"keyword\">import</span> ⽬目标</span><br><span class=\"line\"><span class=\"keyword\">from</span> 模块名 <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n\n<p>、</p>\n<h3 id=\"28-2-包\"><a href=\"#28-2-包\" class=\"headerlink\" title=\"28.2 包\"></a>28.2 包</h3><ul>\n<li>导入包</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> 包名.模块名</span><br><span class=\"line\"><span class=\"keyword\">from</span> 包名 <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意下 __name___是什么，主要是测试时用到，用处不是很大，留意下即可</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">testA</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(a + b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#__name__ 是一个系统变量，在当前文件中值是__main__，若在其他文件中则是该文件名</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ ==<span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    testA(<span class=\"number\">1</span>,<span class=\"number\">1</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li><strong>重点注意 如果我们使用 from 包名 import * 这种方式导入时，“必须，必须，必须”要在init模块设置all列表</strong></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 两种导入方式，第一种建议忘掉😂</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># import mypackage.my_module1</span></span><br><span class=\"line\"><span class=\"comment\"># mypackage.my_module1.testA()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意，</span></span><br><span class=\"line\"><span class=\"comment\"># 如果我们使用 from 包名 import * 这种方式导入时，“必须，必须，必须”要在init模块设置__all__列表</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> mypackage <span class=\"keyword\">import</span> *</span><br><span class=\"line\">my_module1.testA()</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"29-学生管理系统（面向对象）\"><a href=\"#29-学生管理系统（面向对象）\" class=\"headerlink\" title=\"29 学生管理系统（面向对象）\"></a>29 学生管理系统（面向对象）</h2><ul>\n<li>main.py</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> manageSystem <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    student_manager = StudentManager()</span><br><span class=\"line\">    student_manager.run()</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>student.py</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Student</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self, name, gender, tel</span>):</span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.gender = gender</span><br><span class=\"line\">        self.tel = tel</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&quot;<span class=\"subst\">&#123;self.name&#125;</span>,<span class=\"subst\">&#123;self.gender&#125;</span>,<span class=\"subst\">&#123;self.tel&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>manageSystem.py</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> student <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">StudentManager</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.student_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#   功能函数入口</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">run</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># 加载学生数据</span></span><br><span class=\"line\">        self.load_student()</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            self.show_menu()</span><br><span class=\"line\">            menu_num = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入功能序号：&quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> menu_num == <span class=\"number\">1</span>:</span><br><span class=\"line\">                self.add_student()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">2</span>:</span><br><span class=\"line\">                self.del_student()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">3</span>:</span><br><span class=\"line\">                self.modify_student()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">4</span>:</span><br><span class=\"line\">                self.search_student()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">5</span>:</span><br><span class=\"line\">                self.show_student()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">6</span>:</span><br><span class=\"line\">                self.save_student()</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> menu_num == <span class=\"number\">7</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 加载学生信息 studentData.txt</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">load_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;studentData.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>,encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;studentData.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>,encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            content = f.read()</span><br><span class=\"line\">            self.student_list = [Student(i[<span class=\"string\">&quot;name&quot;</span>], i[<span class=\"string\">&quot;gender&quot;</span>], i[<span class=\"string\">&quot;tel&quot;</span>]) <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">eval</span>(content)]</span><br><span class=\"line\">            <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">        <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">            f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 显示功能列表</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">show_menu</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;请选择如下功能-----------------&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;1:添加学员&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;2:删除学员&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;3:修改学员信息&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;4:查询学员信息&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;5:显示所有学员信息&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;6:保存学员信息&#x27;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;7:退出系统&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 添加</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">add_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        s_name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入学生姓名&quot;</span>)</span><br><span class=\"line\">        s_gender = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入学生性别&quot;</span>)</span><br><span class=\"line\">        s_tel = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入学生电话&quot;</span>)</span><br><span class=\"line\">        s = Student(s_name, s_gender, s_tel)</span><br><span class=\"line\">        self.student_list.append(s)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 删除</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">del_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        s_name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入学生姓名&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s_name == i.name:</span><br><span class=\"line\">                self.student_list.remove(i)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;删除成功&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;没有该学员&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 修改</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">modify_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        s_name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入要修改信息的学生姓名&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s_name == i.name:</span><br><span class=\"line\">                i.name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入修改的姓名&quot;</span>)</span><br><span class=\"line\">                i.gender = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入修改的性别&quot;</span>)</span><br><span class=\"line\">                i.tel = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入修改的电话&quot;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;该学生不存在&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 查询</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">search_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        s_name = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入学生姓名&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> s_name == i.name:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;没有该学生&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 显示学生</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">show_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 保存到文件</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">save_student</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;studentData.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>,encoding=<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 注意这里  对象.__dict__的用法，将内存地址写成字典的形式</span></span><br><span class=\"line\">        new_list = [i.__dict__ <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> self.student_list]</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(new_list)</span><br><span class=\"line\">        f.write(<span class=\"built_in\">str</span>(new_list))</span><br><span class=\"line\">        f.close()</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>studentData.txt</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;qq&#x27;</span>, <span class=\"string\">&#x27;gender&#x27;</span>: <span class=\"string\">&#x27;qq&#x27;</span>, <span class=\"string\">&#x27;tel&#x27;</span>: <span class=\"string\">&#x27;qq&#x27;</span>&#125;,&#123;<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;张三&#x27;</span>, <span class=\"string\">&#x27;gender&#x27;</span>: <span class=\"string\">&#x27;qq&#x27;</span>, <span class=\"string\">&#x27;tel&#x27;</span>: <span class=\"string\">&#x27;qq&#x27;</span>&#125;]</span><br></pre></td></tr></table></figure>\n\n\n\n","text":"0 格式格式要求如下： 在索引和内容之间需要加一个空格，包括所有级索引、标题和内容。 内容顶格书写 所有级标题之间需要添加一行空白行 正文段落首行缩进，但是对于...","permalink":"/post/Python","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0-%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">0 格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%80%93\"><span class=\"toc-text\">–</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1 变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">2 格式化输出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">3 转义字符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E8%87%AA%E5%B7%B1%E5%86%99%E7%BB%93%E6%9D%9F%E7%AC%A6\"><span class=\"toc-text\">4 自己写结束符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E8%BE%93%E5%85%A5\"><span class=\"toc-text\">5 输入</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6 数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-1-%E8%BD%AC%E6%8D%A2%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.1 转换数据类型的函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-eval-%E2%80%93%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AE%83%E5%8E%9F%E6%9C%AC%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">6.2 eval() –把字符串中的数据转换为它原本的类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E8%BF%90%E7%AE%97%E7%AC%A6%E5%A4%8D%E4%B9%A0\"><span class=\"toc-text\">7 运算符复习</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-Python-Console\"><span class=\"toc-text\">8 Python Console</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E5%A4%9A%E4%B8%AA%E5%8F%98%E9%87%8F%EF%A5%BE%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">9 多个变量量赋值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-1-%E5%A4%9A%E4%B8%AA%E5%8F%98%E9%87%8F%E8%B5%8B%E7%9B%B8%E5%90%8C%E5%80%BC\"><span class=\"toc-text\">9.1 多个变量赋相同值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-2-%E5%A4%9A%E4%B8%AA%E5%8F%98%E9%87%8F%E8%B5%8B%E4%B8%8D%E7%9B%B8%E5%90%8C%E5%80%BC\"><span class=\"toc-text\">9.2 多个变量赋不相同值</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-%E5%A4%8D%E5%90%88%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">10 复合赋值运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">11逻辑运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#12-%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">12 条件语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-1-if%E5%B5%8C%E5%A5%97\"><span class=\"toc-text\">12.1 if嵌套</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-2-%E7%8C%9C%E6%8B%B3%E6%B8%B8%E6%88%8F\"><span class=\"toc-text\">12.2 猜拳游戏</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-3-%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">12.3 三目运算符</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#13-while%E5%BE%AA%E7%8E%AF-%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">13 while循环(嵌套循环)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-1-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">13.1 代码</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#13-2-while%E2%80%A6else\"><span class=\"toc-text\">13.2 while…else</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#14-%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">14 字符串</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#15-%E5%88%87%E7%89%87%EF%BC%9A%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%87%E7%89%87%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">15 切片：对字符串的切片操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-1-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">15.1 语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#15-2-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">15.2 代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#16-%E5%AF%B9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9F%A5%E6%89%BE-%E4%BF%AE%E6%94%B9%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">16 对字符串的查找&amp;修改操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-1-%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">16.1 查找</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#16-2-%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">16.2 修改</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#17-%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">17 列表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-1-%E5%88%97%E8%A1%A8%E7%9A%84%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">17.1 列表的常用操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-2-%E5%88%97%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">17.2 列表的增删改查操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#17-3-%E9%9A%8F%E6%9C%BA%E5%88%86%E9%85%8D%E8%80%81%E5%B8%88%E5%88%B0%E5%8A%9E%E5%85%AC%E5%AE%A4%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">17.3 随机分配老师到办公室问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#18-%E5%85%83%E7%A5%96\"><span class=\"toc-text\">18 元祖</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-1-%E5%AE%9A%E4%B9%89%E5%85%83%E7%A5%96\"><span class=\"toc-text\">18.1 定义元祖</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#18-2-%E5%85%83%E7%A5%96%E7%9A%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C%EF%BC%88%E4%B8%BB%E8%A6%81%E6%98%AF%E6%9F%A5%E6%89%BE%E6%93%8D%E4%BD%9C%EF%BC%89\"><span class=\"toc-text\">18.2 元祖的常见操作（主要是查找操作）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#19-%E5%AD%97%E5%85%B8\"><span class=\"toc-text\">19 字典</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#19-1-%E5%AD%97%E5%85%B8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">19.1 字典的增删改查操作</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#20-%E9%9B%86%E5%90%88\"><span class=\"toc-text\">20  集合</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-1-%E9%9B%86%E5%90%88%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">20.1 集合增删查操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#20-2-%E6%B3%A8%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">20.2 注意：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#21-%E5%85%AC%E5%85%B1%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">21 公共操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#22-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">22 函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-1-%E4%B8%80%E4%BA%9B%E5%85%B3%E9%94%AE%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">22.1 一些关键函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-2-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">22.2 说明文档</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-3-%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82%EF%BC%88%E9%87%8D%E8%A6%81%EF%BC%89\"><span class=\"toc-text\">22.3 函数执行的一些细节（重要）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#22-4-%E5%8F%AF%E5%8F%98%E5%92%8C%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">22.4 可变和不可变类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#23-%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E7%BB%BC%E5%90%88%E4%B8%8A%E9%9D%A2%E6%89%80%E5%AD%A6%E7%9F%A5%E8%AF%86%EF%BC%89\"><span class=\"toc-text\">23 学生管理系统（综合上面所学知识）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#24-lambda\"><span class=\"toc-text\">24 lambda</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-1-%E7%A4%BA%E4%BE%8B%EF%BC%88%E8%AE%A1%E7%AE%97a-b%EF%BC%89\"><span class=\"toc-text\">24.1 示例（计算a + b）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-2-lambda%E7%9A%84%E5%8F%82%E6%95%B0%E5%BD%A2%E5%BC%8F\"><span class=\"toc-text\">24.2 lambda的参数形式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-3-lambda%E5%BA%94%E7%94%A8%E2%80%94%EF%A6%9C%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%8C%89%E5%AD%97%E5%85%B8key%E7%9A%84%E5%80%BC%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">24.3 lambda应用—列表数据按字典key的值排序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-4-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">24.4 高阶函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#24-5-%E5%86%85%E7%BD%AE%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">24.5 内置高阶函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#24-5-1-map\"><span class=\"toc-text\">24.5.1 map()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#24-5-2-reduce\"><span class=\"toc-text\">24.5.2 reduce()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#24-5-3-filter\"><span class=\"toc-text\">24.5.3 filter()</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#25-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">25 文件操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25-1-%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">25.1 打开文件模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25-2-%E6%96%87%E4%BB%B6%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">25.2 文件对象方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#25-3-%E6%80%BB%E7%BB%93%E6%A1%88%E4%BE%8B%EF%BC%88%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D%E6%B7%BB%E5%8A%A0-%E5%88%A0%E9%99%A4%EF%BC%89\"><span class=\"toc-text\">25.3 总结案例（批量重命名添加&#x2F;删除）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#26-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">26 面向对象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#26-1-%E5%87%A0%E7%A7%8D%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">26.1 几种魔法方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#26-2-%E7%BB%A7%E6%89%BF%EF%BC%88%E7%95%99%E6%84%8F%E4%B8%8B%E5%87%A0%E4%B8%AA%E6%B3%A8%E6%84%8F%E7%82%B9%EF%BC%89\"><span class=\"toc-text\">26.2  继承（留意下几个注意点）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#26-3-%E5%A4%9A%E6%80%81\"><span class=\"toc-text\">26.3 多态</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#27-%E5%BC%82%E5%B8%B8\"><span class=\"toc-text\">27 异常</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#28-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">28 自定义包和模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#28-1-%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">28.1 模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#28-2-%E5%8C%85\"><span class=\"toc-text\">28.2 包</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#29-%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%89\"><span class=\"toc-text\">29 学生管理系统（面向对象）</span></a></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"hexo搭建  --Vegeta","uid":"48a8382a301dd15da0fdbd2032cdbee9","slug":"hexo搭建","date":"2020-12-04T15:29:12.000Z","updated":"2024-05-29T15:18:13.692Z","comments":true,"path":"api/articles/hexo搭建.json","keywords":null,"cover":[],"text":"Vegetahexo搭建流程— #安装Nodejs （简单理解就是一个js的运行环境）node -v #查看node版本npm -v #查看npm版本npm i...","permalink":"/post/hexo搭建","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}},"next_post":{"title":"leyou","uid":"875445e0a3c9118d4826bac86a89960d","slug":"乐优商城","date":"2020-12-03T16:00:00.000Z","updated":"2024-05-29T15:23:09.772Z","comments":true,"path":"api/articles/乐优商城.json","keywords":null,"cover":[],"text":"0 格式1 SpringCloud1.1 Zuul网关1234567891011121314151617server: port: 10010spring: a...","permalink":"/post/乐优商城","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[],"tags":[{"name":"Java","slug":"Java","count":3,"path":"api/tags/Java.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}}}