{"title":"ubuntu日常使用","uid":"fd29a6255ba6815d7a29c88dd74c9f39","slug":"ubuntu日常使用","date":"2024-06-11T14:30:45.836Z","updated":"2024-12-23T14:36:09.656Z","comments":true,"path":"api/articles/ubuntu日常使用.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/b46a7397ea394c7a9e30f912064b47ad_1.png","content":"<h1 id=\"ubuntu日常使用\"><a href=\"#ubuntu日常使用\" class=\"headerlink\" title=\"ubuntu日常使用\"></a>ubuntu日常使用</h1><p>网上下载安装的程序统一放在~&#x2F;soft目录下</p>\n<p>本文所有操作全部基于ubuntu20.04版本</p>\n<p>[TOC]</p>\n<h2 id=\"0-常用命令和快捷键\"><a href=\"#0-常用命令和快捷键\" class=\"headerlink\" title=\"0 常用命令和快捷键\"></a>0 常用命令和快捷键</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">快捷键：</span><br><span class=\"line\">pwd 查看当前目录</span><br><span class=\"line\">alt+a 打开程序菜单</span><br><span class=\"line\">ctrl+l 清屏</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">命令：</span><br><span class=\"line\">which 命令    （查询安装位置）</span><br><span class=\"line\">echo $PATH     (查询path路径都包含哪些)</span><br><span class=\"line\">chmod +x ./Anaconda3-2019.03-Linux-x86 64.sh   （给anaconda安装程序添加执行权限）</span><br><span class=\"line\">sudo ln -s /usr/bin/python3 /home/i/conda/bin/python （新建软连接，前面为放到path的目录，后面为实际目录）</span><br><span class=\"line\">tar -zxvf cudnn-11.0-linux-x64-v8.0.5.39.tgz   (解压缩)</span><br><span class=\"line\">rm -rf *.gz (-r递归，-f强制删除文件或目录)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">cp aaa/buhuili.tar.gz /bbb/bhl.tar.gz （复制目录aaa下bhl.tar.gz到/bbb目录下，并改名为bhl.tar.gz）</span><br><span class=\"line\">mv ~/buhuili.tar.gz  ~/Documents bhl.tar.gz  （移动原始文件到目标路径下,并改名为bhl.tar.gz）</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"1-常见问题\"><a href=\"#1-常见问题\" class=\"headerlink\" title=\"1 常见问题\"></a>1 常见问题</h2><h3 id=\"1-1-缺少有线连接\"><a href=\"#1-1-缺少有线连接\" class=\"headerlink\" title=\"1.1 缺少有线连接\"></a>1.1 缺少有线连接</h3><p>大部分的新硬件对系统内核有较高的要求，如果发现电脑缺少相关驱动，比如缺少有先网络连接，可以尝试升级内核</p>\n<p>内核查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -r</span><br></pre></td></tr></table></figure>\n\n<p>选择升级内核尽量选择当前大版本下的最新版本，不要跨大版本。实在不行再考虑换大版本。</p>\n<p>比如查询内核版本为5.4.0。升级的时候尽量选择5开头的最新版本。</p>\n<p>内核升级文件下载地址</p>\n<p><a href=\"https://kernel.ubuntu.com/mainline/\">https://kernel.ubuntu.com/mainline/</a></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610220512732.png\" alt=\"image-20240610220512732\"></p>\n<p>在ubuntu下安装这四个文件</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610220624986.png\" alt=\"image-20240610220624986\"></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610220652855.png\" alt=\"image-20240610220652855\"></p>\n<p>之后重启。</p>\n<h3 id=\"1-2-缺少无线网\"><a href=\"#1-2-缺少无线网\" class=\"headerlink\" title=\"1.2 缺少无线网\"></a>1.2 缺少无线网</h3><h4 id=\"1-2-1-ubuntu18-04安装方法\"><a href=\"#1-2-1-ubuntu18-04安装方法\" class=\"headerlink\" title=\"1.2.1 ubuntu18.04安装方法\"></a>1.2.1 ubuntu18.04安装方法</h4><p>Intel 官网 (<a href=\"https://www.intel.cn/content/www/cn/zh/support/articles/000005511/wireless.html\">英特尔 ® 无线适配器的 Linux* 支持</a>) 给出了在 Linux 下 AX210 所需要的最低环境：linux 内核 5.10+，而 Ubuntu18.04 最新内核版本为 5.4，不符合要求。可以通过升级内核的方式安装，但存在较大的风险。因此选择不升级内核的方法进行驱动的安装。</p>\n<p>安装步骤：</p>\n<p>更新软件列表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p>安装必须的包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install flex bison</span><br></pre></td></tr></table></figure>\n\n<p>克隆 backport 仓库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/intel/backport-iwlwifi.git</span><br><span class=\"line\">cd backport-iwlwifi</span><br></pre></td></tr></table></figure>\n\n<p>进入 iwlwifi-stack-dev 文件并编译</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd iwlwifi-stack-dev</span><br><span class=\"line\">sudo make defconfig-iwlwifi-public</span><br><span class=\"line\">sudo make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n\n<p>下载驱动文件，或者可以从 Intel 官网下载</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git</span><br><span class=\"line\">cd linux-firmware/</span><br><span class=\"line\">sudo cp iwlwifi-* /lib/firmware</span><br></pre></td></tr></table></figure>\n\n<p>或者从 intel 官网下载，解压后将 ucode 文件放入<code>/lib/firmware</code>即可</p>\n<h4 id=\"1-2-2-ubuntu20-04安装方法\"><a href=\"#1-2-2-ubuntu20-04安装方法\" class=\"headerlink\" title=\"1.2.2 ubuntu20.04安装方法\"></a>1.2.2 ubuntu20.04安装方法</h4><p>要在 Ubuntu 20.04 上安装 AX210 无线适配器，您需要执行以下步骤：</p>\n<ol>\n<li><p><a href=\"https://geek.csdn.net/educolumn/08ce1c98201e391e324feee424502262?spm=1055.2569.3001.10083\">确认</a>您的 Ubuntu 20.04 <a href=\"https://geek.csdn.net/educolumn/073441cd796e7450c3f98600b0cbeb95?spm=1055.2569.3001.10083\">系统</a>已经安装了最新的内核和固件更新。您可以使用以下命令检查：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 iw 和 wireless-tools 软件包，这些软件包提供了管理无线网络的工具：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install iw wireless-tools</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载 AX210 的固件文件。您可以在 Intel 的官方网站(<a href=\"https://www.intel.cn/content/www/cn/zh/support/articles/000005511/wireless.html\">英特尔 ® 无线适配器的 Linux* 支持</a>) 上找到最新的固件文件。下载后，解压缩文件并将其中的 iwlwifi-ty-a0-gf-a0-XX.ucode 文件<a href=\"https://geek.csdn.net/educolumn/2ad060f36f5488dad6984d68b3b92f3e?spm=1055.2569.3001.10083\">复制</a>到 &#x2F; lib&#x2F;firmware 目录下。</p>\n</li>\n<li><p>更新<a href=\"https://geek.csdn.net/educolumn/073441cd796e7450c3f98600b0cbeb95?spm=1055.2569.3001.10083\">系统</a>的 initramfs，以使新的固件文件生效：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-initramfs -u</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新启动您的<a href=\"https://geek.csdn.net/educolumn/073441cd796e7450c3f98600b0cbeb95?spm=1055.2569.3001.10083\">系统</a>以应用所有更改：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>现在，您应该能够使用 AX210 无线适配器连接到无线网络了。您可以使用以下命令检查无线适配器的状态：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iwconfig</span><br></pre></td></tr></table></figure>\n\n<p>如果您看到一个类似于 wlan0 的接口，并且该接口的状态是 “UP”，则表示无线适配器已经连接到无线网络。</p>\n</li>\n</ol>\n<h2 id=\"2-基础软件安装\"><a href=\"#2-基础软件安装\" class=\"headerlink\" title=\"2 基础软件安装\"></a>2 基础软件安装</h2><p>系统安装后需要做的操作</p>\n<p>1 更改包管理器镜像源</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610214528793.png\" alt=\"image-20240610214528793\"></p>\n<p>2 安装显卡驱动</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610221554232.png\" alt=\"image-20240610221554232\"></p>\n<h3 id=\"2-1-anaconda安装（前期环境准备）\"><a href=\"#2-1-anaconda安装（前期环境准备）\" class=\"headerlink\" title=\"2.1 anaconda安装（前期环境准备）\"></a>2.1 anaconda安装（前期环境准备）</h3><p><strong>注意：cuda和cudnn的版本对应关系去我的另一篇博客查看</strong></p>\n<p>检查显卡驱动有无安装成功</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n\n<p>检查cuda本身（编译器）有无安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvcc -V </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611160531490.png\" alt=\"image-20240611160531490\"></p>\n<p>如果提示如上图所示未找到nvcc命令，有以下两种情况</p>\n<h4 id=\"2-1-1-cuda安装了，但是没添加到环境变量\"><a href=\"#2-1-1-cuda安装了，但是没添加到环境变量\" class=\"headerlink\" title=\"2.1.1 cuda安装了，但是没添加到环境变量\"></a>2.1.1 cuda安装了，但是没添加到环境变量</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which nvcc 能查到说明安装了</span><br></pre></td></tr></table></figure>\n\n<p>则需要添加下环境变量。</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi  ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=“/usr/local/cuda-11.0/bin:&#123;PATH&#125;”   （路径是which查询的结果）</span><br><span class=\"line\"></span><br><span class=\"line\">source ~/.bashrc   (使添加的环境变量生效)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-2-cuda未安装，则需要安装cuda\"><a href=\"#2-1-2-cuda未安装，则需要安装cuda\" class=\"headerlink\" title=\"2.1.2  cuda未安装，则需要安装cuda\"></a>2.1.2  cuda未安装，则需要安装cuda</h4><p><strong>1 如果之前安装了旧版本的cuda和cudnn的话，需要先卸载后再安装：</strong></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get remove --purge nvidia*</span><br></pre></td></tr></table></figure>\n\n<p>然后<strong>再通过系统的软件与更新来安装重新安装显卡驱动</strong></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611161823774.png\" alt=\"image-20240611161823774\"></p>\n<p>选择第一个安装Nvidia官方驱动（第二个是开源驱动）即可，根据网络情况稍等大概十分钟，安装完重启服务器。</p>\n<p>重启完之后更新一下软件：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt upgrade</span><br></pre></td></tr></table></figure>\n\n<p>这里会连带Nvidia的驱动一起升级一遍，更新到最新的驱动；更新完可能会出现nvidia-smi命令报错，再重启一下就解决了。</p>\n<p><strong>2 安装CUDA</strong></p>\n<p><strong>2.1</strong> 去官网下载cuda安装包：<a href=\"https://developer.nvidia.com/cuda-11.0-download-archive\">CUDA Toolkit 11.0 Download | NVIDIA Developer</a>，相关选项如下（根据实际情况选择）：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611162320970.png\" alt=\"image-20240611162320970\"></p>\n<p>运行下面的命令进行安装：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x cuda_11.0.2_450.51.05_linux.run</span><br><span class=\"line\">sudo sh ./cuda_11.0.2_450.51.05_linux.run</span><br></pre></td></tr></table></figure>\n\n<p>可能会报一个警告：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222025837.png\" alt=\"image-20240611222025837\"></p>\n<p>前面已经卸载过旧版本了直接Continue就好。然后根据提示选择安装选项，注意不要勾选第一个安装显卡驱动的，因为之前已经安装过了。 安装完成后提示</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222130915.png\" alt=\"image-20240611222130915\"></p>\n<p><strong>2.2  参照2.1.1配置环境变量</strong></p>\n<p><strong>2.3 可以使用命令<code>nvcc -V</code>查看安装的版本信息：</strong></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222151136.png\" alt=\"image-20240611222151136\"></p>\n<h4 id=\"2-1-3-cudnn安装\"><a href=\"#2-1-3-cudnn安装\" class=\"headerlink\" title=\"2.1.3  cudnn安装\"></a>2.1.3  cudnn安装</h4><p>进入到CUDNN的下载官网：<a href=\"https://developer.nvidia.com/rdp/cudnn-download\">cuDNN Download | NVIDIA Developer</a>，然点击Download开始选择下载版本，当然在下载之前还有登录，选择版本界面如下：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611170451193.png\" alt=\"image-20240611170451193\"></p>\n<p>我们选择和之前cuda版本对应的cudnn版本：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611170504379.png\" alt=\"image-20240611170504379\"></p>\n<p>下载之后是一个压缩包，对它进行解压，命令如下：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf cudnn-11.0-linux-x64-v8.0.5.39.tgz</span><br></pre></td></tr></table></figure>\n\n<p>使用以下两条命令复制这些文件到CUDA目录下：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp cuda/lib64/* /usr/local/cuda-11.0/lib64/</span><br><span class=\"line\">sudo cp cuda/include/* /usr/local/cuda-11.0/include/</span><br></pre></td></tr></table></figure>\n\n<p>拷贝完成之后，可以使用以下命令查看CUDNN的版本信息：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/include/cudnn_version.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n\n<p>可以看到版本信息如下，为<code>8.0.5</code>：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611170528573.png\" alt=\"image-20240611170528573\"></p>\n<h3 id=\"2-2-anaconda安装（正式安装）\"><a href=\"#2-2-anaconda安装（正式安装）\" class=\"headerlink\" title=\"2.2 anaconda安装（正式安装）\"></a>2.2 anaconda安装（正式安装）</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x ./Anaconda3-2019.03-Linux-x86 64.sh   （给anaconda安装程序添加执行权限）</span><br><span class=\"line\">./Anaconda3-2019.03-Linux-x8664.sh             （执行anaconda安装程序）</span><br><span class=\"line\">q  （弹出合同查看按q确认）</span><br><span class=\"line\">yes （接收协议）</span><br><span class=\"line\">/home/i/conda (输入安装路径，这里是安装在home/i目录下的conda文件夹内)</span><br><span class=\"line\">yes（将conda添加到环境变量）</span><br></pre></td></tr></table></figure>\n\n<p>最后<strong>新</strong>打开一个终端依次输入如下命令验证</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611164703873.png\" alt=\"image-20240611164703873\"></p>\n<p>尤其是python，由于ubuntu自带python，而我们需要使用的是conda下的python。需要注意路径是否正确。如果不对，可以尝试做个软连接，然后放到path路径下面的任意一个目录下。比如（&#x2F;usr&#x2F;local&#x2F;bin）</p>\n<p>新建一个软连接</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ln -s /usr/bin/python3 /home/i/conda/bin/python</span><br></pre></td></tr></table></figure>\n\n<p>使用python3命名是为了避免和系统python命名冲突，当然也可以直接删掉系统自带的python软连接，这样再使用python命名也行，但是我总感觉不太好，看个人把。</p>\n<h3 id=\"2-3-docker安装\"><a href=\"#2-3-docker安装\" class=\"headerlink\" title=\"2.3 docker安装\"></a>2.3 docker安装</h3><h4 id=\"2-3-1-卸载旧版本\"><a href=\"#2-3-1-卸载旧版本\" class=\"headerlink\" title=\"2.3.1 卸载旧版本\"></a>2.3.1 卸载旧版本</h4><p>Docker 的旧版本被称为 docker，docker.io 或 docker-engine 。如果已安装，请卸载它们：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>\n\n<p>当前称为 Docker Engine-Community 软件包 docker-ce 。</p>\n<h4 id=\"2-3-2-设置仓库\"><a href=\"#2-3-2-设置仓库\" class=\"headerlink\" title=\"2.3.2 设置仓库\"></a>2.3.2 设置仓库</h4><p>在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，您可以从仓库安装和更新 Docker 。</p>\n<p><strong>更新 apt 包索引。</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br></pre></td></tr></table></figure>\n\n<p><strong>安装依赖包:</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加 GPG 密钥</strong></p>\n<p>添加 Docker 的官方 GPG 密钥：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n\n<p>如果你在阿里云上部署，可能使用阿里云的镜像源（在下面），添加阿里云的证书会更好一些。添加阿里云证书:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加软件源</strong></p>\n<p>对于 amd64 架构的计算机，添加清华大学 TUNA 软件仓库:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository \\   &quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\   $(lsb_release -cs) \\   stable&quot;</span><br></pre></td></tr></table></figure>\n\n<p>你也可以使用阿里云的软件仓库:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository \\    &quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \\    $(lsb_release -cs) \\    stable&quot;</span><br></pre></td></tr></table></figure>\n\n<p>如果你对你的网络比较有信心，也可以使用官方的软件仓库:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository \\   &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\  $(lsb_release -cs) \\  stable&quot;</span><br></pre></td></tr></table></figure>\n\n<p>如果你是 ARM 架构，请运行:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;deb [arch=armhf] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \\     $(lsb_release -cs) stable&quot; | \\    sudo tee /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-3-安装-Docker-Engine-Community\"><a href=\"#2-3-3-安装-Docker-Engine-Community\" class=\"headerlink\" title=\"2.3.3 安装 Docker Engine-Community\"></a>2.3.3 安装 Docker Engine-Community</h4><p>更新 apt 包索引。</p>\n<p>$ sudo apt update</p>\n<p>安装最新版本的 Docker Engine-Community</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install docker-ce</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-3-4-测试\"><a href=\"#2-3-4-测试\" class=\"headerlink\" title=\"2.3.4 测试\"></a>2.3.4 测试</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意：</strong>如果你的网络和我一样不好使，请先行进行镜像加速再测试。</p></blockquote>\n<p>输入:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo docker run hello-world</span><br></pre></td></tr></table></figure>\n\n<p>如果 docker 和你问好——或者说出现类似以下输出:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to find image &#x27;hello-world:latest&#x27; locallylatest: Pulling from library/hello-worldb8dfde127a29: Already exists Digest: sha256:7d91b69e04a9029b99f3585aaaccae2baa80bcf318f4a5d2165a9898cd2dc0a1Status: Downloaded newer image for hello-world:latest Hello from Docker!This message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.    (amd64) 3. The Docker daemon created a new container from that image which runs the    executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it    to your terminal. To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bash Share images, automate workflows, and more with a free Docker ID: https://hub.docker.com/ For more examples and ideas, visit: https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>\n\n<p>就说明安装完事了。</p>\n<h4 id=\"2-3-5-免-sudo-运行-镜像加速\"><a href=\"#2-3-5-免-sudo-运行-镜像加速\" class=\"headerlink\" title=\"2.3.5 免 sudo 运行 &amp; 镜像加速\"></a>2.3.5 免 sudo 运行 &amp; 镜像加速</h4><p><strong>免 sudo</strong></p>\n<p>参考如下方法将用户添加到 docke 组</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo usermod -aG docker [你的用户名]</span><br></pre></td></tr></table></figure>\n\n<p>重启 docker</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>(然而我的机器上发生了很诡异的事——我重启 docker 服务后依然不能以普通用户启动 docker。重启机器后才能免 sudo 运行。)</p>\n<p><strong>docker 镜像加速</strong></p>\n<p>我用了阿里云的免费加速（镜像加速是针对官方仓库进行访问加速，不是阿里仓库，如果镜像源是使用的阿里仓库，则不需要进行镜像加速）</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></p></blockquote>\n<p>后续设置按照阿里云网页内提示即可，不再赘述。</p>\n<h3 id=\"2-4-clash安装（linux版本）\"><a href=\"#2-4-clash安装（linux版本）\" class=\"headerlink\" title=\"2.4 clash安装（linux版本）\"></a>2.4 clash安装（linux版本）</h3><p>地址 ：<a href=\"https://v2rayse.com/client\">https://v2rayse.com/client</a></p>\n<p>由于clash删库了，可以使用clash-verge替代</p>\n<h4 id=\"2-4-1-安装clash-verge\"><a href=\"#2-4-1-安装clash-verge\" class=\"headerlink\" title=\"2.4.1 安装clash-verge\"></a>2.4.1 安装clash-verge</h4><p>方法和2.4.2一样</p>\n<p>打开clash-verge后需要将下面两个模式打开。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611221356246.png\" alt=\"image-20240611221356246\"></p>\n<h4 id=\"2-4-2-安装clash-for-linux\"><a href=\"#2-4-2-安装clash-for-linux\" class=\"headerlink\" title=\"2.4.2 安装clash for linux\"></a>2.4.2 安装clash for linux</h4><p>解压安装clash for linux后，执行图上cfw程序即可打开clash for linux</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611215553000.png\" alt=\"image-20240611215553000\"></p>\n<p>到此就可以使用了</p>\n<p>由于每次使用都需要进入到clash目录下面执行cfw程序，比较麻烦。所以考虑将其设置为一个应用。</p>\n<p><strong>将可执行程序路径添加到应用程序菜单栏并创建图标的方法</strong></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611220544403.png\" alt=\"image-20240611220544403\"></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611220552595.png\" alt=\"image-20240611220552595\"></p>\n<h2 id=\"3-桌面环境美化\"><a href=\"#3-桌面环境美化\" class=\"headerlink\" title=\"3 桌面环境美化\"></a>3 桌面环境美化</h2><p>更改终端窗口大小，颜色，透明度等等</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240610221929992.png\" alt=\"image-20240610221929992\"></p>\n<h3 id=\"3-1-美化前准备\"><a href=\"#3-1-美化前准备\" class=\"headerlink\" title=\"3.1 美化前准备\"></a>3.1 美化前准备</h3><p>Ubuntu 20.04 的美化是一个比较繁琐的过程，不过只要掌握了方法，就能将 Ubuntu 20.04 打造成你最喜欢的样子。下面列出一些美化前的准备。</p>\n<h4 id=\"3-1-1-安装必要软件\"><a href=\"#3-1-1-安装必要软件\" class=\"headerlink\" title=\"3.1.1 安装必要软件\"></a>3.1.1 安装必要软件</h4><p>打开 Terminal 软件，一次执行如下命令。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install gnome-tweaks chrome-gnome-shell</span><br><span class=\"line\">sudo apt install gtk2-engines-murrine gtk2-engines-pixbuf </span><br><span class=\"line\">sudo apt install sassc optipng inkscape libcanberra-gtk-module libglib2.0-dev libxml2-utils</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-2-安装一些必要的插件\"><a href=\"#3-1-2-安装一些必要的插件\" class=\"headerlink\" title=\"3.1.2 安装一些必要的插件\"></a>3.1.2 安装一些必要的插件</h4><p>Ubuntu 20.04 默认使用的是 gnome 的桌面环境，本文的美化也是基于 gnome 桌面环境，美化 gnome 桌面环境少不了安装 gnome 插件，gnome 插件的网址是：<a href=\"https://extensions.gnome.org/\">https://extensions.gnome.org</a></p>\n<p>打开 Firefox 浏览器，在地址栏输入 gnome 插件的网址，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222333802.png\" alt=\"image-20240611222333802\"></p>\n<p>如上图我红色框出的地方，提示要在 Firefox 浏览器中安装 gnome extensions 的扩展包，点击安装，安装浏览器弹出的提示依次确认即可。安装好扩展包后刷新以下浏览器页面就可以开始安装 gnome 插件了。我们需要预先安装的插件有如下几个，分别搜索出来安装就可以了。</p>\n<ul>\n<li>user themes</li>\n<li>dash to dock</li>\n<li>netspeed</li>\n</ul>\n<p>这里我只演示 netspeed 的安装，其他两个安装方法一样。如果你需要安装其他 gnome 插件，也可以按照这个方法安装。</p>\n<p>搜索打开 netspeed 插件主页，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222357111.png\" alt=\"image-20240611222357111\"></p>\n<p>点击图中红色方框框住的按钮开关，打到 On，按照提示依次操作即可安装成功。注意对比桌面安装这些插件后的差异。</p>\n<h4 id=\"3-1-3-下载必要的美化包\"><a href=\"#3-1-3-下载必要的美化包\" class=\"headerlink\" title=\"3.1.3 下载必要的美化包\"></a>3.1.3 下载必要的美化包</h4><p>所有的美化包都可以从 <a href=\"https://www.gnome-look.org/\">https://www.gnome-look.org</a> 这个网站下载的，我列出本次美化需要下载的美化包的详细下载地址。这个网站在国内访问非常的慢，如果你下载不下来，可以私信我获取。</p>\n<ul>\n<li><p>主题包：WhiteSur Gtk Theme</p>\n</li>\n<li><p><a href=\"https://www.gnome-look.org/p/1403328/\">https://www.gnome-look.org/p/1403328/</a></p>\n</li>\n<li><p>Icons 图标：WhiteSur icon theme</p>\n</li>\n<li><p><a href=\"https://www.pling.com/p/1405756/\">https://www.pling.com/p/1405756/</a></p>\n</li>\n<li><p>鼠标图标：McMojave cursors</p>\n</li>\n<li><p><a href=\"https://www.pling.com/p/1355701/\">https://www.pling.com/p/1355701/</a></p>\n</li>\n<li><p>壁纸：WhiteSur Wallpaper</p>\n</li>\n<li><p><a href=\"https://www.pling.com/p/1398833/\">https://www.pling.com/p/1398833/</a></p>\n</li>\n<li><p>Firefox 浏览器美化：</p>\n</li>\n<li><p>参考：<a href=\"https://github.com/vinceliuice/WhiteSur-gtk-theme/tree/master/src/other/firefox\">https://github.com/vinceliuice/WhiteSur-gtk-theme/tree/master/src/other/firefox</a></p>\n</li>\n</ul>\n<p>我下载的文件全部存在 Download 目录下面，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222414123.png\" alt=\"image-20240611222414123\"></p>\n<h3 id=\"3-2、开始美化\"><a href=\"#3-2、开始美化\" class=\"headerlink\" title=\"3.2、开始美化\"></a>3.2、开始美化</h3><p>根据自己的美化需求下载好相应的美化软件包后，就可以开始美化了。</p>\n<h4 id=\"3-2-1-安装主题包\"><a href=\"#3-2-1-安装主题包\" class=\"headerlink\" title=\"3.2.1 安装主题包\"></a>3.2.1 安装主题包</h4><p>Ubuntu 20.04 为所有用户提供的默认存放主题的文件夹分别如下：</p>\n<ul>\n<li>主题包：&#x2F;usr&#x2F;share&#x2F;themes&#x2F;</li>\n</ul>\n<p>将下载好的主题包解压到这个目录，或者解压后拷贝到这个目录。</p>\n<ul>\n<li>Icons 图标：&#x2F;usr&#x2F;share&#x2F;icons</li>\n</ul>\n<p>将下载好的 Icons 图标解压到这个目录，或者解压后拷贝到这个目录。</p>\n<ul>\n<li>鼠标图标：&#x2F;usr&#x2F;share&#x2F;icons</li>\n</ul>\n<p>将下载好的鼠标图标解压到这个目录，或者解压后拷贝到这个目录。</p>\n<ul>\n<li>选择下载的壁纸图片，右键设置为壁纸即可。</li>\n</ul>\n<p>上面的操作一定要保证正确无误，接下来就可以选择这些主题包，并让其生效了。</p>\n<p>打开 gnome-tweaks 工具，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222428696.png\" alt=\"image-20240611222428696\"></p>\n<p>上图红色方框中选中的就是刚刚安装的主题，选中后桌面和图标、鼠标图标，shell 主题等都相应的变化了，注意对比。</p>\n<h4 id=\"3-2-2-安装-plank-dock-工具\"><a href=\"#3-2-2-安装-plank-dock-工具\" class=\"headerlink\" title=\"3.2.2 安装 plank dock 工具\"></a>3.2.2 安装 plank dock 工具</h4><p>打开 terminal ，输入如下命令安装 plank。</p>\n<ul>\n<li>sudo apt install plank</li>\n</ul>\n<p>安装好后打开 gnome-tweaks 工具，设置 plank 为开机启动，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222444288.png\" alt=\"image-20240611222444288\"></p>\n<p>还记得之前在浏览器安装的 dash to dock 吗？现在有了 plank，我们就不再需要它了，现在在浏览器上打开 gnome 插件的网站，在已安装的插件中找到 dash to dock。删除它之前我们还要用它做一些配置，点击像扳手一样的图标进行设置。</p>\n<ul>\n<li>选择 dock 在底部显示</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222507829.png\"></p>\n<ul>\n<li>去掉一些不需要的效果，如下图，把所有选择都去掉。</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222524054.png\"></p>\n<ul>\n<li>删除 dash to dock，如下图，点击 X 图标即可删除</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222533868.png\"></p>\n<p>是时候重启电脑了，现在就重启电脑看看效果吧。如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222541744.png\"></p>\n<h3 id=\"3-3-最后的配置\"><a href=\"#3-3-最后的配置\" class=\"headerlink\" title=\"3.3 最后的配置\"></a>3.3 最后的配置</h3><p>这个效果已经不错了，但是我还是不满意，继续做一些设置，让它更符合我心中的样子。</p>\n<h4 id=\"3-3-1-plank-设置\"><a href=\"#3-3-1-plank-设置\" class=\"headerlink\" title=\"3.3.1 plank 设置\"></a>3.3.1 plank 设置</h4><p>plank 默认没有动画效果，将鼠标放在 plank 边缘，然后右键出现如下菜单，选择 Preference 进行设置。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222552559.png\"></p>\n<p>我主要做了如下两个修改：</p>\n<ul>\n<li>将主题改成 Transparent</li>\n<li>Icon Zoom 打开，这样鼠标划过 plank 上的软件图标的时候就会有放大的效果。</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222559484.png\"></p>\n<ul>\n<li>将常用的软件固定到 plank 上</li>\n</ul>\n<p>首先点击左上角的 apple 图标就可以搜索或者选择打开软件，在 plank 上找到打开的软件图标右键就可以看到 keep in Dook 的选项，勾选上即可，不想在 plank 上显示的图标把勾去掉即可。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222605351.png\"></p>\n<h4 id=\"3-3-2-gnome-tweaks-设置\"><a href=\"#3-3-2-gnome-tweaks-设置\" class=\"headerlink\" title=\"3.3.2 gnome-tweaks 设置\"></a>3.3.2 gnome-tweaks 设置</h4><ul>\n<li>关闭桌面显示的图标</li>\n</ul>\n<p>桌面有个家目录和回收站的图标，居然删除不了，别担心，打开 gnome-tweaks 软件，如下图，点击 Desktop icons 插件后面的设置图标，弹出右边的设置菜单。</p>\n<p><img src=\"/post/ubuntu%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8.htm/\"></p>\n<p>将设置菜单中的两个开关关闭即可，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222634724.png\"></p>\n<ul>\n<li>顶部状态栏显示设置</li>\n</ul>\n<p>如下图，选中 Top Bar 选项，将后边的开关都打开，注意顶部状态栏的变化。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222642175.png\"></p>\n<h4 id=\"3-3-3-Firefox-浏览器美化设置\"><a href=\"#3-3-3-Firefox-浏览器美化设置\" class=\"headerlink\" title=\"3.3.3 Firefox 浏览器美化设置\"></a>3.3.3 Firefox 浏览器美化设置</h4><ul>\n<li>打开 Firefox 浏览器，在地址栏输入：about:support</li>\n<li>在打开的界面一次选择：Application Basics &gt; Profile Directory &gt; Open Directory.</li>\n</ul>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222648226.png\"></p>\n<p>点击 Open Directory 后会打开一个文件夹，将我们下载好的 WhiteSur-gtk-theme-master.zip 解压，然后将解压后的目录中：WhiteSur-gtk-theme-master&#x2F;src&#x2F;other&#x2F;firefox&#x2F; 目录下的 chrome 目录拷贝到刚打开的目录中。</p>\n<p>重启 Firefox 浏览器，在地址栏输入：about:config，回车，在打开的页面点击接受，接着在打开的页面中搜索：</p>\n<p>toolkit.legacyUserProfileCustomizations.stylesheets 双击把它的值改为 true</p>\n<p>layers.acceleration.force-enabled 双击把它的值改为 true</p>\n<p>重启浏览器看效果吧。</p>\n<p>重启后点击浏览器右上角的设置按钮，如下图：</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222706057.png\"></p>\n<p>点击 Customize，进行设置。去掉下图红色方框所示的勾。再次重启查看效果吧。</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-20240611222718700.png\"></p>\n<h3 id=\"3-4-总结\"><a href=\"#3-4-总结\" class=\"headerlink\" title=\"3.4 总结\"></a>3.4 总结</h3><p>Ubuntu 20.04 的美化到这里就结束了，其实还有很多想说的，由于篇幅的问题，还有文字描述真的太难了。</p>\n","feature":null,"text":"ubuntu日常使用网上下载安装的程序统一放在~&#x2F;soft目录下 本文所有操作全部基于ubuntu20.04版本 [TOC] 0 常用命令和快捷键12...","permalink":"/post/ubuntu日常使用","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":1,"path":"api/categories/操作系统.json"},{"name":"网络","slug":"操作系统/网络","count":1,"path":"api/categories/操作系统/网络.json"},{"name":"常用工具","slug":"操作系统/网络/常用工具","count":1,"path":"api/categories/操作系统/网络/常用工具.json"},{"name":"项目","slug":"操作系统/网络/常用工具/项目","count":1,"path":"api/categories/操作系统/网络/常用工具/项目.json"},{"name":"环境配置","slug":"操作系统/网络/常用工具/项目/环境配置","count":1,"path":"api/categories/操作系统/网络/常用工具/项目/环境配置.json"},{"name":"docker","slug":"操作系统/网络/常用工具/项目/环境配置/docker","count":1,"path":"api/categories/操作系统/网络/常用工具/项目/环境配置/docker.json"}],"tags":[{"name":"操作系统","slug":"操作系统","count":3,"path":"api/tags/操作系统.json"},{"name":"网络","slug":"网络","count":6,"path":"api/tags/网络.json"},{"name":"常用工具","slug":"常用工具","count":6,"path":"api/tags/常用工具.json"},{"name":"项目","slug":"项目","count":6,"path":"api/tags/项目.json"},{"name":"环境配置","slug":"环境配置","count":5,"path":"api/tags/环境配置.json"},{"name":"docker","slug":"docker","count":4,"path":"api/tags/docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ubuntu%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">ubuntu日常使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE\"><span class=\"toc-text\">0 常用命令和快捷键</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">1 常见问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E7%BC%BA%E5%B0%91%E6%9C%89%E7%BA%BF%E8%BF%9E%E6%8E%A5\"><span class=\"toc-text\">1.1 缺少有线连接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E7%BC%BA%E5%B0%91%E6%97%A0%E7%BA%BF%E7%BD%91\"><span class=\"toc-text\">1.2 缺少无线网</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-1-ubuntu18-04%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">1.2.1 ubuntu18.04安装方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-2-ubuntu20-04%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">1.2.2 ubuntu20.04安装方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%9F%BA%E7%A1%80%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2 基础软件安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-anaconda%E5%AE%89%E8%A3%85%EF%BC%88%E5%89%8D%E6%9C%9F%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87%EF%BC%89\"><span class=\"toc-text\">2.1 anaconda安装（前期环境准备）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-1-cuda%E5%AE%89%E8%A3%85%E4%BA%86%EF%BC%8C%E4%BD%86%E6%98%AF%E6%B2%A1%E6%B7%BB%E5%8A%A0%E5%88%B0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.1.1 cuda安装了，但是没添加到环境变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-2-cuda%E6%9C%AA%E5%AE%89%E8%A3%85%EF%BC%8C%E5%88%99%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85cuda\"><span class=\"toc-text\">2.1.2  cuda未安装，则需要安装cuda</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-3-cudnn%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.1.3  cudnn安装</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-anaconda%E5%AE%89%E8%A3%85%EF%BC%88%E6%AD%A3%E5%BC%8F%E5%AE%89%E8%A3%85%EF%BC%89\"><span class=\"toc-text\">2.2 anaconda安装（正式安装）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-docker%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">2.3 docker安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-1-%E5%8D%B8%E8%BD%BD%E6%97%A7%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">2.3.1 卸载旧版本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-2-%E8%AE%BE%E7%BD%AE%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">2.3.2 设置仓库</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-3-%E5%AE%89%E8%A3%85-Docker-Engine-Community\"><span class=\"toc-text\">2.3.3 安装 Docker Engine-Community</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-4-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">2.3.4 测试</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-5-%E5%85%8D-sudo-%E8%BF%90%E8%A1%8C-%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F\"><span class=\"toc-text\">2.3.5 免 sudo 运行 &amp; 镜像加速</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-clash%E5%AE%89%E8%A3%85%EF%BC%88linux%E7%89%88%E6%9C%AC%EF%BC%89\"><span class=\"toc-text\">2.4 clash安装（linux版本）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-1-%E5%AE%89%E8%A3%85clash-verge\"><span class=\"toc-text\">2.4.1 安装clash-verge</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4-2-%E5%AE%89%E8%A3%85clash-for-linux\"><span class=\"toc-text\">2.4.2 安装clash for linux</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E7%BE%8E%E5%8C%96\"><span class=\"toc-text\">3 桌面环境美化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E7%BE%8E%E5%8C%96%E5%89%8D%E5%87%86%E5%A4%87\"><span class=\"toc-text\">3.1 美化前准备</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-1-%E5%AE%89%E8%A3%85%E5%BF%85%E8%A6%81%E8%BD%AF%E4%BB%B6\"><span class=\"toc-text\">3.1.1 安装必要软件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-2-%E5%AE%89%E8%A3%85%E4%B8%80%E4%BA%9B%E5%BF%85%E8%A6%81%E7%9A%84%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">3.1.2 安装一些必要的插件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-1-3-%E4%B8%8B%E8%BD%BD%E5%BF%85%E8%A6%81%E7%9A%84%E7%BE%8E%E5%8C%96%E5%8C%85\"><span class=\"toc-text\">3.1.3 下载必要的美化包</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2%E3%80%81%E5%BC%80%E5%A7%8B%E7%BE%8E%E5%8C%96\"><span class=\"toc-text\">3.2、开始美化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-1-%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98%E5%8C%85\"><span class=\"toc-text\">3.2.1 安装主题包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-2-2-%E5%AE%89%E8%A3%85-plank-dock-%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">3.2.2 安装 plank dock 工具</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E6%9C%80%E5%90%8E%E7%9A%84%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3.3 最后的配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-1-plank-%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">3.3.1 plank 设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-2-gnome-tweaks-%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">3.3.2 gnome-tweaks 设置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-3-3-Firefox-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">3.3.3 Firefox 浏览器美化设置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-4-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">3.4 总结</span></a></li></ol></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"sql server共享目录等相关路径无法更改","uid":"e0678d96ea5517903ec41e8e23a94999","slug":"sql server共享目录等相关路径无法更改","date":"2024-07-25T13:08:45.761Z","updated":"2024-12-23T14:37:15.366Z","comments":true,"path":"api/articles/sql server共享目录等相关路径无法更改.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/e7bfd54722c947fd91aa2b0ce45de2ac_3.png","text":"注意：什么路径不可改就搜索该路径进行删除注册表记录，然后重启电脑 按 win 键盘 + R 输入 regedit 进去注册表，点击计算机按 “编辑”–》查找下一...","permalink":"/post/sql server共享目录等相关路径无法更改","photos":[],"count_time":{"symbolsCount":357,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null},"next_post":{"title":"华为IA-IE","uid":"5a30a74d412d8315491a167b8e238a38","slug":"华为IA-IE","date":"2024-06-06T14:12:13.456Z","updated":"2024-06-06T15:12:41.769Z","comments":true,"path":"api/articles/华为IA-IE.json","keywords":null,"cover":null,"text":"华为IA-IE","permalink":"/post/华为IA-IE","photos":[],"count_time":{"symbolsCount":7,"symbolsTime":"1 mins."},"categories":[{"name":"工作","slug":"工作","count":9,"path":"api/categories/工作.json"},{"name":"网络","slug":"工作/网络","count":2,"path":"api/categories/工作/网络.json"},{"name":"项目","slug":"工作/网络/项目","count":1,"path":"api/categories/工作/网络/项目.json"}],"tags":[{"name":"网络","slug":"网络","count":6,"path":"api/tags/网络.json"},{"name":"常用工具","slug":"常用工具","count":6,"path":"api/tags/常用工具.json"},{"name":"项目","slug":"项目","count":6,"path":"api/tags/项目.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}