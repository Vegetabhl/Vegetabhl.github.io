{"title":"2-DQL多表查询、事务、DCL(管理用户和授权)","uid":"9c31673e0471abc8c04ba8eee1f127f7","slug":"2-DQL多表查询、事务、DCL(管理用户和授权)","date":"2024-05-01T11:43:02.714Z","updated":"2024-05-01T11:41:16.830Z","comments":true,"path":"api/articles/2-DQL多表查询、事务、DCL(管理用户和授权).json","keywords":null,"cover":null,"content":"<h1 id=\"2-DQL多表查询、事务、DCL-管理用户和授权\"><a href=\"#2-DQL多表查询、事务、DCL-管理用户和授权\" class=\"headerlink\" title=\"2-DQL多表查询、事务、DCL(管理用户和授权)\"></a>2-DQL多表查询、事务、DCL(管理用户和授权)</h1><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. 多表查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. 事务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3. DCL</span></span></code></pre></div><h2 id=\"多表查询：\"><a href=\"#多表查询：\" class=\"headerlink\" title=\"多表查询：\"></a>多表查询：</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">* 查询语法：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    select</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        列名列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    from</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        表名列表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    where....</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* 准备sql</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    # 创建部门表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    CREATE TABLE dept(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        id INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        NAME VARCHAR(20)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO dept (NAME) VALUES (&#39;开发部&#39;),(&#39;市场部&#39;),(&#39;财务部&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    # 创建员工表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    CREATE TABLE emp (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        id INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        NAME VARCHAR(10),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        gender CHAR(1), -- 性别</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        salary DOUBLE, -- 工资</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        join_date DATE, -- 入职日期</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        dept_id INT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        FOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* 笛卡尔积：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 有两个集合A,B .取这两个集合的所有组成情况。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 要完成多表查询，需要消除无用的数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* 多表查询的分类：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 内连接查询：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 隐式内连接：使用where条件消除无用数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 例子：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 查询所有员工信息和对应的部门信息</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT * FROM emp,dept WHERE emp.`dept_id` = dept.`id`;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 查询员工表的名称，性别。部门表的名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT emp.name,emp.gender,dept.name FROM emp,dept WHERE emp.`dept_id` = dept.`id`;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.name, -- 员工表的姓名</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.gender,-- 员工表的性别</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t2.name -- 部门表的名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FROM</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                emp t1,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                dept t2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            WHERE </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.`dept_id` = t2.`id`;</span></span></code></pre></div><p>​\t<br>​\t\t\t2. 显式内连接：<br>​\t\t\t\t* 语法： select 字段列表 from 表名1 [inner] join 表名2 on 条件<br>​\t\t\t\t* 例如：<br>​\t\t\t\t\t* SELECT * FROM emp INNER JOIN dept ON emp.<code>dept_id</code> &#x3D; dept.<code>id</code>;\t<br>​\t\t\t\t\t* SELECT * FROM emp JOIN dept ON emp.<code>dept_id</code> &#x3D; dept.<code>id</code>;\t<br>​\t<br>​\t\t\t3. 内连接查询：<br>​\t\t\t\t1. 从哪些表中查询数据<br>​\t\t\t\t2. 条件是什么<br>​\t\t\t\t3. 查询哪些字段<br>​\t\t2. 外链接查询：<br>​\t\t\t1. 左外连接：<br>​\t\t\t\t* 语法：select 字段列表 from 表1 left [outer] join 表2 on 条件；<br>​\t\t\t\t* 查询的是左表所有数据以及其交集部分。<br>​\t\t\t\t* 例子：<br>​\t\t\t\t\t– 查询所有员工信息，如果员工有部门，则查询部门名称，没有部门，则不显示部门名称<br>​\t\t\t\t\tSELECT \tt1.*,t2.<code>name</code> FROM emp t1 LEFT JOIN dept t2 ON t1.<code>dept_id</code> &#x3D; t2.<code>id</code>;<br>​\t\t\t2. 右外连接：<br>​\t\t\t\t* 语法：select 字段列表 from 表1 right [outer] join 表2 on 条件；<br>​\t\t\t\t* 查询的是右表所有数据以及其交集部分。<br>​\t\t\t\t* 例子：<br>​\t\t\t\t\tSELECT \t* FROM dept t2 RIGHT JOIN emp t1 ON t1.<code>dept_id</code> &#x3D; t2.<code>id</code>;<br>​\t\t3. 子查询：<br>​\t\t\t* 概念：查询中嵌套查询，称嵌套查询为子查询。<br>​\t\t\t\t– 查询工资最高的员工信息<br>​\t\t\t\t– 1 查询最高的工资是多少 9000<br>​\t\t\t\tSELECT MAX(salary) FROM emp;<br>​\t\t\t\t<br>                – 2 查询员工信息，并且工资等于9000的<br>                SELECT * FROM emp WHERE emp.<code>salary</code> &#x3D; 9000;</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">            -- 一条sql就完成这个操作。子查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT * FROM emp WHERE emp.`salary` = (SELECT MAX(salary) FROM emp);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 子查询不同情况</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            1. 子查询的结果是单行单列的：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * 子查询可以作为条件，使用运算符去判断。 运算符： &gt; &gt;= &lt; &lt;= =</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 查询员工工资小于平均工资的人</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT * FROM emp WHERE emp.salary &lt; (SELECT AVG(salary) FROM emp);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            2. 子查询的结果是多行单列的：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * 子查询可以作为条件，使用运算符in来判断</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 查询&#39;财务部&#39;和&#39;市场部&#39;所有的员工信息</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT id FROM dept WHERE NAME = &#39;财务部&#39; OR NAME = &#39;市场部&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT * FROM emp WHERE dept_id = 3 OR dept_id = 2;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 子查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE NAME = &#39;财务部&#39; OR NAME = &#39;市场部&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            3. 子查询的结果是多行多列的：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * 子查询可以作为一张虚拟表参与查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 子查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT * FROM dept t1 ,(SELECT * FROM emp WHERE emp.`join_date` &gt; &#39;2011-11-11&#39;) t2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                WHERE t1.id = t2.dept_id;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                -- 普通内连接</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                SELECT * FROM emp t1,dept t2 WHERE t1.`dept_id` = t2.`id` AND t1.`join_date` &gt;  &#39;2011-11-11&#39;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 多表查询练习</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 部门表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            CREATE TABLE dept (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">              id INT PRIMARY KEY PRIMARY KEY, -- 部门id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">              dname VARCHAR(50), -- 部门名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">              loc VARCHAR(50) -- 部门所在地</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 添加4个部门</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            INSERT INTO dept(id,dname,loc) VALUES </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            (10,&#39;教研部&#39;,&#39;北京&#39;),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            (20,&#39;学工部&#39;,&#39;上海&#39;),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            (30,&#39;销售部&#39;,&#39;广州&#39;),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            (40,&#39;财务部&#39;,&#39;深圳&#39;);</span></span></code></pre></div><p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 职务表，职务名称，职务描述<br>​\t\t\t\tCREATE TABLE job (<br>​\t\t\t\t  id INT PRIMARY KEY,<br>​\t\t\t\t  jname VARCHAR(20),<br>​\t\t\t\t  description VARCHAR(50)<br>​\t\t\t\t);<br>​\t\t\t\t<br>​\t\t\t\t– 添加4个职务<br>​\t\t\t\tINSERT INTO job (id, jname, description) VALUES<br>​\t\t\t\t(1, ‘董事长’, ‘管理整个公司，接单’),<br>​\t\t\t\t(2, ‘经理’, ‘管理部门员工’),<br>​\t\t\t\t(3, ‘销售员’, ‘向客人推销产品’),<br>​\t\t\t\t(4, ‘文员’, ‘使用办公软件’);</p>\n<p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 员工表<br>​\t\t\t\tCREATE TABLE emp (<br>​\t\t\t\t  id INT PRIMARY KEY, – 员工id<br>​\t\t\t\t  ename VARCHAR(50), – 员工姓名<br>​\t\t\t\t  job_id INT, – 职务id<br>​\t\t\t\t  mgr INT , – 上级领导<br>​\t\t\t\t  joindate DATE, – 入职日期<br>​\t\t\t\t  salary DECIMAL(7,2), – 工资<br>​\t\t\t\t  bonus DECIMAL(7,2), – 奖金<br>​\t\t\t\t  dept_id INT, – 所在部门编号<br>​\t\t\t\t  CONSTRAINT emp_jobid_ref_job_id_fk FOREIGN KEY (job_id) REFERENCES job (id),<br>​\t\t\t\t  CONSTRAINT emp_deptid_ref_dept_id_fk FOREIGN KEY (dept_id) REFERENCES dept (id)<br>​\t\t\t\t);<br>​\t\t\t\t<br>​\t\t\t\t– 添加员工<br>​\t\t\t\tINSERT INTO emp(id,ename,job_id,mgr,joindate,salary,bonus,dept_id) VALUES<br>​\t\t\t\t(1001,’孙悟空’,4,1004,’2000-12-17’,’8000.00’,NULL,20),<br>​\t\t\t\t(1002,’卢俊义’,3,1006,’2001-02-20’,’16000.00’,’3000.00’,30),<br>​\t\t\t\t(1003,’林冲’,3,1006,’2001-02-22’,’12500.00’,’5000.00’,30),<br>​\t\t\t\t(1004,’唐僧’,2,1009,’2001-04-02’,’29750.00’,NULL,20),<br>​\t\t\t\t(1005,’李逵’,4,1006,’2001-09-28’,’12500.00’,’14000.00’,30),<br>​\t\t\t\t(1006,’宋江’,2,1009,’2001-05-01’,’28500.00’,NULL,30),<br>​\t\t\t\t(1007,’刘备’,2,1009,’2001-09-01’,’24500.00’,NULL,10),<br>​\t\t\t\t(1008,’猪八戒’,4,1004,’2007-04-19’,’30000.00’,NULL,20),<br>​\t\t\t\t(1009,’罗贯中’,1,NULL,’2001-11-17’,’50000.00’,NULL,10),<br>​\t\t\t\t(1010,’吴用’,3,1006,’2001-09-08’,’15000.00’,’0.00’,30),<br>​\t\t\t\t(1011,’沙僧’,4,1004,’2007-05-23’,’11000.00’,NULL,20),<br>​\t\t\t\t(1012,’李逵’,4,1006,’2001-12-03’,’9500.00’,NULL,30),<br>​\t\t\t\t(1013,’小白龙’,4,1004,’2001-12-03’,’30000.00’,NULL,20),<br>​\t\t\t\t(1014,’关羽’,4,1007,’2002-01-23’,’13000.00’,NULL,10);</p>\n<p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 工资等级表<br>​\t\t\t\tCREATE TABLE salarygrade (<br>​\t\t\t\t  grade INT PRIMARY KEY,   – 级别<br>​\t\t\t\t  losalary INT,  – 最低工资<br>​\t\t\t\t  hisalary INT – 最高工资<br>​\t\t\t\t);<br>​\t\t\t\t<br>​\t\t\t\t– 添加5个工资等级<br>​\t\t\t\tINSERT INTO salarygrade(grade,losalary,hisalary) VALUES<br>​\t\t\t\t(1,7000,12000),<br>​\t\t\t\t(2,12010,14000),<br>​\t\t\t\t(3,14010,20000),<br>​\t\t\t\t(4,20010,30000),<br>​\t\t\t\t(5,30010,99990);<br>​\t\t\t\t<br>                – 需求：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">            -- 1.查询所有员工信息。查询员工编号，员工姓名，工资，职务名称，职务描述</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            /*</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                分析：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                    1.员工编号，员工姓名，工资，需要查询emp表  职务名称，职务描述 需要查询job表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                    2.查询条件 emp.job_id = job.id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            */</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.`id`, -- 员工编号</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.`ename`, -- 员工姓名</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.`salary`,-- 工资</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t2.`jname`, -- 职务名称</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t2.`description` -- 职务描述</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FROM </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                emp t1, job t2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            WHERE </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.`job_id` = t2.`id`;</span></span></code></pre></div><p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 2.查询员工编号，员工姓名，工资，职务名称，职务描述，部门名称，部门位置<br>​\t\t\t\t&#x2F;*<br>​\t\t\t\t\t分析：<br>​\t\t\t\t\t\t1. 员工编号，员工姓名，工资 emp  职务名称，职务描述 job  部门名称，部门位置 dept<br>​\t\t\t\t\t\t2. 条件： emp.job_id &#x3D; job.id and emp.dept_id &#x3D; dept.id<br>​\t\t\t\t<em>&#x2F;<br>​\t\t\t\t<br>​\t\t\t\tSELECT<br>​\t\t\t\t\tt1.<code>id</code>, – 员工编号<br>​\t\t\t\t\tt1.<code>ename</code>, – 员工姓名<br>​\t\t\t\t\tt1.<code>salary</code>,– 工资<br>​\t\t\t\t\tt2.<code>jname</code>, – 职务名称<br>​\t\t\t\t\tt2.<code>description</code>, – 职务描述<br>​\t\t\t\t\tt3.<code>dname</code>, – 部门名称<br>​\t\t\t\t\tt3.<code>loc</code> – 部门位置<br>​\t\t\t\tFROM<br>​\t\t\t\t\temp t1, job t2,dept t3<br>​\t\t\t\tWHERE<br>​\t\t\t\t\tt1.<code>job_id</code> &#x3D; t2.<code>id</code> AND t1.<code>dept_id</code> &#x3D; t3.<code>id</code>;<br>​\t\t\t\t<br>                – 3.查询员工姓名，工资，工资等级<br>                &#x2F;</em><br>                    分析：<br>                        1.员工姓名，工资 emp  工资等级 salarygrade<br>                        2.条件 emp.salary &gt;&#x3D; salarygrade.losalary and emp.salary &lt;&#x3D; salarygrade.hisalary<br>                            emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary<br>                <em>&#x2F;<br>                SELECT<br>                    t1.ename ,<br>                    t1.<code>salary</code>,<br>                    t2.</em><br>                FROM emp t1, salarygrade t2<br>                WHERE t1.<code>salary</code> BETWEEN t2.<code>losalary</code> AND t2.<code>hisalary</code>;</p>\n<p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 4.查询员工姓名，工资，职务名称，职务描述，部门名称，部门位置，工资等级<br>​\t\t\t\t&#x2F;*<br>​\t\t\t\t\t分析：<br>​\t\t\t\t\t\t1. 员工姓名，工资 emp ， 职务名称，职务描述 job 部门名称，部门位置，dept  工资等级 salarygrade<br>​\t\t\t\t\t\t2. 条件： emp.job_id &#x3D; job.id and emp.dept_id &#x3D; dept.id and emp.salary BETWEEN salarygrade.losalary and salarygrade.hisalary<br>​\t\t\t\t\t\t\t<br>​\t\t\t\t*&#x2F;<br>​\t\t\t\tSELECT<br>​\t\t\t\t\tt1.<code>ename</code>,<br>​\t\t\t\t\tt1.<code>salary</code>,<br>​\t\t\t\t\tt2.<code>jname</code>,<br>​\t\t\t\t\tt2.<code>description</code>,<br>​\t\t\t\t\tt3.<code>dname</code>,<br>​\t\t\t\t\tt3.<code>loc</code>,<br>​\t\t\t\t\tt4.<code>grade</code><br>​\t\t\t\tFROM<br>​\t\t\t\t\temp t1,job t2,dept t3,salarygrade t4<br>​\t\t\t\tWHERE<br>​\t\t\t\t\tt1.<code>job_id</code> &#x3D; t2.<code>id</code><br>​\t\t\t\t\tAND t1.<code>dept_id</code> &#x3D; t3.<code>id</code><br>​\t\t\t\t\tAND t1.<code>salary</code> BETWEEN t4.<code>losalary</code> AND t4.<code>hisalary</code>;</p>\n<p>​\t\t\t\t<br>​\t\t\t\t<br>​\t\t\t\t– 5.查询出部门编号、部门名称、部门位置、部门人数<br>​\t\t\t\t<br>​\t\t\t\t&#x2F;*<br>​\t\t\t\t\t分析：<br>​\t\t\t\t\t\t1.部门编号、部门名称、部门位置 dept 表。 部门人数 emp表<br>​\t\t\t\t\t\t2.使用分组查询。按照emp.dept_id完成分组，查询count(id)<br>​\t\t\t\t\t\t3.使用子查询将第2步的查询结果和dept表进行关联查询<br>​\t\t\t\t\t\t<br>                *&#x2F;<br>                SELECT<br>                    t1.<code>id</code>,t1.<code>dname</code>,t1.<code>loc</code> , t2.total<br>                FROM<br>                    dept t1,<br>                    (SELECT<br>                        dept_id,COUNT(id) total<br>                    FROM<br>                        emp<br>                    GROUP BY dept_id) t2<br>                WHERE t1.<code>id</code> &#x3D; t2.dept_id;</p>\n<p>​\t\t\t\t<br>​\t\t\t\t– 6.查询所有员工的姓名及其直接上级的姓名,没有领导的员工也需要查询<br>​\t\t\t\t<br>​\t\t\t\t&#x2F;*<br>​\t\t\t\t\t分析：<br>​\t\t\t\t\t\t1.姓名 emp， 直接上级的姓名 emp<br>​\t\t\t\t\t\t\t* emp表的id 和 mgr 是自关联<br>​\t\t\t\t\t\t2.条件 emp.id &#x3D; emp.mgr<br>​\t\t\t\t\t\t3.查询左表的所有数据，和 交集数据<br>​\t\t\t\t\t\t\t* 使用左外连接查询<br>​\t\t\t\t\t<br>                <em>&#x2F;<br>                &#x2F;</em><br>                select<br>                    t1.ename,<br>                    t1.mgr,<br>                    t2.<code>id</code>,<br>                    t2.ename<br>                from emp t1, emp t2<br>                where t1.mgr &#x3D; t2.<code>id</code>;</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">            */</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.ename,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t1.mgr,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t2.`id`,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                t2.`ename`</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FROM emp t1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            LEFT JOIN emp t2</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            ON t1.`mgr` = t2.`id`;</span></span></code></pre></div><h2 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. 事务的基本介绍</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 概念：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        *  如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 操作：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 开启事务： start transaction;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 回滚：rollback;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 提交：commit;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 例子：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE account (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            id INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            NAME VARCHAR(10),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            balance DOUBLE</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 添加数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        INSERT INTO account (NAME, balance) VALUES (&#39;zhangsan&#39;, 1000), (&#39;lisi&#39;, 1000);</span></span></code></pre></div><p>​\t\t\t<br>​\t\t\tSELECT * FROM account;<br>​\t\t\tUPDATE account SET balance &#x3D; 1000;<br>​\t\t\t– 张三给李四转账 500 元<br>​\t\t\t<br>​\t\t\t– 0. 开启事务<br>​\t\t\tSTART TRANSACTION;<br>​\t\t\t– 1. 张三账户 -500<br>​\t\t\t<br>            UPDATE account SET balance &#x3D; balance - 500 WHERE NAME &#x3D; ‘zhangsan’;<br>            – 2. 李四账户 +500<br>            – 出错了…<br>            UPDATE account SET balance &#x3D; balance + 500 WHERE NAME &#x3D; ‘lisi’;</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">        -- 发现执行没有问题，提交事务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        COMMIT;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 发现出问题了，回滚事务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ROLLBACK;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. MySQL数据库中事务默认自动提交</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 事务提交的两种方式：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 自动提交：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * mysql就是自动提交的</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * 一条DML(增删改)语句会自动提交一次事务。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 手动提交：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * Oracle 数据库默认是手动提交事务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                * 需要先开启事务，再提交</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 修改事务的默认提交方式：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 查看事务的默认提交方式：SELECT @@autocommit; -- 1 代表自动提交  0 代表手动提交</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 修改默认提交方式： set @@autocommit = 0;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. 事务的四大特征：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 持久性：当事务提交或回滚后，数据库会持久化的保存数据。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 隔离性：多个事务之间。相互独立。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. 一致性：事务操作前后，数据总量不变</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3. 事务的隔离级别（了解）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 概念：多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 存在问题：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 脏读：一个事务，读取到另一个事务中没有提交的数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 隔离级别：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. read uncommitted：读未提交</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 产生的问题：脏读、不可重复读、幻读</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. read committed：读已提交 （Oracle）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 产生的问题：不可重复读、幻读</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. repeatable read：可重复读 （MySQL默认）</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 产生的问题：幻读</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        4. serializable：串行化</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 可以解决所有的问题</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 注意：隔离级别从小到大安全性越来越高，但是效率越来越低</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 数据库查询隔离级别：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * select @@tx_isolation;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 数据库设置隔离级别：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * set global transaction isolation level  级别字符串;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 演示：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        set global transaction isolation level read uncommitted;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        start transaction;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 转账操作</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        update account set balance = balance - 500 where id = 1;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        update account set balance = balance + 500 where id = 2;</span></span></code></pre></div><h2 id=\"DCL：\"><a href=\"#DCL：\" class=\"headerlink\" title=\"DCL：\"></a>DCL：</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">* SQL分类：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. DDL：操作数据库和表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. DML：增删改表中数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. DQL：查询表中数据</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. DCL：管理用户，授权</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* DBA：数据库管理员</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* DCL：管理用户，授权</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 管理用户</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 添加用户：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 语法：CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 删除用户：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 语法：DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 修改用户密码：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            UPDATE USER SET PASSWORD = PASSWORD(&#39;新密码&#39;) WHERE USER = &#39;用户名&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            UPDATE USER SET PASSWORD = PASSWORD(&#39;abc&#39;) WHERE USER = &#39;lisi&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SET PASSWORD FOR &#39;用户名&#39;@&#39;主机名&#39; = PASSWORD(&#39;新密码&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;123&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * mysql中忘记了root用户的密码？</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                1. cmd -- &gt; net stop mysql 停止mysql服务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                    * 需要管理员运行该cmd</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                2. 使用无验证方式启动mysql服务： mysqld --skip-grant-tables</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                3. 打开新的cmd窗口,直接输入mysql命令，敲回车。就可以登录成功</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                4. use mysql;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                5. update user set password = password(&#39;你的新密码&#39;) where user = &#39;root&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                6. 关闭两个窗口</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                7. 打开任务管理器，手动结束mysqld.exe 的进程</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                8. 启动mysql服务</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                9. 使用新密码登录。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        4. 查询用户：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 1. 切换到mysql数据库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            USE myql;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 2. 查询user表</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SELECT * FROM USER;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 通配符： % 表示可以在任意主机使用用户登录数据库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 权限管理：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 查询权限：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 查询权限</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            SHOW GRANTS FOR &#39;lisi&#39;@&#39;%&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 授予权限：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 授予权限</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            grant 权限列表 on 数据库名.表名 to &#39;用户名&#39;@&#39;主机名&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 给张三用户授予所有权限，在任意数据库任意表上</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            GRANT ALL ON *.* TO &#39;zhangsan&#39;@&#39;localhost&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 撤销权限：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 撤销权限：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            revoke 权限列表 on 数据库名.表名 from &#39;用户名&#39;@&#39;主机名&#39;;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            REVOKE UPDATE ON db3.`account` FROM &#39;lisi&#39;@&#39;%&#39;;</span></span></code></pre></div>","feature":null,"text":"2-DQL多表查询、事务、DCL(管理用户和授权)txt1. 多表查询 2. 事务 3. DCL多表查询：txt* 查询语法： select 列名列表 from...","permalink":"/post/2-DQL多表查询、事务、DCL(管理用户和授权)","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"mysql","slug":"mysql","count":3,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-DQL%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%E3%80%81%E4%BA%8B%E5%8A%A1%E3%80%81DCL-%E7%AE%A1%E7%90%86%E7%94%A8%E6%88%B7%E5%92%8C%E6%8E%88%E6%9D%83\"><span class=\"toc-text\">2-DQL多表查询、事务、DCL(管理用户和授权)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2%EF%BC%9A\"><span class=\"toc-text\">多表查询：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E5%8A%A1\"><span class=\"toc-text\">事务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#DCL%EF%BC%9A\"><span class=\"toc-text\">DCL：</span></a></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","uid":"ba3795bcaa1c4cf0d23951d6953d8fd5","slug":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","date":"2024-05-01T11:43:02.716Z","updated":"2024-05-01T11:41:29.940Z","comments":true,"path":"api/articles/3-DQL查询语句、约束、多表关系、范式、数据库备份和还原.json","keywords":null,"cover":null,"text":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原txt1. DQL:查询语句 1. 排序查询 2. 聚合函数 3. 分组查询 4. 分页查询 2. 约...","permalink":"/post/3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"mysql","slug":"mysql","count":3,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null},"next_post":{"title":"1-MySQL数据库软件配置、DDL、DML、DQL(部分)","uid":"a9163eccc7214878855118492d210e14","slug":"1-MySQL数据库软件配置、DDL、DML、DQL(部分)","date":"2024-05-01T11:43:02.713Z","updated":"2024-05-01T11:39:04.331Z","comments":true,"path":"api/articles/1-MySQL数据库软件配置、DDL、DML、DQL(部分).json","keywords":null,"cover":null,"text":"1-MySQL数据库软件配置、DDL、DML、DQL(部分) 数据库的基本概念 MySQL数据库软件 安装 卸载 配置 SQL 数据库的基本概念txt1. 数据...","permalink":"/post/1-MySQL数据库软件配置、DDL、DML、DQL(部分)","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"mysql","slug":"mysql","count":3,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}