{"title":"mmdet","uid":"97ee172f7fe606eea665b3155aa4c504","slug":"mmdet","date":"2022-01-12T12:59:27.473Z","updated":"2024-05-29T15:36:09.531Z","comments":true,"path":"api/articles/mmdet.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/6c9821b4e395412480baf6d966392162_2.png","content":"<h2 id=\"mmdet\"><a href=\"#mmdet\" class=\"headerlink\" title=\"mmdet\"></a>mmdet</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>详见官方文档，先装mmcv-full，再装mmdet</p>\n<p><a href=\"https://mmdetection.readthedocs.io/zh_CN/v2.20.0/get_started.html\">https://mmdetection.readthedocs.io/zh_CN/v2.20.0/get_started.html</a></p>\n<h3 id=\"训练-测试-推理\"><a href=\"#训练-测试-推理\" class=\"headerlink\" title=\"训练-测试-推理\"></a>训练-测试-推理</h3><h4 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h4><p>在configs&#x2F;目录下找到要训练的模型配置文件，然后根据继承的配置文件去修改，</p>\n<p>​\t<strong>举例：configs&#x2F;mask_rcnn&#x2F;mask_rcnn_r50_fpn_1x_coco.py</strong></p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-mmdet-01.png\" alt=\"image-20220112203213431\"></p>\n<p>上数四个文件代码中我已经标注清楚，自行查找（如果使用的是voc格式数据，修改上图中和coco_detection.py在同一路径下的voc0712.py）</p>\n<p><strong>其余需要修改的地方：</strong></p>\n<p>1 mmdet&#x2F;datasets&#x2F;coco.py 修改</p>\n<ul>\n<li><p>coco类别名</p>\n</li>\n<li><p>iou_thrs (列表形式，如 iou_thrs&#x3D;[0.5]，未修改前默认为None)  修改此处的目的是评估时通过 <strong>–options  “classwise&#x3D;True”</strong> 查看单一类别在固定Iou阈值下的ap值，不改默认求的是0.5：0.95下的。</p>\n</li>\n</ul>\n<p>2 mmdet&#x2F;core&#x2F;evaluation&#x2F;class_names.py 修改 </p>\n<ul>\n<li>coco或者voc的类别名称</li>\n</ul>\n<p>3.mmdet&#x2F;core&#x2F;evaluation&#x2F;mean_ap.py下</p>\n<ul>\n<li>修改后得到precision值的评估代码</li>\n</ul>\n<h4 id=\"数据格式-都在根路径下\"><a href=\"#数据格式-都在根路径下\" class=\"headerlink\" title=\"数据格式(都在根路径下)\"></a>数据格式(都在根路径下)</h4><p>1 coco格式:</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-mmdet-02.png\" alt=\"image-20220120153919773\"></p>\n<p>2 voc格式:</p>\n<p><img src=\"https://vegetabhlimg.netlify.app/img/image-mmdet-03.png\" alt=\"image-20220120153908608\"></p>\n<h4 id=\"训练\"><a href=\"#训练\" class=\"headerlink\" title=\"训练\"></a>训练</h4><p>train:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/train.py configs/mask_rcnn/mask_rcnn_r50_fpn_1x_coco.py --work-<span class=\"built_in\">dir</span> bhl_mask-rcnn --gpus <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>test(验证测试):</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/test.py bhl_mask-rcnn/mask_rcnn_r50_fpn_1x_coco.py bhl_mask-rcnn/epoch12.pt --<span class=\"built_in\">eval</span> bbox</span><br></pre></td></tr></table></figure>\n\n\n\n<p>fps值测试：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m torch.distributed.launch --nproc_per_node=<span class=\"number\">1</span> --master_port=<span class=\"number\">29500</span> \\</span><br><span class=\"line\">  tools/analysis_tools/benchmark.py \\         </span><br><span class=\"line\">  bhl_work/mask_rcnn_r50_fpn_1x_coco.py \\</span><br><span class=\"line\">  bhl_work/epoch_12.pth \\</span><br><span class=\"line\">  --launcher pytorch \\</span><br><span class=\"line\">  --fuse-conv-bn</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p>1官方默认是在8个gpu下训练的模型，如果是自己单卡训练的话记得设置学习率的时候除以8</p>\n<p>2 coco格式数据评估时不会有precision和recall，voc格式数据评估时可以得到recall(也不会得到precison)，如果需要得到precision，代码我已经修改过了，请将测试数据转成voc格式然后评估即可（记得其他和voc相关的py文件有需要修改的也要改下）。</p>\n<p>3 如果发现自己明明修改了却还是报错，去虚拟环境下的源码看下有没有改成功（通常时安装的编译版本和源代码版本不匹配，手动在源代码里修改就行了），或者用python setup.py develop或者python setup.py install重新编译下看看行不行。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>修改顺序：</p>\n<p>1 配置文件或者继承的配置文件（configs&#x2F;_base&#x2F;models&#x2F;）下修改 <strong>num_classes</strong>，</p>\n<p>2 配置文件或者（configs&#x2F;_base&#x2F;datasets&#x2F;coco_detection.py）下修改 <strong>img_scale</strong>，<strong>samples_per_gpu</strong>， 以及训练、验证、测试数据集的<strong>路径</strong>。</p>\n<p><strong>3 配置文件或者继承的配置文件下修改学习率之类的超参数</strong></p>\n<p>4  （mmdet&#x2F;datasets&#x2F;coco.py）下修改<strong>CLASSES</strong>类别名，（mmdet&#x2F;core&#x2F;evaluation&#x2F;class_names.py）下修改<strong>coco_classes</strong>或者<strong>voc_classes</strong>的类别名.</p>\n<p>集合的配置文件下修改<strong>runner</strong>的epoch数，<strong>load_from</strong>，其他自己看需要改吧。</p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>以上基本很多都能从官方文档找到，有问题还是从文档或者issues找</p>\n","feature":null,"text":"mmdet安装详见官方文档，先装mmcv-full，再装mmdet https://mmdetection.readthedocs.io/zh_CN/v2.20...","permalink":"/post/mmdet","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mmdet\"><span class=\"toc-text\">mmdet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83-%E6%B5%8B%E8%AF%95-%E6%8E%A8%E7%90%86\"><span class=\"toc-text\">训练-测试-推理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">修改</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F-%E9%83%BD%E5%9C%A8%E6%A0%B9%E8%B7%AF%E5%BE%84%E4%B8%8B\"><span class=\"toc-text\">数据格式(都在根路径下)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%AD%E7%BB%83\"><span class=\"toc-text\">训练</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%90%8E\"><span class=\"toc-text\">最后</span></a></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"gulimall","uid":"503c4c6e78f3754dcb43b085f6f6df4c","slug":"谷粒商城","date":"2022-02-22T13:01:19.605Z","updated":"2024-05-29T15:22:17.061Z","comments":true,"path":"api/articles/谷粒商城.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/b8a88128c4d747d685989548ef975aa0_2.png","text":"谷粒商城1 环境配置(ubuntu20.04)1.1 安装jdk1.8https://blog.csdn.net/Deadly_97/article/detai...","permalink":"/post/谷粒商城","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}}},"next_post":{"title":"environment","uid":"cdb05b27ae17178365a48c6021a17029","slug":"environment","date":"2021-12-14T06:11:49.500Z","updated":"2024-12-23T14:39:10.362Z","comments":true,"path":"api/articles/environment.json","keywords":null,"cover":"https://vegetabhlimg.netlify.app/img/2f70d0482b4946678682e5c02c9abd32_1.png","text":"[TOC] 一、MySQL 8.0 zip压缩包版本（免安装）的下载、配置安装1 下载MySQL 8.0 for Windows zip 压缩包版本 下载地址：...","permalink":"/post/environment","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}