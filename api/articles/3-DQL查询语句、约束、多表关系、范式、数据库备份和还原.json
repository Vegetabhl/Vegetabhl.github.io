{"title":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","uid":"ba3795bcaa1c4cf0d23951d6953d8fd5","slug":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","date":"2024-05-01T11:43:02.716Z","updated":"2024-05-01T11:41:29.940Z","comments":true,"path":"api/articles/3-DQL查询语句、约束、多表关系、范式、数据库备份和还原.json","keywords":null,"cover":null,"content":"<h1 id=\"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原\"><a href=\"#3-DQL查询语句、约束、多表关系、范式、数据库备份和还原\" class=\"headerlink\" title=\"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原\"></a>3-DQL查询语句、约束、多表关系、范式、数据库备份和还原</h1><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. DQL:查询语句</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 排序查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 聚合函数</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 分组查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. 分页查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. 约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3. 多表之间的关系</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">4. 范式</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">5. 数据库的备份和还原</span></span></code></pre></div><h1 id=\"DQL-查询语句\"><a href=\"#DQL-查询语句\" class=\"headerlink\" title=\"DQL:查询语句\"></a>DQL:查询语句</h1><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. 排序查询</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 语法：order by 子句</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * order by 排序字段1 排序方式1 ，  排序字段2 排序方式2...</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 排序方式：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * ASC：升序，默认的。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * DESC：降序。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 注意：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. 聚合函数：将一列数据作为一个整体，进行纵向的计算。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. count：计算个数</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 一般选择非空的列：主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. count(*)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. max：计算最大值</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. min：计算最小值</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. sum：计算和</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    5. avg：计算平均值</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 注意：聚合函数的计算，排除null值。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        解决方案：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            1. 选择不包含非空的列进行计算</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            2. IFNULL函数</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">3. 分组查询:</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 语法：group by 分组字段；</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 注意：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 分组之后查询的字段：分组字段、聚合函数</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. where 和 having 的区别？</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            1. where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            2. where 后不可以跟聚合函数，having可以进行聚合函数的判断。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 按照性别分组。分别查询男、女同学的平均分</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        SELECT sex , AVG(math) FROM student GROUP BY sex;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 按照性别分组。分别查询男、女同学的平均分,人数</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        SELECT sex , AVG(math),COUNT(id) FROM student GROUP BY sex;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        --  按照性别分组。分别查询男、女同学的平均分,人数 要求：分数低于70分的人，不参与分组,分组之后。人数要大于2个人</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        SELECT sex , AVG(math),COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex HAVING COUNT(id) &gt; 2;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        SELECT sex , AVG(math),COUNT(id) 人数 FROM student WHERE math &gt; 70 GROUP BY sex HAVING 人数 &gt; 2;</span></span></code></pre></div><p>​\t\t\t<br>​\t4. 分页查询<br>​\t\t1. 语法：limit 开始的索引,每页查询的条数;<br>​\t\t2. 公式：开始的索引 &#x3D; （当前的页码 - 1） * 每页显示的条数<br>​\t\t\t– 每页显示3条记录<br>​\t<br>​\t\t\tSELECT * FROM student LIMIT 0,3; – 第1页<br>​\t\t\t<br>            SELECT * FROM student LIMIT 3,3; – 第2页</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">        SELECT * FROM student LIMIT 6,3; -- 第3页</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. limit 是一个MySQL&quot;方言&quot;</span></span></code></pre></div><h2 id=\"约束\"><a href=\"#约束\" class=\"headerlink\" title=\"约束\"></a>约束</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">* 概念： 对表中的数据进行限定，保证数据的正确性、有效性和完整性。\t</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* 分类：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 主键约束：primary key</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 非空约束：not null</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 唯一约束：unique</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. 外键约束：foreign key</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">* 非空约束：not null，值不能为null</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 创建表时添加约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE stu(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            id INT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            NAME VARCHAR(20) NOT NULL -- name为非空</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 创建表完后，添加非空约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE stu MODIFY NAME VARCHAR(20) NOT NULL;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 删除name的非空约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE stu MODIFY NAME VARCHAR(20);</span></span></code></pre></div><p>​\t<br>​\t* 唯一约束：unique，值不能重复<br>​\t\t1. 创建表时，添加唯一约束<br>​\t\t\tCREATE TABLE stu(<br>​\t\t\t\tid INT,<br>​\t\t\t\tphone_number VARCHAR(20) UNIQUE – 添加了唯一约束<br>​\t\t\t<br>​\t\t\t);<br>​\t\t\t* 注意mysql中，唯一约束限定的列的值可以有多个null</p>\n<p>​\t\t<br>​\t\t2. 删除唯一约束<br>​\t\t<br>​\t\t\tALTER TABLE stu DROP INDEX phone_number;<br>​\t\t<br>        3. 在创建表后，添加唯一约束<br>            ALTER TABLE stu MODIFY phone_number VARCHAR(20) UNIQUE;</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">* 主键约束：primary key。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 注意：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 含义：非空且唯一</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 一张表只能有一个字段为主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 主键就是表中记录的唯一标识</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 在创建表时，添加主键约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        create table stu(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            id int primary key,-- 给id添加主键约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            name varchar(20)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 删除主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 错误 alter table stu modify id int ;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE stu DROP PRIMARY KEY;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    4. 创建完表后，添加主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE stu MODIFY id INT PRIMARY KEY;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    5. 自动增长：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1.  概念：如果某一列是数值类型的，使用 auto_increment 可以来完成值得自动增长</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 在创建表时，添加主键约束，并且完成主键自增长</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        create table stu(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            id int primary key auto_increment,-- 给id添加主键约束</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            name varchar(20)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span></code></pre></div><p>​\t\t\t<br>​\t\t\t3. 删除自动增长<br>​\t\t\tALTER TABLE stu MODIFY id INT;<br>​\t\t\t4. 添加自动增长<br>​\t\t\tALTER TABLE stu MODIFY id INT AUTO_INCREMENT;</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">* 外键约束：foreign key,让表于表产生关系，从而保证数据的正确性。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 在创建表时，可以添加外键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 语法：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            create table 表名(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                ....</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                外键列</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">                constraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 删除外键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 创建表之后，添加外键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称);</span></span></code></pre></div><p>​\t\t<br>​\t\t4. 级联操作<br>​\t\t\t1. 添加级联操作<br>​\t\t\t\t语法：ALTER TABLE 表名 ADD CONSTRAINT 外键名称<br>​\t\t\t\t\t\tFOREIGN KEY (外键字段名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE  ;<br>​\t\t\t2. 分类：<br>​\t\t\t\t1. 级联更新：ON UPDATE CASCADE<br>​\t\t\t\t2. 级联删除：ON DELETE CASCADE </p>\n<h2 id=\"数据库的设计\"><a href=\"#数据库的设计\" class=\"headerlink\" title=\"数据库的设计\"></a>数据库的设计</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. 多表之间的关系</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    1. 分类：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 一对一(了解)：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：人和身份证</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 分析：一个人只有一个身份证，一个身份证只能对应一个人</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 一对多(多对一)：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：部门和员工</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 分析：一个部门有多个员工，一个员工只能对应一个部门</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 多对多：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：学生和课程</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 分析：一个学生可以选择很多门课程，一个课程也可以被很多学生选择</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    2. 实现关系：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        1. 一对多(多对一)：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：部门和员工</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 实现方式：在多的一方建立外键，指向一的一方的主键。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        2. 多对多：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：学生和课程</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 实现方式：多对多关系实现需要借助第三张中间表。中间表至少包含两个字段，这两个字段作为第三张表的外键，分别指向两张表的主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        3. 一对一(了解)：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 如：人和身份证</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            * 实现方式：一对一关系实现，可以在任意一方添加唯一外键指向另一方的主键。</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    3. 案例</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 创建旅游线路分类表 tab_category</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- cid 旅游线路分类主键，自动增长</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- cname 旅游线路分类名称非空，唯一，字符串 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE tab_category (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            cid INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            cname VARCHAR(100) NOT NULL UNIQUE</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        -- 创建旅游线路表 tab_route</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        /*</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        rid 旅游线路主键，自动增长</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        rname 旅游线路名称非空，唯一，字符串 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        price 价格</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        rdate 上架时间，日期类型</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        cid 外键，所属分类</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        */</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE tab_route(</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            rid INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            rname VARCHAR(100) NOT NULL UNIQUE,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            price DOUBLE,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            rdate DATE,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            cid INT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FOREIGN KEY (cid) REFERENCES tab_category(cid)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        /*创建用户表 tab_user</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        uid 用户主键，自增长</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        username 用户名长度 100，唯一，非空</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        password 密码长度 30，非空</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        name 真实姓名长度 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        birthday 生日</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        sex 性别，定长字符串 1</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        telephone 手机号，字符串 11</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        email 邮箱，字符串长度 100</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        */</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE tab_user (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            uid INT PRIMARY KEY AUTO_INCREMENT,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            username VARCHAR(100) UNIQUE NOT NULL,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            PASSWORD VARCHAR(30) NOT NULL,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            NAME VARCHAR(100),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            birthday DATE,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            sex CHAR(1) DEFAULT &#39;男&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            telephone VARCHAR(11),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            email VARCHAR(100)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        /*</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        创建收藏表 tab_favorite</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        rid 旅游线路 id，外键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        date 收藏时间</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        uid 用户 id，外键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        rid 和 uid 不能重复，设置复合主键，同一个用户不能收藏同一个线路两次</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        */</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        CREATE TABLE tab_favorite (</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            rid INT, -- 线路id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            DATE DATETIME,</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            uid INT, -- 用户id</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            -- 创建复合主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            PRIMARY KEY(rid,uid), -- 联合主键</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FOREIGN KEY (rid) REFERENCES tab_route(rid),</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            FOREIGN KEY(uid) REFERENCES tab_user(uid)</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        );</span></span></code></pre></div><p>​\t\t<br>​\t2. 数据库设计的范式<br>​\t\t* 概念：设计数据库时，需要遵循的一些规范。要遵循后边的范式要求，必须先遵循前边的所有范式要求<br>​\t<br>​\t\t\t设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求被称为不同的范式，各种范式呈递次规范，越高的范式数据库冗余越小。<br>​\t\t\t目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称完美范式）。<br>​\t<br>        * 分类：<br>            1. 第一范式（1NF）：每一列都是不可分割的原子数据项<br>            2. 第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于码（在1NF基础上消除非主属性对主码的部分函数依赖）<br>                * 几个概念：<br>                    1. 函数依赖：A–&gt;B,如果通过A属性(属性组)的值，可以确定唯一B属性的值。则称B依赖于A<br>                        例如：学号–&gt;姓名。  （学号，课程名称） –&gt; 分数<br>                    2. 完全函数依赖：A–&gt;B， 如果A是一个属性组，则B属性值得确定需要依赖于A属性组中所有的属性值。<br>                        例如：（学号，课程名称） –&gt; 分数<br>                    3. 部分函数依赖：A–&gt;B， 如果A是一个属性组，则B属性值得确定只需要依赖于A属性组中某一些值即可。<br>                        例如：（学号，课程名称） – &gt; 姓名<br>                    4. 传递函数依赖：A–&gt;B, B – &gt;C . 如果通过A属性(属性组)的值，可以确定唯一B属性的值，在通过B属性（属性组）的值可以确定唯一C属性的值，则称 C 传递函数依赖于A<br>                        例如：学号–&gt;系名，系名–&gt;系主任<br>                    5. 码：如果在一张表中，一个属性或属性组，被其他所有属性所完全依赖，则称这个属性(属性组)为该表的码<br>                        例如：该表中码为：（学号，课程名称）<br>                        * 主属性：码属性组中的所有属性<br>                        * 非主属性：除过码属性组的属性</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">        3. 第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）</span></span></code></pre></div><h2 id=\"数据库的备份和还原\"><a href=\"#数据库的备份和还原\" class=\"headerlink\" title=\"数据库的备份和还原\"></a>数据库的备份和还原</h2><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">1. 命令行：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    * 语法：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 备份： mysqldump -u用户名 -p密码 数据库名称 &gt; 保存的路径</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        * 还原：</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            1. 登录数据库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            2. 创建数据库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            3. 使用数据库</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">            4. 执行文件。source 文件路径</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">2. 图形化工具：</span></span></code></pre></div>","feature":null,"text":"3-DQL查询语句、约束、多表关系、范式、数据库备份和还原txt1. DQL:查询语句 1. 排序查询 2. 聚合函数 3. 分组查询 4. 分页查询 2. 约...","permalink":"/post/3-DQL查询语句、约束、多表关系、范式、数据库备份和还原","photos":[],"count_time":{"symbolsCount":"7.6k","symbolsTime":"7 mins."},"categories":[{"name":"mysql","slug":"mysql","count":3,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-DQL%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E3%80%81%E7%BA%A6%E6%9D%9F%E3%80%81%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB%E3%80%81%E8%8C%83%E5%BC%8F%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F\"><span class=\"toc-text\">3-DQL查询语句、约束、多表关系、范式、数据库备份和还原</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#DQL-%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">DQL:查询语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">约束</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">数据库的设计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E8%BF%98%E5%8E%9F\"><span class=\"toc-text\">数据库的备份和还原</span></a></li></ol></li></ol>","author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Linux","uid":"3fe1ee3f3830128bf539e5f4ed9fbbe9","slug":"Linux","date":"2024-05-26T12:13:16.439Z","updated":"2024-05-29T15:19:21.465Z","comments":true,"path":"api/articles/Linux.json","keywords":null,"cover":[],"text":"Linux 1234567891011121314151617181920/（根目录）：文件系统的根目录，所有其他目录和文件都位于此目录下。/bin（Binar...","permalink":"/post/Linux","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null},"next_post":{"title":"2-DQL多表查询、事务、DCL(管理用户和授权)","uid":"9c31673e0471abc8c04ba8eee1f127f7","slug":"2-DQL多表查询、事务、DCL(管理用户和授权)","date":"2024-05-01T11:43:02.714Z","updated":"2024-05-01T11:41:16.830Z","comments":true,"path":"api/articles/2-DQL多表查询、事务、DCL(管理用户和授权).json","keywords":null,"cover":null,"text":"2-DQL多表查询、事务、DCL(管理用户和授权)txt1. 多表查询 2. 事务 3. DCL多表查询：txt* 查询语法： select 列名列表 from...","permalink":"/post/2-DQL多表查询、事务、DCL(管理用户和授权)","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"mysql","slug":"mysql","count":3,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":3,"path":"api/tags/mysql.json"}],"author":{"name":"Vegetabhl","slug":"blog-author","avatar":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/avatar_1.jpg","link":"/","description":"--欢迎来到小卜同学的小破站--     Welcome to Xiaobu’s little website","socials":{"github":"https://github.com/Vegetabhl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/398361872"},"wechat":{"icon":"/svg/wx.svg","link":"https://raw.githubusercontent.com/Vegetabhl/Images/master/img/wx.jpg"}}}},"feature":null}}